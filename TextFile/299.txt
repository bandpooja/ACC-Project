
Stack Overflow Blog https://stackoverflow.blog Essays, opinions, and advice on the act of computer programming from Stack Overflow. Tue, 30 Nov 2021 21:02:06 +0000 en-US hourly 1 https://stackoverflow.blog/wp-content/uploads/2017/03/cropped-SO_Logo_glyph-use-this-one-smaller-32x32.jpg Stack Overflow Blog https://stackoverflow.blog 32 32 162153688 Podcast 396: Does modern parenting require spyware? https://stackoverflow.blog/2021/11/30/podcast-396-does-modern-parenting-require-spyware/ https://stackoverflow.blog/2021/11/30/podcast-396-does-modern-parenting-require-spyware/#respond Ben Popper Tue, 30 Nov 2021 05:40:00 +0000 The Stack Overflow Podcast monitoring se-stackoverflow se-tech spyware survelliance the stack overflow podcast https://stackoverflow.blog/?p=19163 <p>Should developers build tools for parents to monitor every aspect of their children's digital lives? </p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/11/30/podcast-396-does-modern-parenting-require-spyware/">Podcast 396: Does modern parenting require spyware?</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 
<iframe loading="lazy" height="200px" width="100%" frameborder="no" scrolling="no" seamless src="https://player.simplecast.com/d288cff3-dbaf-4426-b380-53351e42861b?dark=false"></iframe>



<p>In this episode, Ben and Ryan chat about the tools available to parents who want to keep tabs on their kids while they are playing games or using apps. What roles do developers play in determining the ethics of these situations, and how do software savvy adults manage child rearing in an era where life is increasingly lived online?</p>



<p>The conversation was inspired by&nbsp;<a href="https://www.epicgames.com/site/ar/news/epic-games-and-superawesome-offer-free-parent-verification-for-all-developers">Epic&#8217;s decision</a>&nbsp;to make it&#8217;s Kid&#8217;s Web Service&#8217;s parent verification free to all developers.</p>



<p>Ben has been grappling with these questions since 2013, when he wrote&nbsp;<a href="https://www.theverge.com/2013/9/3/4660216/is-technology-scrambling-my-babys-brain">about allowing screen time</a>&nbsp;into his young son&#8217;s life.&nbsp;</p>



<p>One thing that old article does remind us; how incredibly&nbsp;<a href="https://www.theverge.com/2015/7/12/8935643/thick-heavy-nearly-indestructible-in-praise-of-the-original-ipad">indestructible the original iPad was</a>. A true tank of a tablet!</p>



<p>Thanks to our lifeboat badge winner of the week, javimuu, for explaining: <a href="https://stackoverflow.com/questions/42129816/get-thumbail-preview-image-from-server-video-url-in-swift-3-0/42130171#42130171">How to get a Thumbail / Preview image from Server Video Url in Swift 3.0</a></p>



<p><a href="https://the-stack-overflow-podcast.simplecast.com/episodes/parenting-kids-spyware-survelliance-monitoring/transcript/">TRANSCRIPT</a></p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/11/30/podcast-396-does-modern-parenting-require-spyware/">Podcast 396: Does modern parenting require spyware?</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 https://stackoverflow.blog/2021/11/30/podcast-396-does-modern-parenting-require-spyware/feed/ 0 19163 The four engineering metrics that will streamline your software delivery https://stackoverflow.blog/2021/11/29/the-four-engineering-metrics-that-will-streamline-your-software-delivery/ https://stackoverflow.blog/2021/11/29/the-four-engineering-metrics-that-will-streamline-your-software-delivery/#comments Tanaka Mutakwa Mon, 29 Nov 2021 16:16:57 +0000 Code for a Living productivity se-stackoverflow se-tech software delivery https://stackoverflow.blog/?p=19160 <p>Productive teams get product fixes and features out the door fast. Here's the metrics to check to see how your team is delivering. </p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/11/29/the-four-engineering-metrics-that-will-streamline-your-software-delivery/">The four engineering metrics that will streamline your software delivery</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 
<p>Measuring the <a href="https://stackoverflow.blog/2020/12/07/measuring-developer-productivity/">performance of software engineering teams</a> has long been seen as a complicated, daunting task. This is particularly true as software becomes more complex and more decentralized.&nbsp;</p>



<p>To deliver better software, engineering teams need the visibility, data, and decisions to continuously improve. The applications that software engineering teams use to manage their processes and release their software have access to more data than ever before. Teams can use this data to measure their performance—if they know what data most accurately reflects team performance.</p>



<p>The <a href="https://www.devops-research.com/research.html">DevOps Research and Assessment</a> (DORA) team at Google designed a six-year program to understand what sets high-performing software engineering teams apart from low-performing software engineering teams. They surveyed thousands of teams across multiple industries to measure and understand DevOps practices and capabilities. It is the longest-running academically rigorous investigation of its kind, providing visibility into what drives high performance in technology delivery and, ultimately, organizational outcomes.</p>



<p>The DORA team had two hypotheses that they wanted to validate:</p>



<ol><li>Software engineering team performance can be measured in a meaningful way.&nbsp;</li><li>High-performing software engineering teams (based on the measures they found) can predict wider organizational performance. In simple terms, high-performing teams bring high value to organizations.&nbsp;</li></ol>



<p>DORA found that high-performing organizations focused on engineering outcomes over outputs and teams over individuals. From the research, they identified four key metrics that indicate the performance of a software engineering team:</p>



<ol><li>Deployment frequency</li><li>Mean change lead time</li><li>Mean time to restore</li><li>Change failure rate</li></ol>



<p>These metrics provide a data-driven approach to analyzing and improving performance based on real research. DORA used these metrics to identify <a href="https://rollbar.com/blog/accelerating-code-quality-with-dora-metrics/#:~:text=What%20Are%20the%20Four%20Key%20Metrics%20DORA%20Identified%3F">elite, high, medium, and low performing teams</a>. Their research found that elite teams were twice as likely than low performing teams to achieve or surpass their organizational performance goals.</p>



<p>Let’s dive a bit deeper into these four metrics to understand how focusing on them can help teams deliver software faster and more effectively.&nbsp;</p>



<h2 id="h-the-dora-engineering-metrics">The DORA engineering metrics</h2>



<p>At a high level, the DORA engineering metrics measure the velocity of a software engineering team and the stability of the software they build and release. If a team can constantly improve on these metrics, they can release higher-quality software to customers more quickly.&nbsp;</p>



<p>For each of the four DORA engineering metrics below, we’ll cover what the metric is, how it’s calculated, why it matters, how to improve it, and the target value for an elite team.</p>



<h3 id="h-deployment-frequency">Deployment frequency</h3>



<p>Deployment frequency is how often a software engineering team deploys code to production. This important metric can serve as a proxy for how often a team provides new value to customers.&nbsp;</p>



<p>Continuous delivery and shipping code as fast, small, frequent deployments are key components of DevOps. Deployment frequency reveals how efficient a team’s working and releasing processes are. For example, if deployment frequency slows down, that might indicate an issue with a new workflow. Measuring deployment frequency can reveal the wider impacts of change to team structure, personnel, or process. Measuring deployment frequency alongside other metrics ensures the changes being deployed add real value for customers.&nbsp;</p>



<p>Deployment frequency is usually reported in deployments per day. You can automate this measurement by pulling data from your team’s continuous integration/continuous delivery tools.</p>



<p>There are a few practices a software engineering team can adopt to improve their deployment frequency:&nbsp;</p>



<ul><li>Reduce the size of each batch of work so a team can ship smaller pieces of work more frequently. Another advantage: Less-risky deployments that can be easily tracked or rolled back&nbsp; should there be an issue.&nbsp;</li><li>Integrate with continuous integration/continuous delivery tools to improve the efficiency of your release process.&nbsp;</li><li>Use automated tests to increase confidence in code quality and reduce the requirement for slow manual testing before deploying new changes to production.&nbsp;&nbsp;</li></ul>



<p>An elite team deploys changes to production multiple times per day to continuously add value for customers.&nbsp;</p>



<h3 id="h-mean-change-lead-time">Mean change lead time</h3>



<p>Change lead time (also known as cycle time) is the time it takes from code being committed to code successfully running . It allows you to track the pace of a software engineering team. Faster teams have optimized processes and can get new features to market faster. This increased efficiency opens up opportunities to increase organization revenue, improve customer renewal rates, and create a happy and efficient team. On the other hand, slower delivery means there is waste or inefficiency in the process, causing delays for customers.</p>



<p>Measuring change lead time also helps teams identify bottlenecks in their workflow, so they can optimize and improve.</p>



<p>Mean change lead time is calculated by tracking the time between each code commit to the code being delivered in production and calculating an average.</p>



<p>What steps can software engineering teams take to improve their mean change lead time?</p>



<ul><li>Integrate testing into the development process.</li><li>Automate tests instead of manually testing.</li><li>Integrate with continuous integration/continuous delivery tools&nbsp;</li><li>Streamline the code review process to reduce delays.</li></ul>



<p>An elite teams have a mean change lead time as low as one hour. </p>



<h3 id="h-mean-time-to-recovery">Mean time to recovery</h3>



<p>Mean time to recovery measures how quickly a software engineering team recovers from a failure. A failure is anything that interrupts the expected production service quality, from a new bug introduced in deployment to a hosting infrastructure going down. Mean time to recovery indicates how quickly a software engineering team can understand and resolve problems that occur in production. Downtime is never good for customers. A low mean time to recovery gives teams confidence that if production is impacted, it can be quickly restored to a functional state.&nbsp;</p>



<p>Mean time to recovery is calculated by tracking the average time between a production bug or failure being reported and that issue being fixed.&nbsp;</p>



<p>Here are some ways a software engineering team can improve their mean time to recovery:</p>



<ul><li>Introduce monitoring tools that quickly report failures in production.&nbsp;</li><li>Implement a robust <a href="https://increment.com/on-call/">on-call</a> and<a href="https://stackoverflow.blog/2021/03/18/creating-a-good-feedback-loop-between-ops-and-devs-using-documentation/"> support documentation</a> system.&nbsp;</li><li>Improve deployment time so fixed issues can be quickly released to production.&nbsp;</li><li>Use feature flags that allow you to turn on/off features in production with the click of a button. This can reduce the mean time to recovery to seconds.&nbsp;&nbsp;</li></ul>



<p>An elite team aims to have a mean time to recovery of less than one hour.&nbsp;</p>



<h3 id="h-change-failure-rate">Change failure rate</h3>



<p>Change failure rate measures how often a software engineering team releases a change to production that causes a failure. These are changes that lead to a bug or have to be rolled back because they did not meet customers’ expectations. This metric indicates the quality of the software a team builds. Fixing bugs and rolling back code is a costly exercise as it takes away from time that could be spent building new features that add value for customers, so a high change failure rate suggests lower-quality software that frustrates customers.&nbsp;</p>



<p>Change failure rate is calculated as a percentage. It is the ratio of the number of failures per number of deployments to production.&nbsp;</p>



<p>Software engineering teams can implement these practices to improve their change failure rate:</p>



<ul><li>Introduce automated code review tools to catch issues that manual code reviews miss.&nbsp;</li><li>Add automated tests for all new code.&nbsp;</li><li>Run all automated tests as part of the release process using continuous integration/continuous delivery tools.</li><li>Introduce incident retrospectives so the team can understand what caused an incident and work to ensure it does not happen again.&nbsp;</li></ul>



<p>An elite team aims to have a change failure rate between zero and 15%.&nbsp;</p>



<p>Of course, these aren’t the only metrics you can consider when assessing the performance of a software engineering teams. Many other metrics that you can track can provide insight into your team’s performance. However, DORA found that these four metrics were the <em>most </em>correlated with wider organizational success.</p>



<h2 id="h-a-word-of-caution">A word of caution</h2>



<p>The four DORA metrics seem straightforward, but when used incorrectly, they can create problems.</p>



<p>Every team that uses the DORA engineering metrics exists within its own context, and its product/service will be different from other teams. The metrics should be used to help individual teams continuously improve their delivery. An anti-pattern is using the metrics to rate your teams against each other. This is unfair, because each team’s context and starting point is different. </p>



<p>Consider all four metrics together rather than focusing on a subset. The metrics are intended to balance speed and quality, so zeroing in on a subset may lead to worse performance. For example, a high deployment frequency can negatively impact quality if many of the changes you are releasing have bugs.&nbsp;</p>



<p>These metrics shouldn’t consume your teams, becoming the only things they focus on.. Improving metrics should never be your main goal. <a href="https://en.wikipedia.org/wiki/Goodhart%27s_law">Goodhart’s law</a> says, “Any measure that becomes a target ceases to become a good measure.” The goal should be to constantly, effectively deliver value to the customer, using the metrics to reflect your team’s progress toward that goal</p>



<p>Finally, ensure that the DORA engineering metrics do not become vanity metrics that display numbers but give no obvious clue about what action to take. If a team is deploying 100 times, what does that mean? Was it 100 times in a day, a week, a year? Has that number improved since the last measure? How can it be improved? Are other metrics suffering? The DORA metrics help teams assess and improve their performance, but in order for teams to take meaningful action, they need to understand what the metrics do (and don’t) indicate in context.</p>



<h2 id="h-final-thoughts">Final thoughts</h2>



<p>Software engineering teams are constantly looking for ways to improve their processes and delivery. For many years, teams have lacked an objective, meaningful way to measure their performance. The DORA team wants to change that by focusing on the metrics that not only indicate how a team is performing but also reveal important clues about the organization’s overall health.</p>



<p>How would your team fare with the respect to the four DORA metrics? What does that say about your organization?</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/11/29/the-four-engineering-metrics-that-will-streamline-your-software-delivery/">The four engineering metrics that will streamline your software delivery</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 https://stackoverflow.blog/2021/11/29/the-four-engineering-metrics-that-will-streamline-your-software-delivery/feed/ 1 19160 The Overflow #101: Invest in your favorite developer https://stackoverflow.blog/2021/11/26/the-overflow-101-invest-in-your-favorite-developer/ https://stackoverflow.blog/2021/11/26/the-overflow-101-invest-in-your-favorite-developer/#respond Ryan Donovan and Cassidy Williams Fri, 26 Nov 2021 13:32:00 +0000 The Overflow newsletter the overflow https://stackoverflow.blog/?p=19158 <p>Welcome to ISSUE #101 of The Overflow! This newsletter is by developers, for developers, written and curated by the Stack Overflow team and&#160;Cassidy Williams&#160;at&#160;Netlify. This week: QA for deep learning pipelines, getting efficient with summation formulas, and finding the point where a table is too big. From the blog Building a QA process for your…</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/11/26/the-overflow-101-invest-in-your-favorite-developer/">The Overflow #101: Invest in your favorite developer</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 
<p>Welcome to ISSUE #101 of The Overflow! This newsletter is by developers, for developers, written and curated by the Stack Overflow team and&nbsp;<a href="https://itr-links.stackoverflow.email/u/click?_t=3603a3d8f3104ca5bd7015a5845f7fb7&amp;_m=EoL62DB0PIGuXz8jH5uBuQ84lXlHlps2&amp;_e=_QiVw4xkxL6Kq_I-OU4afBnKfI77FjoIfX88HTVRZxPuTd2bnAMrrH9rcbsb0dWeVEF1qnpHf4xYVNc9DjG8B3SxoCwGD7YNwE1j5XUlAoVN5IWubZGRkJQZDmmaOZBv48jI4i91xWdFCil-LQ1NSRFjmqF5DoNWqj0-C-Jd-e6BG04-YOMtUtGjjvW4FlO4SiDdPs_9w2phRLlieyDSowbBJXd8neaip9JCBAeEhORiLVYGsioAE1W0vQlkjGKF">Cassidy Williams</a>&nbsp;at&nbsp;<a href="https://itr-links.stackoverflow.email/u/click?_t=3603a3d8f3104ca5bd7015a5845f7fb7&amp;_m=EoL62DB0PIGuXz8jH5uBuQ84lXlHlps2&amp;_e=_QiVw4xkxL6Kq_I-OU4afOZOM0oCqsuuy0jKIrvb1QwkHWIZOMWNPCK6iuSTMOLeVDuTWeKOcbbyBczybLGtoNQkE84uGWTIEgGhFcxEULL45YJLR4857Ii-0ehWwRpRtjVPtwUxxOtY9-B2oCRv3dmx-KEES0t57P4_TNE4xFT-W5TGiXBreKWRyHfSL-Ozr796X8rmwbKE4P01pm8iSRIwfptm3apXxzvS_usQlDNLQGeGDgkjk55n1OBtvYt6oHij-wFSi5PdDR16hvrYr7E3MKhupgD-zGOVEWxRdxJ-RcBKrj9bAExDUmk948bZeThbs8xuJpwrwNDQkq5QPw%3D%3D">Netlify</a>. This week: QA for deep learning pipelines, getting efficient with summation formulas, and finding the point where a table is too big.</p>



<h2 id="h-from-the-blog">From the blog</h2>



<p><a href="https://stackoverflow.blog/2021/11/15/building-a-qa-process-for-your-deep-learning-pipeline-in-practice/?utm_source=Iterable&amp;utm_medium=email&amp;utm_campaign=the_overflow_newsletter"><strong>Building a QA process for your deep learning pipeline in practice</strong></a>&nbsp;<em>stackoverflow.blog</em><br>Deep learning models still need testing, but many of the common testing approaches don’t apply. With the right methods, you can still make sure your pipeline produces good results.</p>



<p><a href="https://stackoverflow.blog/2021/11/17/introducing-content-health-a-new-way-to-keep-the-knowledge-base-up-to-date/?utm_source=Iterable&amp;utm_medium=email&amp;utm_campaign=the_overflow_newsletter"><strong>Introducing Content Health, a new way to keep your knowledge base up-to-date</strong></a>&nbsp;<em>stackoverflow.blog</em><br>We’re thrilled to announce a new and foundational feature, Content Health, that intelligently identifies potentially outdated or inaccurate knowledge.</p>



<p><a href="https://stackoverflow.blog/2021/11/19/podcast-394-can-the-economic-value-of-software-platforms-flow-mostly-to-the-users/?utm_source=Iterable&amp;utm_medium=email&amp;utm_campaign=the_overflow_newsletter"><strong>Podcast 394: What if you could invest in your favorite developer?</strong></a>&nbsp;<em>stackoverflow.blog</em><br>Get your Benjamins before they blow up.</p>



<p><a href="https://www.splunk.com/en_us/form/beginners-guide-to-observability.html?utm_source=stackoverflow&amp;utm_medium=display&amp;utm_campaign=Nov_SO_eNewsletter&amp;utm_content=IT_Observability_EB"><strong>[Free eBook] A Beginner’s Guide to Observability</strong></a>&nbsp;<em>promotion</em><br>In this eBook we’ll define what observability is and what it takes to achieve it. Learn how observability helps you tame complexity and reduce MTTR, as well as how to build observability into your application environment. Pay attention to the overall system, not each and every component of it.</p>



<h2 id="h-interesting-questions">Interesting questions</h2>



<p><a href="https://stackoverflow.com/questions/69864793/efficient-summation-in-python?utm_source=Iterable&amp;utm_medium=email&amp;utm_campaign=the_overflow_newsletter"><strong>Efficient summation in Python</strong></a>&nbsp;<em>stackoverflow.com</em><br>Look for efficiencies in the summation formula, not in the code that calculates it.</p>



<p><a href="https://security.stackexchange.com/questions/256886/after-a-password-leak-is-there-a-levenshtein-distance-from-which-one-a-newly-de?utm_source=Iterable&amp;utm_medium=email&amp;utm_campaign=the_overflow_newsletter"><strong>After a password leak, is there a Levenshtein distance from which one a newly derived password can be considered safe?</strong></a>&nbsp;<em>security.stackexchange.com</em><br>In this case, distancing isn’t a measure of how safe you are.</p>



<p><a href="https://law.stackexchange.com/questions/74396/artificial-intelligence-and-law?utm_source=Iterable&amp;utm_medium=email&amp;utm_campaign=the_overflow_newsletter"><strong>Artificial intelligence and law</strong></a>&nbsp;<em>law.stackexchange.com</em><br>“Error is not always wrongdoing.”</p>



<p><a href="https://retrocomputing.stackexchange.com/questions/22234/how-did-early-computers-handle-mice?utm_source=Iterable&amp;utm_medium=email&amp;utm_campaign=the_overflow_newsletter"><strong>How did early computers handle mice?</strong></a>&nbsp;<em>retrocomputing.stackexchange.com</em><br>Real-time mouse tracking is overrated.&nbsp;</p>



<h2 id="h-links-from-around-the-web">Links from around the web</h2>



<p><a href="https://certitude.consulting/blog/en/invisible-backdoor/"><strong>The invisible JavaScript backdoor</strong></a>&nbsp;<em>certitude.consulting</em><br>Halloween is long gone, but that doesn’t mean spooky JavaScript went away!</p>



<p><a href="https://github.com/reactwg/react-18/discussions/112"><strong>React 18 is now in beta</strong></a>&nbsp;<em>github.com</em><br>React 18 is officially in beta! This means that no new APIs will be added, and you can try it out now.</p>



<p><a href="https://connor-mcdonald.com/2021/11/13/when-does-a-table-become-too-big/"><strong>When does a table become too big?</strong></a>&nbsp;<em>connor-mcdonald.com</em><br>What started as an interesting question from&nbsp;<a href="https://twitter.com/techgirl1908">Angie Jones</a>&nbsp;has turned into quite the conversation amongst developers: how do tables stand up to really, really large numbers?</p>



<p><a href="https://dev.to/sumusiriwardana/if-else-or-switch-case-which-one-to-pick-4p3h"><strong>If-else or switch-case: Which one to pick?</strong></a>&nbsp;<em>dev.to</em><br>This is a wonderful beginner-friendly article about the differences between if/else statements versus switch statements, and when to use both!</p>



<p>Onboard, organize, and bring your team up to speed in a jiffy.&nbsp;<a target="_blank" rel="noreferrer noopener" href="https://itr-links.stackoverflow.email/u/click?_t=3603a3d8f3104ca5bd7015a5845f7fb7&amp;_m=J2j24lxDQTEuwPd5Cqu5ugxEP4Nup0Hd&amp;_e=tvjhMrv7atYcgrppTk1g939n0TOMqK8VK0FIJna3k3KJASzVGae_sX5sf3KPi1hf2i5bxdA9xhH1f-iiMOO7ZFhn7xzAMFIbYnBhpTVT4YaVxNFzFGdAHiiEmx7YErIIVxBKkYUg6iknFjIhWONGTkIJn8IqBwnVV0l3yY7ScIAISOmXKMdnUAqYDRZbTBMJIkKY_QpH6yZNU_eh54wXqDW8Wpo2teMbvQF4Xm7qqXJd83J9ZY2IcjPlLJTDAm59hcKcidFcXov0SI1SA2sdJyQvN3-FBHLcc6AOGJQuveBkeTVp2-deuu3Ntnjx81ZzrM2rO56BYZb0_0JMMxOo0T1dQmOSzvTyeYRljnArFYMAOnBwZPb7gsBCwG0r13Z9YZh9Whu6zwJWSvKiJLX8Eg%3D%3D">Try Stack Overflow for Teams</a>.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/11/26/the-overflow-101-invest-in-your-favorite-developer/">The Overflow #101: Invest in your favorite developer</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 https://stackoverflow.blog/2021/11/26/the-overflow-101-invest-in-your-favorite-developer/feed/ 0 19158 Exploding turkeys and how not to thaw your frozen bird: Top turkey questions from our Cooking Stack Exchange https://stackoverflow.blog/2021/11/24/exploding-turkeys-and-how-not-to-thaw-your-frozen-bird-top-turkey-questions-from-our-cooking-stack-exchange/ https://stackoverflow.blog/2021/11/24/exploding-turkeys-and-how-not-to-thaw-your-frozen-bird-top-turkey-questions-from-our-cooking-stack-exchange/#comments Eira May Wed, 24 Nov 2021 15:00:00 +0000 Cooking Stackexchange cooking se-cooking se-stackoverflow se-tech https://stackoverflow.blog/?p=19143 <p>You’ve got questions, we’ve got Seasoned Advice on how to prepare the perfect Thanksgiving meal.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/11/24/exploding-turkeys-and-how-not-to-thaw-your-frozen-bird-top-turkey-questions-from-our-cooking-stack-exchange/">Exploding turkeys and how not to thaw your frozen bird: Top turkey questions from our Cooking Stack Exchange</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 
<p>Tomorrow is Thanksgiving Day in the US, better known in some circles as Turkey Day. The traditional Thanksgiving meal is—you guessed it—turkey. If you’re prepping a bird for tomorrow, this roundup of turkey-related questions on <a href="https://cooking.stackexchange.com/">Seasoned </a><a href="https://cooking.stackexchange.com/" target="_blank" rel="noreferrer noopener">Advice</a> will make sure your bird gets a good word. From basics like ensuring food safety and calculating serving sizes to more advanced considerations, like whether your dryer can jumpstart your thawing process, this list has everything you need.</p>



<p>(Of course, you can always call <a href="https://www.butterball.com/about-us/turkey-talk-line" target="_blank" rel="noreferrer noopener">the Butterball hotline</a>, <a href="https://www.youtube.com/watch?v=zQsvcs9IB8A&amp;ab_channel=FelixJung" target="_blank" rel="noreferrer noopener">a presidential favorite</a>.)</p>



<p>Let&#8217;s get started!</p>



<p><a href="https://cooking.stackexchange.com/questions/9238/how-long-will-a-whole-turkey-keep-in-a-refrigerator" target="_blank" rel="noreferrer noopener">How long will a whole turkey keep in a refrigerator?</a></p>



<p>“Every year the turkey trauma begins anew.”&nbsp;</p>



<p>Avoid any turkey-related trauma by making sure your bird doesn’t go bad. If you bought your turkey in advance, the safest option is to freeze it, then move it to the fridge to thaw well before cooking. Allow enough time for the turkey to defrost, or you might find yourself pouring over the answers to the next question.</p>



<p><a href="https://cooking.stackexchange.com/questions/39682/can-you-thaw-a-frozen-turkey-in-a-dryer" target="_blank" rel="noreferrer noopener">Can you thaw a frozen turkey in a dryer?</a></p>



<p>“The turkey would be [ruined], but I think you knew that.”</p>



<p>On an episode of the sitcom <em>New Girl</em>, characters try thawing a frozen turkey in a clothes dryer. It doesn’t work for them, and it won’t work for you, either. Not even if you add a rack to your dryer. Fortunately, Seasoned Advice offers <a href="https://cooking.stackexchange.com/questions/9509/what-are-the-options-for-thawing-a-frozen-turkey?rq=1" target="_blank" rel="noreferrer noopener">much better methods</a> for thawing your turkey, from defrosting it in the sink under cold running water to simply moving it to the fridge.</p>



<p><a href="https://cooking.stackexchange.com/questions/36861/how-much-turkey-should-i-plan-per-person" target="_blank" rel="noreferrer noopener">How much turkey should I plan per person?</a></p>



<p>“Note that this is for Americans at Thanksgiving.”</p>



<p>Like many answers, this one begins with, “It depends.” How many adults and children you’re serving, how many side dishes you’re planning, and how invested you are in those leftover turkey sandwiches will dictate how much meat you should plan per person.</p>



<p><a href="https://cooking.stackexchange.com/questions/8037/how-do-you-keep-turkey-from-getting-too-dry" target="_blank" rel="noreferrer noopener">How do you keep turkey from getting too dry?</a></p>



<p>The age-old question.</p>



<p>Brine your bird and roast it upside down for tender, tasty results. Another secret might be&#8230;bacon?</p>



<p><a href="https://cooking.stackexchange.com/questions/19023/how-do-i-safely-deep-fry-a-turkey" target="_blank" rel="noreferrer noopener">How do I safely deep-fry a turkey?</a></p>



<p>“What causes the explosions?”</p>



<p>Deep-frying a turkey can be dangerous because the hot oil can—ahem—overflow and ignite the burner during the turkey transfer process. Before you try it at home, learn how to avoid making your way into a <a href="https://www.youtube.com/watch?v=tSI79ZftCpU" target="_blank" rel="noreferrer noopener">YouTube compilation</a>. The main takeaways: Do it outside and turn off the burner.</p>



<p>Follow-up question: <a href="https://cooking.stackexchange.com/questions/39797/frying-a-turkey-while-snowing" target="_blank" rel="noreferrer noopener">What if it’s snowing?</a> Is it more dangerous to deep-fry a turkey in wet weather? Inquiring minds want to know.</p>



<p><a href="https://cooking.stackexchange.com/questions/19012/how-long-do-you-let-a-turkey-rest-after-cooking" target="_blank" rel="noreferrer noopener">How long do you let a turkey rest after cooking?</a></p>



<p>Welcome to the danger zone.</p>



<p>Gordon Ramsay recommends letting a turkey rest for the same amount of time that it cooked, but what if it cooked for three hours? Taste and temperature hang in the balance—not to mention food safety.</p>



<p><a href="https://cooking.stackexchange.com/questions/18861/what-is-the-ideal-fake-turkey-substitute-for-a-vegan-thanksgiving" target="_blank" rel="noreferrer noopener">What is the ideal fake turkey substitute for a vegan Thanksgiving?</a></p>



<p>Hail Seitan.</p>



<p>For a meat-free Thanksgiving turkey, Seasoned Advice recommends seitan, tofu, and/or a mashed-potato sculpture of a turkey with “feathers” made from carrots and celery. Sculpting a turkey sounds like more work than roasting one, but what do I know? I’m only here for the pie.</p>



<p><a href="https://cooking.stackexchange.com/questions/9555/why-did-my-turkey-stock-turn-into-gelatin" target="_blank" rel="noreferrer noopener">Why did my turkey stock turn into gelatin?</a></p>



<p>Because you did it right!</p>



<p>When you make stock, you’re simmering the bones to break down the collagen and turn it into gelatin, so a Jello-like substance is exactly what you want. Freeze the stock in a covered ice cube tray and pop out the frozen, meaty goodness to add richness and flavor to stir-frys and other dishes.</p>



<p>And for dessert:</p>



<p><a href="https://cooking.stackexchange.com/questions/39481/best-apples-for-apple-pie" target="_blank" rel="noreferrer noopener">Best apples for apple pie</a></p>



<p>Here’s a question with very few wrong answers. The consensus is that an optimally delicious pie uses more than one kind of apple, like a mix of Granny Smith, Golden Delicious, and Braeburn.</p>



<p>Unpopular opinion: I’d rather have rhubarb.</p>



<p>Happy Thanksgiving from Stack Overflow, and good luck in the kitchen!</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/11/24/exploding-turkeys-and-how-not-to-thaw-your-frozen-bird-top-turkey-questions-from-our-cooking-stack-exchange/">Exploding turkeys and how not to thaw your frozen bird: Top turkey questions from our Cooking Stack Exchange</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 https://stackoverflow.blog/2021/11/24/exploding-turkeys-and-how-not-to-thaw-your-frozen-bird-top-turkey-questions-from-our-cooking-stack-exchange/feed/ 1 19143 Podcast 395: Who is building clouds for the independent developer? https://stackoverflow.blog/2021/11/23/podcast-395-gabe-monroy-digital-ocean-cloud/ https://stackoverflow.blog/2021/11/23/podcast-395-gabe-monroy-digital-ocean-cloud/#respond Ben Popper Tue, 23 Nov 2021 05:40:00 +0000 The Stack Overflow Podcast kubernetes se-stackoverflow se-tech the stack overflow podcast https://stackoverflow.blog/?p=19139 <p>Big enterprise clients looking for "lift and shift" are lucrative clients in the cloud market. But there are also millions of independent developers who need cloud tech at their scale.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/11/23/podcast-395-gabe-monroy-digital-ocean-cloud/">Podcast 395: Who is building clouds for the independent developer?</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 
<iframe loading="lazy" height="200px" width="100%" frameborder="no" scrolling="no" seamless src="https://player.simplecast.com/d07cd690-3f2b-4270-bc13-2a249c184a35?dark=false"></iframe>



<p>We chat with <a href="https://investors.digitalocean.com/news/news-details/2021/DigitalOcean-Names-Gabe-Monroy-as-Chief-Product-Officer/default.aspx">Gabe Monroy</a>, the new chief product officer at <strong><a href="https://www.digitalocean.com/">DigitalOcean</a></strong>, about the customers big cloud companies are missing, how to get ready for the millions of new developers poised to enter the market, and the near-universal relevance of XKCD.</p>



<h2 id="h-episode-notes">Episode Notes</h2>



<p>We kick things off by weighing the merits of two gender-neutral regional pronouns: the familiar&nbsp;<a href="https://en.wikipedia.org/wiki/Y%27all">y’all</a>&nbsp;and the under appreciated&nbsp;<a href="https://en.wikipedia.org/wiki/Yinz">yinz</a>. Now that’s covered&#8230;</p>



<p>The global population of developers will hit 45 million by 2030, up from 26.9 million in 2021 (<a href="https://evansdata.com/reports/viewRelease.php?reportID=9">EDC</a>). What&nbsp;<a href="https://www.digitalocean.com/try/developer-brand">platforms</a>&nbsp;will they want to build on?</p>



<p>Did&nbsp;<a href="https://stackoverflow.blog/2020/05/29/why-kubernetes-getting-so-popular/">Kubernetes</a>&nbsp;solve all your problems? Did it create new ones?</p>



<p>It seems there’s always an XKCD relevant to our conversation. Today, it’s <a href="https://xkcd.com/927/">How standards proliferate</a>.</p>



<p><a href="https://the-stack-overflow-podcast.simplecast.com/episodes/gabe-monroy-digital-ocean-developer-cloud/transcript/">TRANSCRIPT</a></p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/11/23/podcast-395-gabe-monroy-digital-ocean-cloud/">Podcast 395: Who is building clouds for the independent developer?</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 https://stackoverflow.blog/2021/11/23/podcast-395-gabe-monroy-digital-ocean-cloud/feed/ 0 19139 Who owns this outage? Building intelligent escalation chains for modern SRE https://stackoverflow.blog/2021/11/22/who-owns-this-outage-building-intelligent-escalation-chains-for-modern-sre/ https://stackoverflow.blog/2021/11/22/who-owns-this-outage-building-intelligent-escalation-chains-for-modern-sre/#respond Ben Popper Mon, 22 Nov 2021 15:23:28 +0000 The Stack Overflow Podcast partnercontent runbook se-stackoverflow se-tech sponsored sre the stack overflow podcast https://stackoverflow.blog/?p=19134 <p>Before your organization can resolve an issue, it has to figure out who is on deck to respond.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/11/22/who-owns-this-outage-building-intelligent-escalation-chains-for-modern-sre/">Who owns this outage? Building intelligent escalation chains for modern SRE</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 
<iframe loading="lazy" height="200px" width="100%" frameborder="no" scrolling="no" seamless="" src="https://player.simplecast.com/9d7ea3a7-701c-4a45-b78e-48ef6c4737bf?dark=false"></iframe>



<p>If your organization is running code on a production server 24/7, you’re going to need a process to handle when that code—or the infrastructure it runs on—fails. No code is bug free, so failures will happen. That means that your SREs and developers are going to have to spend some time on call and ready to respond to when the application breaks down.&nbsp;</p>



<p>On this sponsored episode of the podcast, we talk to Eric Maxwell, a solution architect at xMatters. He took a winding road to get to where he is: after a computer engineering education, he held jobs as field support engineer, product manager, SRE, and finally his current role as a solutions architect, where he serves as something of an SRE for SREs, helping them solve incident management problems with the help of xMatters.&nbsp;</p>



<p>When he moved to the SRE role, Maxwell wanted to get back to doing technical work. It was a lateral move within his company, which was migrating an on-prem solution into the cloud. It’s a journey that plenty of companies are making now: breaking an application into microservices, running processes in containers, and using Kubernetes to orchestrate the whole thing. Non-production environments would go down and waste SRE time, making it harder to address problems in the production pipeline.&nbsp;</p>



<p>At the heart of their issues was the incident response process. They had several bottlenecks that prevented them from delivering value to their customers quickly. Incidents would send emails to the relevant engineers, sometimes 20 on a single email, which made it easy for any one engineer to ignore the problem—someone else has got this. They had a bad silo problem, where escalating to the right person across groups became an issue of its own. And of course, most of this was manual. Their MTTR—mean time to resolve—was lagging.&nbsp;</p>



<p>Maxwell moved over to xMatters because they managed to solve these problems through clever automation. Their product automates the scheduling and notification process so that the right person knows about the incident as soon as possible. At the core of this process was a different MTTR—mean time to respond. Once an engineer started working to resolve a problem, it was all down to runbooks and skill. But the lag between the initial incident and that start was the real slowdown.&nbsp;</p>



<p>It’s not just the response from the first SRE on call. It’s the other escalations down the line—to data engineers, for example—that can eat away time. They’ve worked hard to make&nbsp; escalation configuration easy. It not only handles who&#8217;s responsible for specific services and metrics, but who’s in the escalation chain from there. When the incident hits, the notifications go out through a series of configured channels; maybe it tries a chat program first, then email, then SMS.&nbsp;</p>



<p>The on-call process is often a source of dread, but automating the escalation process can take some of the sting out of it. Check out the episode to learn more. </p>



<p><a href="https://the-stack-overflow-podcast.simplecast.com/episodes/xmatters-sre-mttr-incident-response/transcript/">TRANSCRIPT</a></p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/11/22/who-owns-this-outage-building-intelligent-escalation-chains-for-modern-sre/">Who owns this outage? Building intelligent escalation chains for modern SRE</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 https://stackoverflow.blog/2021/11/22/who-owns-this-outage-building-intelligent-escalation-chains-for-modern-sre/feed/ 0 19134 The Overflow #100! Web3! .NET 6! We love numbers! https://stackoverflow.blog/2021/11/19/the-overflow-100-web3-net-6-we-love-numbers/ https://stackoverflow.blog/2021/11/19/the-overflow-100-web3-net-6-we-love-numbers/#respond Ryan Donovan and Cassidy Williams Fri, 19 Nov 2021 14:00:00 +0000 The Overflow newsletter the overflow https://stackoverflow.blog/?p=19124 <p>Welcome to ISSUE #100 of The Overflow! We think that’s a pretty big deal, but everyone using binary isn’t as impressed. This newsletter is by developers, for developers, written and curated by the Stack Overflow team and&#160;Cassidy Williams&#160;at&#160;Netlify. This week: systematizing the interface design for 3D spaces, a quirk of document.all that shows up when…</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/11/19/the-overflow-100-web3-net-6-we-love-numbers/">The Overflow #100! Web3! .NET 6! We love numbers!</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 
<p>Welcome to ISSUE #100 of The Overflow! We think that’s a pretty big deal, but everyone using binary isn’t as impressed. This newsletter is by developers, for developers, written and curated by the Stack Overflow team and&nbsp;<a href="https://itr-links.stackoverflow.email/u/click?_t=3603a3d8f3104ca5bd7015a5845f7fb7&amp;_m=EoL62DB0PIGuXz8jH5uBuQ84lXlHlps2&amp;_e=_QiVw4xkxL6Kq_I-OU4afBnKfI77FjoIfX88HTVRZxPuTd2bnAMrrH9rcbsb0dWeVEF1qnpHf4xYVNc9DjG8B3SxoCwGD7YNwE1j5XUlAoVN5IWubZGRkJQZDmmaOZBv48jI4i91xWdFCil-LQ1NSRFjmqF5DoNWqj0-C-Jd-e6BG04-YOMtUtGjjvW4FlO4SiDdPs_9w2phRLlieyDSowbBJXd8neaip9JCBAeEhORiLVYGsioAE1W0vQlkjGKF">Cassidy Williams</a>&nbsp;at&nbsp;<a href="https://itr-links.stackoverflow.email/u/click?_t=3603a3d8f3104ca5bd7015a5845f7fb7&amp;_m=EoL62DB0PIGuXz8jH5uBuQ84lXlHlps2&amp;_e=_QiVw4xkxL6Kq_I-OU4afOZOM0oCqsuuy0jKIrvb1QwkHWIZOMWNPCK6iuSTMOLeVDuTWeKOcbbyBczybLGtoNQkE84uGWTIEgGhFcxEULL45YJLR4857Ii-0ehWwRpRtjVPtwUxxOtY9-B2oCRv3dmx-KEES0t57P4_TNE4xFT-W5TGiXBreKWRyHfSL-Ozr796X8rmwbKE4P01pm8iSRIwfptm3apXxzvS_usQlDNLQGeGDgkjk55n1OBtvYt6oHij-wFSi5PdDR16hvrYr7E3MKhupgD-zGOVEWxRdxJ-RcBKrj9bAExDUmk948bZeThbs8xuJpwrwNDQkq5QPw%3D%3D">Netlify</a>. This week: systematizing the interface design for 3D spaces, a quirk of document.all that shows up when TypeScript gets transpiled, and an analysis of over 400,000 of those little favicons on your browser tabs.</p>



<h2 id="h-from-the-blog">From the blog</h2>



<p><a href="https://stackoverflow.blog/2021/11/08/adapting-a-design-system-to-work-for-the-metaverse/"><strong>Adapting a design system for the Metaverse</strong></a>&nbsp;<em>stackoverflow.blog</em><br>Design systems enable developers and designers to rapidly develop products that are consistent across all platforms. Does that include the Metaverse?</p>



<p><a href="https://stackoverflow.blog/2021/11/10/does-es6-make-javascript-frameworks-obsolete/"><strong>Does ES6 make JavaScript frameworks obsolete?</strong></a>&nbsp;<em>stackoverflow.blog</em><br>Is ES6 the JavaScript release that will finally free us from the endless cycle of frameworks?</p>



<p><a href="https://stackoverflow.blog/2021/11/05/podcast-390-web3-wont-save-us/"><strong>Podcast 390: Web3 won’t save us</strong></a>&nbsp;<em>stackoverflow.blog</em><br>If we tear up the rules and build a new internet, how can we avoid making the same mistakes?</p>



<p><a href="https://pages.awscloud.com/GLOBAL-ln-GC-300-build-mobile-web-apps-ebook-2021-learn.html?trk=el_a134p000007D3T2AAK&amp;trkCampaign=GLBL-FY21-Q4-GC-300-Build-Mobile-Web-Apps-eBook&amp;sc_channel=el&amp;sc_campaign=NAMER_EL_Newsletter&amp;sc_outcome=Global_Marketing_Campaigns&amp;sc_geo=NAMER&amp;sc_country=US"><strong>eBook: 3 tips for building modern web and mobile apps faster</strong></a>&nbsp;<em>promotion</em><br>Learn how to go from concept to production in less than one month and with one engineer.</p>



<h2 id="h-interesting-questions">Interesting questions</h2>



<p><a href="https://stackoverflow.com/questions/69843082/why-does-the-typescript-compiler-compile-its-optional-chaining-and-null-coalesci"><strong>Why does the TypeScript compiler compile its optional chaining and null-coalescing operators with two checks?</strong></a>&nbsp;<em>stackoverflow.com</em><br>You know when warranties say they are null and void? Two separate things. JavaScript agrees.</p>



<p><a href="https://sustainability.stackexchange.com/questions/11871/is-driving-an-electric-car-any-better-than-driving-a-conventional-car-if-electri"><strong>Is driving an electric car any better than driving a conventional car if electricity is generated with fossil fuel?&nbsp;</strong></a>&nbsp;<em>sustainability.stackexchange.com</em><br>If you can’t be pure, then at least you can be more efficient.</p>



<p><a href="https://philosophy.stackexchange.com/questions/86804/why-is-it-impossible-for-a-program-or-ai-to-have-semantic-understanding"><strong>Why is it impossible for a program or AI to have semantic understanding?&nbsp;</strong></a>&nbsp;<em>philosophy.stackexchange.com</em><br>How do we know a human wrote this question?</p>



<p><a href="https://retrocomputing.stackexchange.com/questions/22209/why-did-the-nes-not-allow-rotated-sprites"><strong>Why did the NES not allow rotated sprites?</strong></a>&nbsp;<em>retrocomputing.stackexchange.com</em><br>It’s a me! The limitations of how the NES stored sprites in memory! Wha-ooo!</p>



<h2 id="h-links-from-around-the-web">Links from around the web</h2>



<p><a href="https://devblogs.microsoft.com/dotnet/announcing-net-6/"><strong>Announcing .NET 6 &#8211; The fastest .NET yet</strong></a>&nbsp;<em>devblogs.microsoft.com</em><br>.NET developers rejoice! C# 10 and .NET 6 are now available!</p>



<p><a href="https://remix.run/blog/react-router-v6"><strong>React Router v6&nbsp;</strong></a>&nbsp;<em>remix.run</em><br>Speaking of rejoicing, React developers rejoice! At long last, React Router v6 is out and rewritten from the ground up with hooks.</p>



<p><a href="https://iconmap.io/blog"><strong>We analyzed 425,909 favicons</strong></a>&nbsp;<em>iconmap.io</em><br>Who knew the tiny favicons at the top of your screen were such interesting pieces of technology?</p>



<p><a href="https://blog.logrocket.com/native-css-nesting/"><strong>Native CSS nesting: What you need to know</strong></a>&nbsp;<em>blog.logrocket.com</em><br>Nesting CSS used to require preprocessors like LESS or SASS, but that’s all changing!</p>



<p>Onboard, organize, and bring your team up to speed in a jiffy.&nbsp;<a target="_blank" rel="noreferrer noopener" href="https://itr-links.stackoverflow.email/u/click?_t=3603a3d8f3104ca5bd7015a5845f7fb7&amp;_m=J2j24lxDQTEuwPd5Cqu5ugxEP4Nup0Hd&amp;_e=tvjhMrv7atYcgrppTk1g939n0TOMqK8VK0FIJna3k3KJASzVGae_sX5sf3KPi1hf2i5bxdA9xhH1f-iiMOO7ZFhn7xzAMFIbYnBhpTVT4YaVxNFzFGdAHiiEmx7YErIIVxBKkYUg6iknFjIhWONGTkIJn8IqBwnVV0l3yY7ScIAISOmXKMdnUAqYDRZbTBMJIkKY_QpH6yZNU_eh54wXqDW8Wpo2teMbvQF4Xm7qqXJd83J9ZY2IcjPlLJTDAm59hcKcidFcXov0SI1SA2sdJyQvN3-FBHLcc6AOGJQuveBkeTVp2-deuu3Ntnjx81ZzrM2rO56BYZb0_0JMMxOo0T1dQmOSzvTyeYRljnArFYMAOnBwZPb7gsBCwG0r13Z9YZh9Whu6zwJWSvKiJLX8Eg%3D%3D">Try Stack Overflow for Teams</a>.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/11/19/the-overflow-100-web3-net-6-we-love-numbers/">The Overflow #100! Web3! .NET 6! We love numbers!</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 https://stackoverflow.blog/2021/11/19/the-overflow-100-web3-net-6-we-love-numbers/feed/ 0 19124 Podcast 394: what if you could invest in your favorite developer? https://stackoverflow.blog/2021/11/19/podcast-394-can-the-economic-value-of-software-platforms-flow-mostly-to-the-users/ https://stackoverflow.blog/2021/11/19/podcast-394-can-the-economic-value-of-software-platforms-flow-mostly-to-the-users/#comments Ben Popper Fri, 19 Nov 2021 05:40:00 +0000 The Stack Overflow Podcast se-stackoverflow se-tech the stack overflow podcast https://stackoverflow.blog/?p=19128 <p>Get your Benjamins before they blow up.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/11/19/podcast-394-can-the-economic-value-of-software-platforms-flow-mostly-to-the-users/">Podcast 394: what if you could invest in your favorite developer?</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 
<iframe loading="lazy" height="200px" width="100%" frameborder="no" scrolling="no" seamless="" src="https://player.simplecast.com/9af71fd5-6014-4e3a-9bec-2327d13291e2?dark=false"></iframe>



<p>Open source software makes it easier for anyone to contribute to the health and growth of a project&#8217;s codebase. But how do you build a system where users and contributors can participate in the economic value being generated by an organization or platform? We chat with Bradley Miles and Sid Kalla, the co-founders of Roll, which is trying to create an API-first platform for creating tokens and markets that allow users to invest and share in the value of creators or communities they love.</p>



<h2 id="h-episode-notes">Episode Notes</h2>



<p>You can learn more about Roll, which describes itself as blockchain infrastructure for social money,&nbsp;<a href="https://tryroll.com/">here</a>.</p>



<p>If you want to follow them on social, check out&nbsp;<a href="https://twitter.com/tryrollhq" target="_blank" rel="noreferrer noopener">@tryrollhq</a>&nbsp;as well as their personal socials:&nbsp;<a href="http://twitter.com/bradley_miles_" target="_blank" rel="noreferrer noopener">@bradley_miles_</a>&nbsp;and&nbsp;<a href="https://twitter.com/sidkal" target="_blank" rel="noreferrer noopener">@sidkal</a>.&nbsp;</p>



<p>If you are interested in this kind of tech, check out previous conversations on&nbsp;<a href="https://stackoverflow.blog/2021/11/05/podcast-390-web3-wont-save-us/">Web3</a>&nbsp;and our chat with Chris Dixon on&nbsp;<a href="https://stackoverflow.blog/2019/12/10/podcast-searching-for-the-next-frontier-with-chris-dixon/">blockchain.</a></p>



<p>Our lifeboat badge winner of the week is Notnooop, who explained how you can: <a href="https://stackoverflow.com/questions/1225514/making-an-emoji-enabeling-app/1239449#1239449">Make An Emoji Enabling App</a>.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/11/19/podcast-394-can-the-economic-value-of-software-platforms-flow-mostly-to-the-users/">Podcast 394: what if you could invest in your favorite developer?</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 https://stackoverflow.blog/2021/11/19/podcast-394-can-the-economic-value-of-software-platforms-flow-mostly-to-the-users/feed/ 1 19128 Introducing Content Health, a new way to keep the knowledge base up-to-date https://stackoverflow.blog/2021/11/17/introducing-content-health-a-new-way-to-keep-the-knowledge-base-up-to-date/ https://stackoverflow.blog/2021/11/17/introducing-content-health-a-new-way-to-keep-the-knowledge-base-up-to-date/#respond Lori Colston Wed, 17 Nov 2021 17:05:38 +0000 Company Promotion SO for Teams new features se-stackoverflow se-tech stack overflow for teams https://stackoverflow.blog/?p=19098 <p>We’re thrilled to announce a new and foundational feature, Content Health, that helps to intelligently identify and surface potentially outdated or inaccurate knowledge—content that needs to change. </p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/11/17/introducing-content-health-a-new-way-to-keep-the-knowledge-base-up-to-date/">Introducing Content Health, a new way to keep the knowledge base up-to-date</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 
<p>We’ve all heard the saying, “the only constant in life is change.” Both humans and organizations face massive change all the time. Change happens with business objectives, strategies, processes, structure&#8230;the list goes on. These changes affect not only future projects but your existing documentation and knowledge. How do teams balance learning new skills and identifying content that requires attention?&nbsp;</p>



<p>We’re thrilled to announce a new and foundational feature, Content Health, that helps intelligently identify and surface potentially outdated or inaccurate knowledge—content that needs to change. This programmatic approach to updating knowledge will help your teams curate an accurate knowledge base as your business environment evolves.</p>



<p>We will build upon and enhance this new feature over the months to come, but we’re excited to share with you an early version that Business plan customers on Stack Overflow for Teams can use immediately. Our Enterprise customers will get access to the feature with our upcoming 2021.3 release.</p>



<h2 id="h-why-do-i-need-content-health">Why do I need Content Health?</h2>



<p>When your central knowledge base becomes outdated, your employees’ and coworkers’ trust that they can find the right answers erodes. The moment your team members stop trusting the platform is the moment it has lost its reason to exist! Instead, teams find one-off, piecemeal ways to get accurate information, like asking a coworker or burning hours solving an issue that has already been solved by someone else. The trust problem grows exponentially as users stop coming back to the platform to add new knowledge, causing it to become further outdated.</p>



<p>Our new Content Health feature gives users total confidence in the accuracy of the information on Stack Overflow for Teams.&nbsp;</p>



<h2 id="h-what-the-content-health-feature-does">What the Content Health feature does&nbsp;</h2>



<p>Existing features such as upvoting, accepted answers, comments, and notifications both on- and off-platform via our out-of-the-box connectors such as our Slack and Microsoft Teams integrations help teams proactively update their knowledge base and identify the best solutions.</p>



<p>The collaborative aspect of Stack Overflow for Teams makes it easy to tag Subject Matter Experts who have the most accurate knowledge or tag a department when a policy needs updating. This process works well for new knowledge and organically encountered content when users search for specific knowledge. To proactively maintain knowledge, users must either know or look for out-of-date questions, Articles, and other content as part of their project work or a knowledge base cleanup.</p>



<p>Now, we’ve made this process even easier and more streamlined. Engaged users and experts can take action by reviewing, updating, or retiring knowledge that Content Health flags, rather than manually scouring the knowledge base for necessary updates. This feature helps shared knowledge stay relevant so that Stack Overflow for Teams continues to be a useful and valued knowledge base for your organization.</p>



<p>You’ll get an assist in bolstering the accuracy and trustworthiness of bite-sized Q&amp;A and long-form Articles. Stack Overflow for Teams can remain your central source of truth.</p>



<p class="has-text-align-center"><img loading="lazy" width="624" height="328" src="https://lh6.googleusercontent.com/vfBFOeM33eOnyvZN6C6H62IKV3_OjyrTI-UD3TUKsRigZs__44b9e1LF3Y35g9bqKrQipoHkkiCs_39b4qGxZCmgGPnh_fu2B_ni4PsxaWpWUz4NhrhmERPFsi5CrmP1pb2Jzve5"></p>



<p>The Content Health feature is specifically useful for experts, curators, engaged users, and Moderators of your Stack Overflow for Teams instance. The Content Health review queue uncovers and prioritizes knowledge that’s due for a second look based on its age and usage.</p>



<figure class="wp-block-image"><img src="https://lh4.googleusercontent.com/kkSq7F8Deth5-5vUULdUvoxGEFNiMU3ZUmNlJcZbt_lvwSjyDZFwN3XBOg6X_5pcWRwJ4i6Y9FQNriYbAeMLIWbw8cVx-gBCvH_hi34IIQl4gTSaWJFpm-iVkrZgC5-KgG6x9QyI" alt=""/></figure>



<p>Those with access to Content Health can use Tags to filter the content to divvy up tasks and focus their efforts on verifying areas where they’re knowledgeable. </p>



<p class="has-text-align-center"><img loading="lazy" width="624" height="328" src="https://lh6.googleusercontent.com/eolJBA2IUjeSFJ_VRKbB-IUSGBMQzASunZNdtUVTKtJCzzbT11_3urj1LmMMudqgzj9y5woaZ8sB-ea7Gc6FP_bLS8RuKFoQ-0_wL4M7cSUs7rCThpuUuLznPPKvSOzhwb2E0KVR"></p>



<p>They can verify, edit, or mark knowledge as obsolete. Once a post is verified or edited, it is removed from the review queue.</p>



<h3>Available actions to keep your knowledge fresh</h3>



<figure class="wp-block-image size-large"><img loading="lazy" width="1200" height="754" src="https://stackoverflow.blog/wp-content/uploads/2021/11/content-health-blog-actions.svg" alt="" class="wp-image-19121"/></figure>



<p><a href="https://youtu.be/0sFNh3hKTRo">Watch the Content Health feature in action.</a></p>



<h2 id="h-in-conclusion">In conclusion&#8230;</h2>



<p>The initial Content Health feature is now available to Business plan customers, and we can’t wait for our customers to take it for a spin and see the value of this new programmatic and streamlined approach to a healthier knowledge base. And we are just getting started &#8211;&nbsp; our teams are already hard at work to enhance this feature in the coming months.</p>



<p>Want to learn more or upgrade? <a href="https://stackoverflowsolutions.com/explore-teams?utm_source=marketo&amp;utm_medium=blog&amp;utm_campaign=content-health&amp;utm_content=contact">Contact us </a>today.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/11/17/introducing-content-health-a-new-way-to-keep-the-knowledge-base-up-to-date/">Introducing Content Health, a new way to keep the knowledge base up-to-date</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 https://stackoverflow.blog/2021/11/17/introducing-content-health-a-new-way-to-keep-the-knowledge-base-up-to-date/feed/ 0 19098 Podcast 393: 250 words per minute on a chorded keyboard? Only if you can think that fast. https://stackoverflow.blog/2021/11/16/podcast-393-250-words-per-minute-on-a-chorded-keyboard-only-if-you-can-think-that-fast/ https://stackoverflow.blog/2021/11/16/podcast-393-250-words-per-minute-on-a-chorded-keyboard-only-if-you-can-think-that-fast/#comments Ryan Donovan Tue, 16 Nov 2021 05:40:00 +0000 The Stack Overflow Podcast se-stackoverflow se-tech the stack overflow podcast https://stackoverflow.blog/?p=19103 <p>Can you type at the speed of thought? </p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/11/16/podcast-393-250-words-per-minute-on-a-chorded-keyboard-only-if-you-can-think-that-fast/">Podcast 393: 250 words per minute on a chorded keyboard? Only if you can think that fast.</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 
<iframe loading="lazy" height="200px" width="100%" frameborder="no" scrolling="no" seamless="" src="https://player.simplecast.com/696890e1-5ded-4e8b-be19-b00a7ffb95ca?dark=false"></iframe>



<p>The home team starts chatting about GitHub&#8217;s CEO stepping down, then gets onto Cassidy&#8217;s favorite topic—keyboards—before getting deeply sidetracked talking about how memory and brains work.</p>



<h2 id="h-episode-notes">Episode notes</h2>



<p><a href="https://www.cnbc.com/2021/11/03/microsoft-github-ceo-nat-friedman-replaced-by-thomas-dohmke.html">GitHub&#8217;s CEO, Nat Friedman, stepped down</a> recently to focus on his startup roots. Chief product officer, Thomas Dohmke, will be moving to CEO.&nbsp;</p>



<p><a href="https://www.theverge.com/22761188/stack-overflow-the-key-copy-paste-review-price-release-date-keyboard">The Verge reviewed</a> our no-longer-a-joke April Fool&#8217;s keyboard. </p>



<p>How many keyboard layouts are there anyway? Including non-English layouts, <a href="https://keyshorts.com/blogs/blog/44712961-how-to-identify-laptop-keyboard-localization">there&#8217;s lots</a>.&nbsp;</p>



<p>Do you have a mind&#8217;s eye? How about an inner monologue? We explore why <a href="https://www.livescience.com/does-everyone-have-inner-monologue.html">some people have a voice in their head when they think and some don&#8217;t</a>. </p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/11/16/podcast-393-250-words-per-minute-on-a-chorded-keyboard-only-if-you-can-think-that-fast/">Podcast 393: 250 words per minute on a chorded keyboard? Only if you can think that fast.</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 https://stackoverflow.blog/2021/11/16/podcast-393-250-words-per-minute-on-a-chorded-keyboard-only-if-you-can-think-that-fast/feed/ 3 19103 Building a QA process for your deep learning pipeline in practice https://stackoverflow.blog/2021/11/15/building-a-qa-process-for-your-deep-learning-pipeline-in-practice/ https://stackoverflow.blog/2021/11/15/building-a-qa-process-for-your-deep-learning-pipeline-in-practice/#comments Tobias Kupek Mon, 15 Nov 2021 15:08:32 +0000 Code for a Living data science data testing machine learning se-stackoverflow se-tech testing https://stackoverflow.blog/?p=19088 <p>Deep learning models still need testing, but many of the common testing approaches don't apply. But with the right methods, you can still make sure your pipeline produces good results. </p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/11/15/building-a-qa-process-for-your-deep-learning-pipeline-in-practice/">Building a QA process for your deep learning pipeline in practice</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 
<p>Software is complex, and as developers, we all understand the need for building and testing a good quality assurance (QA) process. However, training deep learning models and implementing them in production creates new challenges for testing quality. Many of the well-known testing approaches are <a href="https://techbeacon.com/enterprise-it/moving-targets-testing-software-age-machine-learning">not directly applicable</a> to deep learning models. This blog post gives some practical insights into the QA process of a full deep learning pipeline.</p>



<h2 id="h-qa-is-different-in-deep-learning"><strong>QA is different in deep learning</strong></h2>



<p>In normal software QA, you can spot a failure when the software crashes, then slowly back the bug into a corner through breakpoints and print statements. But the initial point of failure is rarely ambiguous.&nbsp;</p>



<p>Deep learning models fail silently. It can be hard to identify the points of failure as there are many candidates. A suboptimal learning rate or mislabeled sample will not raise a stacktrace; it will just worsen the results until they are useless. In this process, it’s hard to do the step-by-step debugging we are used to.</p>



<p>Have you ever tried to understand the impact of one of the 25 million parameters of a ResNet50 model? Deep learning models are too complex to understand the dependencies. The black box (model) can solve the problem correctly only if all elements of the training and inference pipeline work as intended. The more complex the algorithm and the bigger the impact of the deployed software, the more quality checks are necessary. A reliable QA process is therefore crucial for the long-term success of a deep learning project.</p>



<figure class="wp-block-image"><img src="https://lh4.googleusercontent.com/H3SJG8y1aJc3RP32dwF7PcEJJHboXkXeMmspMVGhotkWw65bsvwZra3SPPu92FxYMnLNcKkI2FC_uwlZSr0Jbu5odMDNaR1B6eKxZPBNYS3z4gtSKLgnSeU8kb485q1jV3u5pf_w" alt=""/><figcaption><em>A standard deep learning pipeline</em></figcaption></figure>



<h2><strong>Data as a part of the algorithm</strong></h2>



<p>Keep in mind that the role of training data is very different from the role of data in classical algorithms (that is, compared to customer data in a database). The data is not only passively processed by the algorithm, it’s actively shaping the solution by influencing the model training. No deep learning pipeline can achieve good results without <a href="https://stackoverflow.blog/2021/09/13/why-your-data-needs-a-qa-process/">proper data</a>.&nbsp;</p>



<p>The difficulty in the QA process for training data lies in the volume of samples that we have to handle. Manual inspection and testing of the full dataset is hardly possible and can be very costly.</p>



<p>To tackle the problem, define important metrics like a minimum quality for samples, balancing requirements for different categories, or similarity scores for samples. It’s useful to start with manual spot checks on a small subset of the data to get an idea what the dataset looks like and what problems might occur. When we know what to look for, we can then use statistical methods to gain insights into the full dataset. As with our code, datasets will change within the development process, so it makes sense to automate the statistical process and repeatedly collect metadata from the dataset. This helps us track and understand quality changes over time.</p>



<p>In addition to challenges with the raw data, things can go wrong during preprocessing. To test for correct and useful data preparation, write unit tests. For some operations, it’s possible to check if the process can be reverted correctly (normalization of images).</p>



<p>Validate the full data pipeline before feeding data into the next step. Without useful data, no useful models can be trained.</p>



<p>Checklist for data quality:</p>



<ul><li>Define important metrics</li><li>Spot-check a subset of the data</li><li>Automatically calculate dataset statistics and track changes</li><li>Validate the full data pipeline from scraping and labeling to preprocessing</li></ul>



<h2 id="h-training-done-right"><strong>Training done right</strong></h2>



<p>Let’s be honest: hundreds of cool training methods, tuning algorithms, and experimental parameters have been published that make experimentation with deep learning models really exciting. But implementing all of the latest research right at the start of the development process will usually lead not to a superior model, but to wasted resources, wasted time, and disappointment. Implementing too many untested features at once makes debugging very difficult. And even if the results are decent, who knows if they are optimal for the given inputs?</p>



<p>A basic model architecture and safe default parameters can help at the start. Automate system tests, checking for basics like reducing loss, valid outputs, and successful weight updates. From there, architecture complexity can be increased, hyperparameters tuned, and more fancy algorithms added.</p>



<p>Pay special attention to the correct calculation of metrics, as future decisions and model selection will be based on them. If there are custom parts in the model (that is, non-standard layers or loss-functions), a unit test is probably a good idea.&nbsp;</p>



<p>To select the best model from a set of training iterations, we analyze our performance metrics. But independent smoke tests can help identify flaws, giving us more confidence in the results and improving model regularization. Making this validation step as independent as possible from the training process (for example, by using a separate inference pipeline), helps us to identify possible bugs. A manually created, discrete test set including edge cases and difficult samples should be used for this purpose.</p>



<p>Checklist for model training:</p>



<ul><li>Start with a basic model setup and increase complexity stepwise</li><li>Include extra tests for metrics</li><li>Unit-test custom parts of the model</li><li>Validate the final model with a well-crafted test set to gain confidence</li></ul>



<h2 id="h-avoiding-failures-in-deployment"><strong>Avoiding failures in deployment</strong></h2>



<p>To solve actual problems, it’s necessary to deploy models. Often, the inference environment and engine can look and behave quite differently from the training setup. The deployed system might use different preprocessing of the inputs, making results either unusable or just marginally worse. Also, some hardware might prune the outputs or calculate with a different level of precision. Separate tests should be in place for each use case. We should deploy regularly to identify problems quickly, so we (again) need automation.</p>



<p>To implement models in production, standard software engineering principles for continuous integration and deployment (CI/CD) are applicable.</p>



<p>Checklist for testing deployments:</p>



<ul><li>Automate model export and include parameters required for inference</li><li>Perform integration testing on all device types and configurations</li><li>Deploy often, deploy early in separate staging environments</li></ul>



<h2 id="h-testing-the-pipeline"><strong>Testing the pipeline</strong></h2>



<p>To ensure that a solution actually solves the problem, a final end-to-end test with handpicked samples from real-world data is recommended. This final test should be highly specific for the problem statement and should continuously check whether the complete pipeline is working as intended. For object tracking, one could label a small set of videos and test the counting or track accuracy on target devices. For text sentiment analysis, a test with real-world reviews could show potential flaws. Another approach is qualitative investigation, where you could ask users of the system what they consider a standard scenario.</p>



<p>Final quality checks:</p>



<ul><li>Perform end-to-end testing with real-world data on target platform(s)</li><li>Prefer actual use-cases over synthetic data and artificial scenarios</li><li>Track testing accuracy for different software releases</li><li>Include tests for edge cases (such as unexpected inputs)</li></ul>



<h2 id="h-using-the-pipeline-and-iterating"><strong>Using the pipeline and iterating</strong></h2>



<p>Finally, use a version control for both code and data. This helps to log changes and debug possible issues. It’s not recommended to change data and algorithms at the same time, as the effects are not traceable.</p>



<p>Now that the pipeline is set up, tests and validations are in place, and everything is automated, it’s time to increase the number of experiments. Try out new methods and find the best possible solution. We can do this now with a high confidence that we can identify failures early in the process and correctly validate the results. Remember to test and deploy regularly and add new tests where applicable.</p>



<h2 id="h-sources"><strong>Sources</strong></h2>



<p><a href="https://stackoverflow.blog/2021/09/13/why-your-data-needs-a-qa-process/">https://stackoverflow.blog/2021/09/13/why-your-data-needs-a-qa-process/</a></p>



<p><a href="https://karpathy.github.io/2019/04/25/recipe/?s=09">https://karpathy.github.io/2019/04/25/recipe/?s=09</a></p>



<p><a href="https://martinfowler.com/articles/cd4ml/test-pyramid.png">https://martinfowler.com/articles/cd4ml/test-pyramid.png</a></p>



<p><a href="https://towardsdatascience.com/testing-machine-learning-pipelines-22e59d7b5b56">https://towardsdatascience.com/testing-machine-learning-pipelines-22e59d7b5b56</a></p>



<p><a href="https://www.kdnuggets.com/2019/11/testing-machine-learning-pipelines.html">https://www.kdnuggets.com/2019/11/testing-machine-learning-pipelines.html</a></p>



<p><a href="https://towardsdatascience.com/architecting-a-machine-learning-pipeline-a847f094d1c7">https://towardsdatascience.com/architecting-a-machine-learning-pipeline-a847f094d1c7</a></p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/11/15/building-a-qa-process-for-your-deep-learning-pipeline-in-practice/">Building a QA process for your deep learning pipeline in practice</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 https://stackoverflow.blog/2021/11/15/building-a-qa-process-for-your-deep-learning-pipeline-in-practice/feed/ 1 19088 The Overflow #99: These principles are still SOLID https://stackoverflow.blog/2021/11/12/the-overflow-99-these-principles-are-still-solid/ https://stackoverflow.blog/2021/11/12/the-overflow-99-these-principles-are-still-solid/#respond Ryan Donovan and Cassidy Williams Fri, 12 Nov 2021 14:07:00 +0000 The Overflow newsletter the overflow https://stackoverflow.blog/?p=19060 <p>Welcome to ISSUE #99 of The Overflow! This newsletter is by developers, for developers, written and curated by the Stack Overflow team and&#160;Cassidy Williams&#160;at&#160;Netlify. This week: big problems for people who can’t solve small problems, the nerdiest argument over a Dungeons and Dragons roll, and using the golden ratio in user interface design. From the…</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/11/12/the-overflow-99-these-principles-are-still-solid/">The Overflow #99: These principles are still SOLID</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 
<p>Welcome to ISSUE #99 of The Overflow! This newsletter is by developers, for developers, written and curated by the Stack Overflow team and&nbsp;<a href="https://itr-links.stackoverflow.email/u/click?_t=3603a3d8f3104ca5bd7015a5845f7fb7&amp;_m=EoL62DB0PIGuXz8jH5uBuQ84lXlHlps2&amp;_e=_QiVw4xkxL6Kq_I-OU4afBnKfI77FjoIfX88HTVRZxPuTd2bnAMrrH9rcbsb0dWeVEF1qnpHf4xYVNc9DjG8B3SxoCwGD7YNwE1j5XUlAoVN5IWubZGRkJQZDmmaOZBv48jI4i91xWdFCil-LQ1NSRFjmqF5DoNWqj0-C-Jd-e6BG04-YOMtUtGjjvW4FlO4SiDdPs_9w2phRLlieyDSowbBJXd8neaip9JCBAeEhORiLVYGsioAE1W0vQlkjGKF">Cassidy Williams</a>&nbsp;at&nbsp;<a href="https://itr-links.stackoverflow.email/u/click?_t=3603a3d8f3104ca5bd7015a5845f7fb7&amp;_m=EoL62DB0PIGuXz8jH5uBuQ84lXlHlps2&amp;_e=_QiVw4xkxL6Kq_I-OU4afOZOM0oCqsuuy0jKIrvb1QwkHWIZOMWNPCK6iuSTMOLeVDuTWeKOcbbyBczybLGtoNQkE84uGWTIEgGhFcxEULL45YJLR4857Ii-0ehWwRpRtjVPtwUxxOtY9-B2oCRv3dmx-KEES0t57P4_TNE4xFT-W5TGiXBreKWRyHfSL-Ozr796X8rmwbKE4P01pm8iSRIwfptm3apXxzvS_usQlDNLQGeGDgkjk55n1OBtvYt6oHij-wFSi5PdDR16hvrYr7E3MKhupgD-zGOVEWxRdxJ-RcBKrj9bAExDUmk948bZeThbs8xuJpwrwNDQkq5QPw%3D%3D">Netlify</a>. This week: big problems for people who can’t solve small problems, the nerdiest argument over a Dungeons and Dragons roll, and using the golden ratio in user interface design.</p>



<h2 id="h-from-the-blog">From the blog</h2>



<p><a href="https://stackoverflow.blog/2021/11/01/why-solid-principles-are-still-the-foundation-for-modern-software-architecture/"><strong>Why SOLID principles are still the foundation for modern software architecture</strong></a>&nbsp;<em>stackoverflow.blog</em><br>While computing has changed a lot in the 20 years since the SOLID principles were conceived, they are still the best practices for designing software.</p>



<p><a href="https://stackoverflow.blog/2021/11/02/our-new-and-enhanced-microsoft-teams-integration/"><strong>Our new and enhanced Microsoft Teams integration</strong></a>&nbsp;<em>stackoverflow.blog</em><br>With new features and tweaks to the Stack Overflow for Teams integration with Microsoft Teams, Version 2 will improve your productivity. This article provides additional context around the evolution of this integration and how it might be useful to your organization!</p>



<p><a href="https://stackoverflow.blog/2021/11/02/podcast-389-the-big-problem-with-only-being-able-to-solve-big-problems/"><strong>Podcast 389: The big problem with only being able to solve big problems</strong></a>&nbsp;<em>stackoverflow.blog</em><br>Don’t forget the little springs that keep the big machine running.</p>



<p><a href="https://pages.awscloud.com/AWSMP-SS-BIZ-Adobe-Document-Solutions.html?trk=el_a134p000007CvLoAAK&amp;trkCampaign=AWSMP_web_biz_Adobe_Document-Solutions&amp;sc_channel=el&amp;sc_campaign=el_Stack-Overflow_newsletter_Namer&amp;sc_outcome=Marketplace&amp;sc_geo=NAMER&amp;sc_country=US"><strong>Modify document experiences with Adobe PDF Services API</strong></a>&nbsp;<em>promotion</em><br>In this virtual session, AWS, Adobe, and AFTIA share insights on the latest digital document trends and how you can build more engaging and integrated digital document experiences with APIs.</p>



<h2 id="h-interesting-questions">Interesting questions</h2>



<p><a href="https://codegolf.stackexchange.com/questions/215216/high-throughput-fizz-buzz/236630"><strong>High throughput Fizz Buzz</strong></a>&nbsp;<em>codegolf.stackexchange.com</em><br>The fastest Fizz Buzz in the west.</p>



<p><a href="https://academia.stackexchange.com/questions/177439/students-answering-more-questions-than-allowed-on-exam"><strong>Students answering more questions than allowed on exam</strong></a>&nbsp;<em>academia.stackexchange.com</em><br>If extra credit is not available, make it clear before the exam.</p>



<p><a href="https://stats.stackexchange.com/questions/550800/having-a-statistics-argument-over-dungeons-dragons"><strong>Having a statistics argument over Dungeons &amp; Dragons</strong></a>&nbsp;<em>stats.stackexchange.com</em><br>More like roll playing, right?</p>



<p><a href="https://physics.stackexchange.com/questions/675075/how-do-we-measure-time"><strong>How do we measure time?</strong></a>&nbsp;<em>physics.stackexchange.com</em><br>Aren’t all measurements just a comparison of two things anyway?</p>



<h2 id="h-links-from-around-the-web">Links from around the web</h2>



<p><a href="https://blog.theodo.com/2021/10/intro-to-elm-for-react-devs/"><strong>A quick intro to Elm for React developers</strong></a>&nbsp;<em>blog.theodo.com</em><br>If you’ve been curious about functional programming, but also want to stick to your front-end development roots, Elm might be the language for you!</p>



<p><a href="https://www.smashingmagazine.com/2021/10/respecting-users-motion-preferences/"><strong>Respecting users’ motion preferences</strong></a>&nbsp;<em>www.smashingmagazine.com</em><br>Accessibility covers a broad spectrum of things. The media query “prefers-reduced-motion” is a straightforward way to make your sites more accessible.</p>



<p><a href="https://www.nngroup.com/articles/golden-ratio-ui-design/"><strong>The golden ratio and user-interface design</strong></a>&nbsp;<em>www.nngroup.com</em><br>The golden ratio: it’s not just for art anymore.</p>



<p><a href="https://www.a1k0n.net/2021/01/22/indoor-localization.html"><strong>Fast indoor 2D localization using ceiling lights</strong></a>&nbsp;<em>www.a1k0n.net</em><br>Localization via&amp;#8230; ceiling lights? It’s unusual, and yet it works!</p>



<p>Onboard, organize, and bring your team up to speed in a jiffy.&nbsp;<a target="_blank" rel="noreferrer noopener" href="https://itr-links.stackoverflow.email/u/click?_t=3603a3d8f3104ca5bd7015a5845f7fb7&amp;_m=J2j24lxDQTEuwPd5Cqu5ugxEP4Nup0Hd&amp;_e=tvjhMrv7atYcgrppTk1g939n0TOMqK8VK0FIJna3k3KJASzVGae_sX5sf3KPi1hf2i5bxdA9xhH1f-iiMOO7ZFhn7xzAMFIbYnBhpTVT4YaVxNFzFGdAHiiEmx7YErIIVxBKkYUg6iknFjIhWONGTkIJn8IqBwnVV0l3yY7ScIAISOmXKMdnUAqYDRZbTBMJIkKY_QpH6yZNU_eh54wXqDW8Wpo2teMbvQF4Xm7qqXJd83J9ZY2IcjPlLJTDAm59hcKcidFcXov0SI1SA2sdJyQvN3-FBHLcc6AOGJQuveBkeTVp2-deuu3Ntnjx81ZzrM2rO56BYZb0_0JMMxOo0T1dQmOSzvTyeYRljnArFYMAOnBwZPb7gsBCwG0r13Z9YZh9Whu6zwJWSvKiJLX8Eg%3D%3D">Try Stack Overflow for Teams</a>.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/11/12/the-overflow-99-these-principles-are-still-solid/">The Overflow #99: These principles are still SOLID</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 https://stackoverflow.blog/2021/11/12/the-overflow-99-these-principles-are-still-solid/feed/ 0 19060 Podcast 392: Do polyglots have an edge when it comes to mastering programming languages? https://stackoverflow.blog/2021/11/12/podcast-392-the-polyglot-who-leads-stack-overflows-platform-team/ https://stackoverflow.blog/2021/11/12/podcast-392-the-polyglot-who-leads-stack-overflows-platform-team/#comments Ryan Donovan Fri, 12 Nov 2021 05:40:00 +0000 The Stack Overflow Podcast platform se-stackoverflow se-tech software engineering the stack overflow podcast https://stackoverflow.blog/?p=19074 <p>French, Swahili, Perl, Danish, Spanish, and C#.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/11/12/podcast-392-the-polyglot-who-leads-stack-overflows-platform-team/">Podcast 392: Do polyglots have an edge when it comes to mastering programming languages?</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 
<iframe loading="lazy" height="200px" width="100%" frameborder="no" scrolling="no" seamless="" src="https://player.simplecast.com/d1d9c77b-405a-43c8-9eac-e951183c7475?dark=false"></iframe>



<p id="h-we-chat-with-rennie-clayton-senior-director-of-platform-engineering-here-at-stack-overflow-who-grew-up-in-places-with-limited-infrastructure-and-learned-programming-by-following-along-with-his-mother-s-college-coursework">We chat with Rennie Clayton, Senior Director of Platform Engineering here at Stack Overflow, who grew up in numerous countries and learned programming by following along with his mother&#8217;s college coursework.</p>



<h2 id="h-episode-notes">Episode Notes</h2>



<p>Rennie grew up in Kenya, Honduras, Somalia, and Oklahoma; his parents volunteered for the&nbsp;<a target="_blank" href="https://www.peacecorps.gov/" rel="noreferrer noopener">Peace Corps</a>&nbsp;before working for the US Government overseas.</p>



<p>Audio tape drives are real!&nbsp;Check out&nbsp;<a target="_blank" href="https://retrocomputing.stackexchange.com/questions/8826/how-did-the-c64-interface-tape-drives" rel="noreferrer noopener">this Retrocomputing question</a>&nbsp;about how the Commodore 64 audio interface worked.&nbsp;</p>



<p>If you&nbsp;want&nbsp;to remember something better,&nbsp;<a target="_blank" href="https://www.psychologicalscience.org/news/were-only-human/ink-on-paper-some-notes-on-note-taking.html" rel="noreferrer noopener">a 2014 study</a>&nbsp;says you should write it out by hand. </p>



<p>Rennie worked at Blackberry, and Ben remembered his colleagues at <em>The Verge</em> fondly hoping for their comeback. In fact,&nbsp;<a target="_blank" href="https://www.theverge.com/2013/9/23/4762924/prem-watsa-blackberry-buyout-private-fairfax-financial" rel="noreferrer noopener">here&#8217;s Ben hoping for their comeback</a>!</p>



<p>We did a&nbsp;<a target="_blank" href="https://stackoverflow.blog/2021/09/17/podcast-376-writing-the-roadmap-from-engineer-to-manager/" rel="noreferrer noopener">podcast on moving from engineer to manager</a>, which Rennie said was one of the hardest things to do.&nbsp;</p>



<p>Rennie gave a shoutout to the book he&#8217;s reading now,&nbsp;<em><a target="_blank" href="https://lethain.com/elegant-puzzle/" rel="noreferrer noopener">The Elegant Puzzle</a></em>&nbsp;by Will Larson.&nbsp;</p>



<p>Rennie works on our Platform team, which works on all of our reusable stuff, including&nbsp;<a target="_blank" href="https://stackoverflow.design/" rel="noreferrer noopener">our design system, Stacks</a>.&nbsp;</p>



<p>This week&#8217;s Lifeboat badge goes to Vinzzz for explaining how to: <a target="_blank" href="https://stackoverflow.com/questions/28140145/create-an-array-of-random-numbers-in-swift" rel="noreferrer noopener">Create an array of random numbers in Swift</a>.</p>



<p><a href="https://the-stack-overflow-podcast.simplecast.com/episodes/the-polyglot-who-leads-stack-overflows-platform-team/transcript">TRANSCRIPT</a></p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/11/12/podcast-392-the-polyglot-who-leads-stack-overflows-platform-team/">Podcast 392: Do polyglots have an edge when it comes to mastering programming languages?</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 https://stackoverflow.blog/2021/11/12/podcast-392-the-polyglot-who-leads-stack-overflows-platform-team/feed/ 3 19074 Does ES6 make JavaScript frameworks obsolete? https://stackoverflow.blog/2021/11/10/does-es6-make-javascript-frameworks-obsolete/ https://stackoverflow.blog/2021/11/10/does-es6-make-javascript-frameworks-obsolete/#comments Theodoros ‘Theo’ Karasavvas and Ryan Donovan Wed, 10 Nov 2021 16:21:07 +0000 Code for a Living ES6 frameworks javascript se-stackoverflow se-tech https://stackoverflow.blog/?p=19063 <p>Is ES6 the JavaScript release that will finally free us from the endless cycle of frameworks?</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/11/10/does-es6-make-javascript-frameworks-obsolete/">Does ES6 make JavaScript frameworks obsolete?</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 
<p>Every time JavaScript goes through a major update, we seem to repeat the same cycle. At first, developers are delighted by the new features. They move back to coding directly in JavaScript, and frameworks become less popular. Then, in the relatively long periods between releases, frameworks begin to offer new features and tempt developers back. Repeat.</p>



<p>With ES6—arguably the biggest change to the language yet—the same cycle could repeat again. Frameworks aren&#8217;t nearly as popular as they were when ES6 first came out, while JavaScript is going strong. However, I want to argue for a more radical prediction: As developers get more and more familiar with what ES6 can do, we will finally break this cycle. The JavaScript developers of the future won’t use frameworks. At all.</p>



<figure class="wp-block-image size-full"><img loading="lazy" width="592" height="392" src="https://149351115.v2.pressablecdn.com/wp-content/uploads/2021/11/image.png" alt="" class="wp-image-19095" srcset="https://149351115.v2.pressablecdn.com/wp-content/uploads/2021/11/image.png 592w , https://149351115.v2.pressablecdn.com/wp-content/uploads/2021/11/image-300x199.png 300w " sizes="(max-width: 592px) 100vw, 592px" /><figcaption>https://insights.stackoverflow.com/trends?tags=jquery%2Cangular%2Creactjs%2Cjavascript%2Cexpress%2Cvue.js</figcaption></figure>



<p>I know that’s going to be an unpopular conclusion, but hear me out. I’m not saying that JavaScript will see its use narrow—in fact, plenty of <a href="https://stackoverflow.blog/2017/04/21/companies-hiring-javascript-developers-right-now/">companies are hiring JavaScript developers right now</a>. Rather, I think two of the key features of ES6 (modules and classes, specifically) will make many of the most popular frameworks obsolete. In other words, JavaScript frameworks will die in the same way, and for the same reasons, <a href="https://stackoverflow.blog/2017/08/01/flash-dead-technologies-might-next/">that Flash died</a>—because there was simply no need for it anymore and the <a href="https://www.securecoding.com/blog/most-common-security-vulnerabilities-using-javascript/">inherent security vulnerabilities</a> made it dangerous to use.</p>



<p>So before you get defensive about your favorite framework, let me explain why I think this shift will occur.</p>



<h2 id="h-the-problem-with-javascript-frameworks">The problem with JavaScript frameworks</h2>



<p>JavaScript frameworks exist as a tool for developers to abstract away some of the more complex aspects of developing front-end applications. And while frameworks have undeniably been very useful tools, advances in JavaScript’s web component specs have made developing new front-end applications (such as single-page applications) without existing frameworks much easier. This has raised the question of whether frameworks are still even necessary.&nbsp;&nbsp;</p>



<p>Let’s take a look at the most popular JavaScript frameworks today and examine where they fall down. You don’t have to look far for this, because most of the frameworks in use today suffer from a number of fundamental flaws.</p>



<p>Most of us who <a href="https://hackr.io/blog/best-javascript-frameworks">work with JavaScript frameworks</a> (and yes, I’m among that group) don’t notice those flaws, of course, because we are so used to them. It&#8217;s been a devil&#8217;s bargain: we appreciated the ease of development that the abstractions gave us, but overlooked the messy JavaScript that they produced. But the simple fact is that most of the frameworks we use are bloated libraries that manage complex processes that JavaScript was not designed for or shortcuts that make debugging code harder.  </p>



<p>In addition to these issues, there is another, more important problem: there is actually no good definition of what constitutes a JavaScript framework in the first place. This has led to a somewhat absurd situation in which one of the most popular JavaScript “frameworks”—React—isn’t really a framework at all (no wonder it&#8217;s still popular). At best, it’s a library that developers use to build their own, highly-specialized JavaScript frameworks.</p>



<p>All of these issues are manifest in the most popular frameworks being used today. But there are also a number of specific issues that affect individual frameworks. So let’s take a quick look at each in turn.</p>



<h3 id="h-angularjs-and-angular">AngularJS and Angular</h3>



<p>The fact that AngularJS has to appear on this list at all is indicative of one of the issues with JavaScript frameworks—that while they will become obsolete, people won’t necessarily stop using them. Plenty of developers, in fact, will tell you that <a href="https://thinkmobiles.com/blog/why-use-angularjs/">AngularJS is still “the best” way to code JavaScript</a>, even though the framework is (a) deprecated and (b) difficult to understand for anyone who hasn’t spent years using it.</p>



<p>This second issue—of code that is almost impossible to understand—was actually carried over into Angular 2. And while some see this as a reason why back-end developers can <a href="https://stackoverflow.com/jobs/salary?_ga=2.260529931.761822388.1636990617-940169366.1584736921">earn more</a>, in reality it can make life miserable for developers. Take, as an example, the fact that Angular 2 contains instances of case-sensitive HTML, which not only violates the principles of HTML itself, but also forces many to implement an interstitial parser just to clean up the HTML that Angular 2 produces.</p>



<h3 id="h-react">React</h3>



<p>The other big JavaScript &#8220;framework&#8221;—React—suffers from a different set of problems. In fact, in retrospect it’s possible to see the <a href="https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_getting_started">development of React</a> as a kind of reaction (pun intended) to the obscurity of Angular. React promises users that it is easy to use and doesn’t need to be any more complicated than you make it.</p>



<p>That’s true, up to a point. The problem is that React is not really an integrated framework, but rather a set of modules and components that often don’t play well together. Doing anything halfway complicated with React, such as implementing <a href="https://privacyaustralia.net/browser-fingerprinting/">browser fingerprinting</a>, means building a complex stack of components that you then have to constantly maintain and manage.&nbsp;</p>



<p>Some will argue with me here by pointing out that systems like Redux and Flux allow complex React stacks to be used even by beginners. I would counter that if you need to use a framework to work with your framework to work with JavaScript, then you are really in trouble. But React isn&#8217;t really a framework, so making a comparison isn&#8217;t quite fair. </p>



<h3 id="h-ember-and-vue-and-aurelia">Ember and Vue and Aurelia</h3>



<p>Finally, a quick note about some less well-known, and less well-used, frameworks. Most developers don’t have much exposure to any of these three frameworks, for the simple reason that they are not very widely used outside of their own niche applications.</p>



<p>Each of these three frameworks has its own idiosyncrasies, but the main problem with them is linked directly to their niche use cases. None of these frameworks has reached the market share necessary to build a true relationship with the wider JavaScript community (though according to Stack Overflow question statistics, Vue is about as popular as jQuery currently). As a result, developers who love these frameworks are often fighting an uphill battle when it comes to arguing for their use.</p>



<p>It’s also worth a quick note here about why none of these frameworks has gained popularity, especially because in many ways they are the most “fully featured” of the systems on this list. Ember, for instance, is probably the most “frameworky” of the frameworks on this list, but it suffers from performance issues, the largest download size, the largest API footprint, and the steepest learning curve of any of the frameworks on this list.</p>



<p>Think about that for a moment, and you may come to a strange conclusion—that many developers think we need a framework to work with JavaScript, but that when a full framework is actually available, we prefer to use ad-hoc solutions like React. Given that, perhaps we should <a href="https://stackoverflow.blog/2020/02/03/is-it-time-for-a-front-end-framework/">reassess whether we need frameworks</a> at all.</p>



<h2 id="h-the-promise-of-es6">The promise of ES6</h2>



<p>This is the context, then, in which ES6 was released. ES6—also called ECMAScript2015—is the most recent version of JavaScript. It changed some of the fundamental ways we use the language. It introduced a number of new features that the community had been calling for for years.</p>



<p>At first glance, the claim that ES6 will make JavaScript frameworks obsolete seems pretty absurd, because the changes made in ES6 were (at least according to some authors) little more than <a href="https://www.freecodecamp.org/news/write-less-do-more-with-javascript-es6-5fd4a8e50ee2/">syntactical tweaks</a>. Seeing the additions that were made as syntactical, however, misses the point.</p>



<p>That’s because most of the “extra functionality” that frameworks provide could be seen in the same way—a method of providing quick shortcuts to features of JavaScript via syntactic changes. Some of these syntactic shortcuts have become so familiar to us that we have come to see them as separate features, but they are nonetheless merely ways of automating existing elements of JavaScript.</p>



<p>That’s not to understate the utility of syntactic innovation. In fact, the majority of the new features in ES6 are essentially syntactic shortcuts. These include:</p>



<ul><li>Default parameters</li><li>Template literals</li><li>Multi-line strings</li><li>Destructuring assignment</li><li>Enhanced object literals</li><li>Arrow functions</li></ul>



<p>But the reason why these features help make frameworks more obsolete is because they bring functionality that has so far been limited to frameworks right into the core of JavaScript itself. This subsequently reduces the need for frameworks in most situations. More functions—including promises and block-scoped constructs—standardize things we were all using frameworks to do in an ad-hoc fashion. Developers who were previously working in different frameworks can now talk to each other for the first time in years.&nbsp;</p>



<p>It’s two other new features of ES6, however, that will really spell the end of frameworks or at least pause <a href="https://stackoverflow.blog/2018/01/11/brutal-lifecycle-javascript-frameworks/">the brutal lifecycle of JavaScript frameworks</a>. These are the novel ways in which ES6 implements classes and functions.</p>



<h3 id="h-classes">Classes&nbsp;</h3>



<p>Plenty of developers <a href="https://stackoverflow.blog/2020/09/02/if-everyone-hates-it-why-is-oop-still-so-widely-spread/">now use OOP as standard</a>, and so have been implementing objects in JavaScript for years. Up until now, we’ve been using both frameworks and our own home-brewed solutions, because working with classes in ES5 was a total pain. That always struck me as strange, because it was clear from the outset that ES5 was designed to support classes—in fact, the keyword <code>CLASS</code> was reserved.&nbsp;</p>



<p>What this led to was arguments. Everyone turned to their favorite framework and used it to create an OOP interface. These were generally difficult to work with for anyone other than their creators, and they did not play nicely together.&nbsp;</p>



<p>Now, finally, with ES6, we have a standardized way of working with classes. ES6 classes use prototypes, not the function factory approach, where if we have a class <code>baseModel</code>, we can define a constructor and a <code>getName()</code> method.&nbsp;</p>



<h3 id="h-modules">Modules</h3>



<p>The situation was pretty much the same when it came to modules. In fact, some developers are still surprised to learn that by default there was no native modules support in ES5. It’s just that we got so used to workarounds—implemented via AMD, RequireJS, CommonJS, and others—that we forgot that what we were doing wasn’t really a part of JavaScript.</p>



<p>Now, with ES6, we can all use simple commands—<code>import</code> and <code>export</code>—to work with modules. Or at least some of us can, some of the time. Because, to slightly undermine my own argument right here at the end, this is perhaps the first place in which people are going to turn to frameworks again.&nbsp;</p>



<p>That’s because the way modules have been brought to ES6 is really pretty confusing. They don’t mirror the way modules are used in Node.js, and plenty of people are going to stick to that method. </p>



<h2 id="h-the-bottom-line">The bottom line</h2>



<p>In short, ES6 brought a host of syntactic changes to JavaScript that greatly reduce the need for most frameworks. Coupled with the fact that most of the frameworks we are using at the moment obscure JavaScript code and add an additional dependency, we could see a tangible and permanent reduction in the use of frameworks over the next few years.</p>



<p>Or perhaps the cycle will simply repeat, and we’ll have only a few years of learning how <a href="https://stackoverflow.blog/2019/09/12/practical-ways-to-write-better-javascript/">to write better JavaScript</a> before we retreat into our frameworks again. </p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/11/10/does-es6-make-javascript-frameworks-obsolete/">Does ES6 make JavaScript frameworks obsolete?</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 https://stackoverflow.blog/2021/11/10/does-es6-make-javascript-frameworks-obsolete/feed/ 96 19063 Podcast 391: Explaining the semiconductor shortage, and how it might end https://stackoverflow.blog/2021/11/09/podcast-391-explaining-the-semiconductor-shortage-and-how-it-might-end/ https://stackoverflow.blog/2021/11/09/podcast-391-explaining-the-semiconductor-shortage-and-how-it-might-end/#comments Ben Popper Tue, 09 Nov 2021 05:40:00 +0000 The Stack Overflow Podcast chip se-stackoverflow se-tech semiconductor shortage silicon the stack overflow podcast https://stackoverflow.blog/?p=19054 <p>The problem is not that we've run out of sand.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/11/09/podcast-391-explaining-the-semiconductor-shortage-and-how-it-might-end/">Podcast 391: Explaining the semiconductor shortage, and how it might end</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 
<iframe loading="lazy" height="200px" width="100%" frameborder="no" scrolling="no" seamless="" src="https://player.simplecast.com/7eb544e2-5a2c-4f18-81e7-1bcef830c313?dark=false"></iframe>



<p>We chat with Alex Williams and Hassan Khan, a pair of techie policy wonks who have done deep research on the past and present of the semi-conductor industry. The duo also also brings some strong opinions on the current supply chain crunch and what it would take to build a more resilient and adaptive semiconductor industry in the future.</p>



<h2 id="h-episode-notes">Episode Notes</h2>



<p>You can find Alex&#8217;s writing for Employ America <a href="https://www.employamerica.org/author/alex/">here</a>. You can find him on Twitter <a href="https://twitter.com/vebaccount">here</a>.</p>



<p>You can find Hassan&#8217;s blog&nbsp;<a href="https://hassnkhan.com/blog/Uncertainy-forecasting-and-Roadmaps/">here</a>&nbsp;and his Twitter&nbsp;<a href="https://twitter.com/hassankhan">here</a>.</p>



<p>You can find their writing on the semiconductor industry and shortages&nbsp;<a href="https://www.employamerica.org/researchreports/a-brief-history-of-semiconductors-how-the-us-cut-costs-and-lost-the-leading-edge/">here</a>&nbsp;and&nbsp;<a href="https://www.employamerica.org/researchreports/preventing-the-next-shortage-a-framework-for-industrial-policy/">here</a>.</p>



<p>Our lifeboat badge winner of the week is jasme, who helped someone figure out how to&nbsp;<a href="https://dashboard.simplecast.com/accounts/bb95ce82-16f5-4532-866c-0aa5719e5fb8/shows/6fa1d34c-502b-4abf-bd82-483804006e0b/episodes/7eb544e2-5a2c-4f18-81e7-1bcef830c313/Laravel%20Validation%20Email%20address">fix email validation with Laravel.</a></p>



<p><a href="https://the-stack-overflow-podcast.simplecast.com/episodes/the-semiconductor-shortage-explained/transcript/">TRANSCRIPT</a></p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/11/09/podcast-391-explaining-the-semiconductor-shortage-and-how-it-might-end/">Podcast 391: Explaining the semiconductor shortage, and how it might end</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 https://stackoverflow.blog/2021/11/09/podcast-391-explaining-the-semiconductor-shortage-and-how-it-might-end/feed/ 1 19054 Adapting a design system to work for the Metaverse https://stackoverflow.blog/2021/11/08/adapting-a-design-system-to-work-for-the-metaverse/ https://stackoverflow.blog/2021/11/08/adapting-a-design-system-to-work-for-the-metaverse/#respond Mike Wolfson Mon, 08 Nov 2021 15:04:44 +0000 Code for a Living augmented reality design system metaverse se-stackoverflow se-tech virtual reality https://stackoverflow.blog/?p=19047 <p>Design systems enable developers and designers to rapidly develop products that are consistent across all platforms. Existing design standards could be directly applied in the Metaverse. But many other concepts, unique to 3D environments, required a lot of definition.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/11/08/adapting-a-design-system-to-work-for-the-metaverse/">Adapting a design system to work for the Metaverse</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 
<p>I have had great success using <a href="https://stackoverflow.blog/2021/09/06/scaling-front-end-design-with-a-design-system/">design systems</a> when developing software products. They’re a great way to enable developers and designers to rapidly develop engaging products that are consistent across all platforms.</p>



<p><br>I’m advising a <a href="https://www.grouproom.io/">company</a> enabling hybrid digital workspaces—including VR environments—and I wondered if we could extend the principles we established in our 2D design system to enable the same productivity boosts we experienced when building for other platforms.<br><br>We learned that there are many places where existing design standards could be directly applied in the <a href="https://stackoverflow.blog/2021/08/23/youre-living-in-the-metaverse-you-just-dont-know-it-yet/">Metaverse</a>. But many other concepts, unique to 3D environments, required a lot of definition.</p>



<p>This article will discuss the lessons we learned when adapting our design system to guide Metaverse design and development.</p>



<h2 id="h-high-level-considerations">High-level considerations</h2>



<p>2D and 3D experiences both benefit from following specifications based on fundamental design principles. These constraints guide product design and development towards consistent, positive user experiences and guard against overwhelming customization.</p>



<p>Standards are guidelines, not strict mandates, so there were times when the existing standards didn&#8217;t fit our needs. This was okay and expected. We allowed exceptions when needed and—crucially—we made sure to clearly document the exception, so everyone involved could understand why the change was made..</p>



<p>Basing our Metaverse standards on fundamental design principles ensured these experiences would integrate well with our existing products. Our web, mobile, and print experiences are all developed using the same fundamental design language.</p>



<h3 id="h-presence">Presence</h3>



<p>The goal in designing a good Metaverse experience was ensuring the environment felt natural, the user was comfortable in our space, and the user was able to meaningfully experience the content (instead of <em>escaping</em> to the real world to deal with navigation or visual distractions). The term used in VR for <em>feeling like you are really there</em> is “presence.” This term was first coined in <a href="http://voicesofvr.com/183-mel-slater-on-vr-presence-virtual-body-ownership-the-time-travel-illusion/">Mel Slater’s theory of presence</a>.<br></p>



<p>As<a href="https://www.campaignasia.com/article/a-peek-into-the-metaverse-how-to-prevent-a-virtual-world-from-becoming-a-dystopi/471841"> Mark Zuckerberg</a> told investors in his recent press conference for Workday:&nbsp;</p>



<p>&#8220;The defining quality of the metaverse is presence, which is this feeling that you&#8217;re really there with another person or in another place. Creation, avatars, and digital objects are going to be central to how we express ourselves, and this is going to lead to entirely new experiences and economic opportunities.&#8221;</p>



<p>The goal of our Metaverse-related design specification was to establish patterns to ensure the user felt comfortable and was able to interact with the content in a natural way. We learned that we could use design specifications to enforce the <a href="https://www.frontiersin.org/articles/10.3389/frobt.2018.00074/full"><strong>illusion of self embodiment</strong></a> and establish interaction patterns that enforced the <a href="https://www.nature.com/articles/s41598-019-55478-z"><strong>illusion of physical interaction</strong></a>.</p>



<h2 id="h-which-2d-specifications-translated-directly">Which 2D specifications translated directly?</h2>



<p>We discovered many of our traditional design standards could be applied directly to 3D environments. After all, the Metaverse is still a visual medium built by code that must be implemented by developers.&nbsp;</p>



<h3 id="h-design-tokens">Design tokens</h3>



<p>We created consistent, human-readable <a href="https://frontside.com/blog/2021-01-15-design-tokens-and-components/">design tokens</a> for various colors, dimensions, and typography specifications. This made the design and development process much simpler because there was a limited number of standard tokens used. These tokens quickly became the language used in our design mock-ups, allowing our team to communicate using consistent language.</p>



<p>By ensuring the design specifications all used the same semantic names, we reduced the likelihood that custom values would be introduced.</p>



<p><strong>YES: </strong>AccentColor, SideMargin, Headline4<br><strong>NO: </strong>#bada55, 16px, Montserrat/14px/Bold</p>



<h3 id="h-color">Color</h3>



<p>We didn’t support every color in the spectrum; instead, we defined a limited color palette with a more manageable number of values. We had success using just a few options tied to specific tokens.</p>



<p>Using a limited number of brand-specific colors drove a consistent aesthetic across all the platforms we supported. This ensured our Metaverse experiences matched our 2D or print media branding.&nbsp;</p>



<p>Since the colors were centralized and consistent, we could easily switch them to rebrand. This control helped keep our applications accessible since we could ensure each color met minimum contrast requirements.&nbsp;</p>



<p>However, we discovered that the limited range of colors we used for 2D designs did not necessarily translate for immersive spaces. Metaverse spaces involve lighting and appeal to our intuitive need to grasp the depth of our surroundings. We needed to support a wider range of colors for immersive environments.</p>



<p>Selection of color palettes needed to be done with the intent and mood of a room in mind. For 3D spaces, we used the same basic colors specified in our design system, but allowed designers to adjust their brightness or saturation. This allowed more variation, but kept the overall aesthetic consistent with our branding.</p>



<p>Lighting in immersive environments sets the mood, so we set minimum and maximum brightness levels to manage this. Lighting will impact text legibility and the app’s overall accessibility, so we watched it closely. We used a shorter range of soft and harsh contrasting and complementary colors to enable strong focal points when highlighting certain content.</p>



<h3 id="h-typography">Typography</h3>



<p>The 2D <a href="https://www.lifewire.com/use-fewer-fonts-1074171">benefits</a> of creating a small number of typography styles translates directly to the Metaverse, and we didn’t change anything. This didn’t directly affect <em>presence</em>, but did make the development process much simpler.</p>



<h3 id="h-spacing">Spacing</h3>



<p>It was important to set our spatial system’s range with a memorable base number and document clear expectations about how it’s used. This resulted in our layouts aligning to a grid, which is visually pleasing to the user.</p>



<p><br>We used a <strong>Base8</strong> system (allow dimensions divisible by 8). We used this because it matched up with many browsers&#8217; base font-size of 16px (8&#215;2), and because many popular screen sizes are divisible by 8 on one axis.</p>



<p><strong>Base8</strong> measurements are always divisible by 2, so we avoid scaling issues that result in a<em>.5px</em> <em>offset</em> that will happen in <strong>Base5</strong> systems. Pixels with .<em>5px offsets</em> will display an edge that appears blurred due to antialiasing of that half pixel.&nbsp;</p>



<h2 id="h-standard-for-embedded-resources-videos-and-images">Standard for embedded resources (videos and images)</h2>



<p>When creating Metaverse environments, customers tended to want irregular shapes for media to fit oddly shaped spaces. We struggled to adjust our 3D spaces to accommodate uniquely shaped media. Standardizing media sizes simplified our designs so that we weren’t trying to fit an infinite number of shapes into our 3D environments.</p>



<p>The simplest way to constrain this was to define a limited number of supported aspect ratios:<br></p>



<ul><li>9:16 (16:9)&nbsp;</li><li>3:4 (4:3)&nbsp;</li><li>1:1&nbsp;</li></ul>



<p>Ensuring all media fit one of these limited formats simplified implementation and eliminated a ton of rework since we no longer had to adjust our environments to accommodate media of all sizes.&nbsp;</p>



<h1 id="h-which-specifications-were-unique-to-metaverse-design">Which specifications were unique to Metaverse design?</h1>



<p>We discovered a variety of design categories we used to help establish the user’s presence in the virtual world. This section will introduce the main categories we identified.</p>



<h2 id="h-animation">Animation</h2>



<p>It was critical that animations obey physics and move in a natural way. This meant that objects didn’t move linearly, which looks unnatural to the human eye.</p>



<p>The same basic animation principles we used in other media were just as important in our Metaverse designs. We stated that <strong>all animations must use easing curves that are the correct duration</strong> (generally 200ms &#8211; 500ms).</p>



<p>In the Metaverse, users perceived unnatural physics much more negatively then they did in web media.</p>



<h2 id="h-audio">Audio</h2>



<p>In Metaverse environments, using audio effectively was a critical part of the user experience.</p>



<h3 id="h-spatial">Spatial</h3>



<p>Spatial audio is reactive to the user’s position in space. In short, sound volume is a function of distance. This means the closer a user is to a content panel or another user, the higher the audio volume is.</p>



<p>An effective way to give the user a sense of direction is to make a louder noise come from one direction. As an example: If your friend is standing to your left and speaking to you, your left ear will hear the sound slightly louder and sooner than your right ear. Lack of good spatial audio can make an environment feel flat.</p>



<p>Defining this detail was quite complicated. For instance, to get good 360-degree sound, we needed to consider the shape of the room and “reflect” the sound based on this.</p>



<h3>Ambient audio</h3>



<p>This is a sound that plays quietly throughout the experience to establish and enforce the mood. As its name suggests, it should add ambiance, not distract from the overall experience. Ambient audio can help avoid unnatural silence when other feedback is not present.<br><br>We discovered with ambient audio, it is best to fade the audio in gradually, rather than blasting the user. When the user mutes, we prefered the audio to instantly go silent. We avoided loud audio that impeded hearing other content, and always muted ambient audio when other media was playing.</p>



<p id="h-audio-feedback"><strong>Audio feedback</strong></p>



<p>We used sound triggers to guide the user in immersive environments. For example, when the user closed a door, we played a confirming sound to provide them another level of feedback. This type of feedback was often better than visual methods used in 2D design.</p>



<h2 id="h-avatar">Avatar</h2>



<p>How the user is represented in the virtual space directly impacts their <em>presence</em>. When the avatar can successfully mimic their real world movements, the experience gets even better. The user will feel more like the avatar when the movement is realistic and intuitive—enforcing that all-important sense of presence.</p>



<h3 id="h-limitations-of-avatars">Limitations of avatars</h3>



<p>Getting an avatar to successfully mimic real-world interactions is very difficult, and when it’s not done correctly, it frustrates users and takes them out of the experience. Poor digital representations can fall into the <a href="https://www.techopedia.com/definition/31570/uncanny-valley">uncanny valley</a>, giving the user a sense of unease.</p>



<p><br>If fully representative avatars were not available, an excellent compromise was to use a small profile video or image. This was a natural and comfortable extension to how users regularly represent themselves in video conferencing. We adorned the profile images with informative badges indicating location or mute status.</p>



<h2 id="h-navigation">Navigation</h2>



<p>When we started to discuss camera control and navigation, we quickly realized this was an exceedingly complicated subject. In fact, we decided that it needed to be its own specification, not just a section in our design spec.</p>



<p>We decided to define the following details:<br><br><strong>Camera perspective&nbsp;</strong></p>



<p>We needed to define which camera angles our Metaverse would support. This could vary between a <em>1st person view</em>, a <em>3rd person/dollhouse view</em>, or a <em>2D overworld map</em>. Each of these perspectives required a lot of detailed description.<br></p>



<p><strong>Control layout</strong></p>



<p>We needed to define how the user controlled the camera and their movement within the environment.<br><br>We quickly learned that having intuitive controls was important. We discovered there are <em>many</em> different control mechanisms, and the “best” way varies quite a bit between users.<br><br>For example, we supported standard WASD key commands, but some users preferred to use the arrow keys or the mouse to move. These specifications were further complicated because we could not depend on the user having access to our certain controls. For example, mobile devices required virtual joysticks when a keyboard was unavailable.</p>



<p><strong>Locomotion and navigation</strong></p>



<p>Locomotion and navigation were important to ensuring a positive user experience. The ease with which they could move and the motion simulated as they moved was critical to avoiding motion sickness.</p>



<p><strong>Littlest distance</strong></p>



<p>We needed to consider how easy it was for a user to move around our environment. If it was tedious to <em>walk from one side of the room to the other</em> the user would become frustrated. We defined maximum distances between rooms, and prioritized how the user would flow through our environments to minimize distance travelled.</p>



<h1 id="h-lessons-we-learned">Lessons we learned</h1>



<p>In adapting our design system for the Metaverse, we learned that many of the fundamental reasons traditional specifications work are universal and translated directly to 3D design and development.&nbsp; This was not surprising, because we were using established design patterns that were well researched, so we expected them to translate well.</p>



<p>We discovered many additional ways to help our users feel <em>present</em>, and we used specifications to establish patterns to ensure our users had positive experiences.&nbsp; When designing experiences for the Metaverse, we discovered it is very important to have empathy for the user, and will be critical to the success of products targeting the platform.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/11/08/adapting-a-design-system-to-work-for-the-metaverse/">Adapting a design system to work for the Metaverse</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 https://stackoverflow.blog/2021/11/08/adapting-a-design-system-to-work-for-the-metaverse/feed/ 0 19047 The Overflow #98: Front end: JavaScript. Back end: Also JavaScript. https://stackoverflow.blog/2021/11/05/the-overflow-98-front-end-javascript-back-end-also-javascript/ https://stackoverflow.blog/2021/11/05/the-overflow-98-front-end-javascript-back-end-also-javascript/#comments Ryan Donovan and Cassidy Williams Fri, 05 Nov 2021 13:00:00 +0000 The Overflow newsletter the overflow https://stackoverflow.blog/?p=19022 <p>Welcome to ISSUE #98 of The Overflow! This newsletter is by developers, for developers, written and curated by the Stack Overflow team and&#160;Cassidy Williams&#160;at&#160;Netlify. This week: the home team talks through their first ten years in programming, ways to cope with murderous wizards, and science goes too far by&#160;rendering DOOM via checkboxes. From the blog…</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/11/05/the-overflow-98-front-end-javascript-back-end-also-javascript/">The Overflow #98: Front end: JavaScript. Back end: Also JavaScript.</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 
<p>Welcome to ISSUE #98 of The Overflow! This newsletter is by developers, for developers, written and curated by the Stack Overflow team and&nbsp;<a href="https://itr-links.stackoverflow.email/u/click?_t=3603a3d8f3104ca5bd7015a5845f7fb7&amp;_m=EoL62DB0PIGuXz8jH5uBuQ84lXlHlps2&amp;_e=_QiVw4xkxL6Kq_I-OU4afBnKfI77FjoIfX88HTVRZxPuTd2bnAMrrH9rcbsb0dWeVEF1qnpHf4xYVNc9DjG8B3SxoCwGD7YNwE1j5XUlAoVN5IWubZGRkJQZDmmaOZBv48jI4i91xWdFCil-LQ1NSRFjmqF5DoNWqj0-C-Jd-e6BG04-YOMtUtGjjvW4FlO4SiDdPs_9w2phRLlieyDSowbBJXd8neaip9JCBAeEhORiLVYGsioAE1W0vQlkjGKF">Cassidy Williams</a>&nbsp;at&nbsp;<a href="https://itr-links.stackoverflow.email/u/click?_t=3603a3d8f3104ca5bd7015a5845f7fb7&amp;_m=EoL62DB0PIGuXz8jH5uBuQ84lXlHlps2&amp;_e=_QiVw4xkxL6Kq_I-OU4afOZOM0oCqsuuy0jKIrvb1QwkHWIZOMWNPCK6iuSTMOLeVDuTWeKOcbbyBczybLGtoNQkE84uGWTIEgGhFcxEULL45YJLR4857Ii-0ehWwRpRtjVPtwUxxOtY9-B2oCRv3dmx-KEES0t57P4_TNE4xFT-W5TGiXBreKWRyHfSL-Ozr796X8rmwbKE4P01pm8iSRIwfptm3apXxzvS_usQlDNLQGeGDgkjk55n1OBtvYt6oHij-wFSi5PdDR16hvrYr7E3MKhupgD-zGOVEWxRdxJ-RcBKrj9bAExDUmk948bZeThbs8xuJpwrwNDQkq5QPw%3D%3D">Netlify</a>. This week: the home team talks through their first ten years in programming, ways to cope with murderous wizards, and science goes too far by&nbsp;rendering DOOM via checkboxes.</p>



<h2 id="h-from-the-blog">From the blog</h2>



<p><a href="https://stackoverflow.blog/2021/10/25/node-js-makes-fullstack-programming-easy-with-server-side-javascript/"><strong>Node.js makes fullstack programming easy with server-side JavaScript</strong></a>&nbsp;<em>stackoverflow.blog</em><br>Here’s why JavaScript became the language of choice for front-end and back-end web dev.</p>



<p><a href="https://stackoverflow.blog/2021/10/27/strong-teams-are-more-than-just-connected-they-are-communities/"><strong>Strong teams are more than just connected, they are communities</strong></a>&nbsp;<em>stackoverflow.blog</em><br>Organizations and leaders have a responsibility to ensure people are heard, to build high levels of trust, and to enable them to show up authentically so they can do their best work.</p>



<p><a href="https://stackoverflow.blog/2021/10/26/podcast-387-the-first-ten-years-of-our-programming-lives/"><strong>Podcast 387: The first ten years of our programming lives</strong></a>&nbsp;<em>stackoverflow.blog</em><br>Everybody starts somewhere with coding, even if that’s just to make your favorite game better.</p>



<p><a href="https://cloud.couchbase.com/sign-up?utm_source=stack_overflow&amp;utm_medium=newsletter&amp;utm_id=q3_dev_awareness"><strong>Couchbase Capella database-as-a service. Try it free.</strong></a>&nbsp;<em>promotion</em><br>Capella DBaaS is flexible, full-featured and fully managed – with built-in access via K/V, SQL and full text search. It’s blazing fast, yet surprisingly affordable. Try Capella today for free.</p>



<h2 id="h-interesting-questions">Interesting questions</h2>



<p><a href="https://worldbuilding.stackexchange.com/questions/215769/how-do-i-stop-annoyed-wizards-from-killing-people-all-the-time"><strong>How do I stop annoyed wizards from killing people all the time?</strong></a>&nbsp;<em>worldbuilding.stackexchange.com</em><br>“The plural of wizard is war.”</p>



<p><a href="https://stackoverflow.com/questions/69729326/endless-sine-generation-in-c"><strong>Endless sine generation in C</strong></a>&nbsp;<em>stackoverflow.com</em><br>Time is a flat circle, no wait, a repeating wave.</p>



<p><a href="https://softwareengineering.stackexchange.com/questions/433042/what-is-the-purpose-of-storing-multiple-lower-resolution-versions-of-the-same-or"><strong>What is the purpose of storing multiple lower resolution versions of the same original image?</strong></a>&nbsp;<em>softwareengineering.stackexchange.com</em><br>Might as well shrink them ahead of time in case the debigulator is on the fritz.</p>



<p><a href="https://workplace.stackexchange.com/questions/179528/is-it-normal-for-a-skilled-data-scientist-to-be-considered-a-swiss-knife-and-h"><strong>Is it normal for a skilled data scientist to be considered a “Swiss knife” and be assigned everything but data science tasks? [Closed, but fun]</strong></a>&nbsp;<em>workplace.stackexchange.com</em><br>Have you tried doing your other tasks badly?</p>



<h2 id="h-links-from-around-the-web">Links from around the web</h2>



<p><a href="https://web.dev/ps-on-the-web/"><strong>Photoshop’s journey to the web</strong></a>&nbsp;<em>web.dev</em><br>Just a few years back, it would blow people’s minds to think software like Photoshop could run in the browser. We’re closer than ever to the browser acting a full fledged “operating system” for heavy duty apps..</p>



<p><a href="https://www.apollographql.com/blog/backend/architecture/where-does-graphql-fit-in-the-stack-modern-app-development-with-graphql/"><strong>Where does GraphQL fit In the stack?&nbsp;</strong></a>&nbsp;<em>www.apollographql.com</em><br>Front-end? Back-end? Middleware? Something else? GraphQL can live in various places, but where does it fit best?&nbsp;</p>



<p><a href="https://thenewstack.io/why-outdated-jquery-is-still-the-dominant-javascript-library/"><strong>Why outdated jQuery is still the dominant JavaScript library&nbsp;</strong></a><em>thenewstack.io</em><br>“A staggering 78% of the top one million websites use jQuery in some way.” What is dead may never die.</p>



<p><a href="https://healeycodes.com/doom-rendered-via-checkboxes"><strong>DOOM rendered via checkboxes&nbsp;</strong></a>&nbsp;<em>healeycodes.com</em><br>Has science gone too far? Probably. Check out how someone painstakingly rendered DOOM with a friendly HTML element.</p>



<p>Onboard, organize, and bring your team up to speed in a jiffy.&nbsp;<a target="_blank" rel="noreferrer noopener" href="https://itr-links.stackoverflow.email/u/click?_t=3603a3d8f3104ca5bd7015a5845f7fb7&amp;_m=J2j24lxDQTEuwPd5Cqu5ugxEP4Nup0Hd&amp;_e=tvjhMrv7atYcgrppTk1g939n0TOMqK8VK0FIJna3k3KJASzVGae_sX5sf3KPi1hf2i5bxdA9xhH1f-iiMOO7ZFhn7xzAMFIbYnBhpTVT4YaVxNFzFGdAHiiEmx7YErIIVxBKkYUg6iknFjIhWONGTkIJn8IqBwnVV0l3yY7ScIAISOmXKMdnUAqYDRZbTBMJIkKY_QpH6yZNU_eh54wXqDW8Wpo2teMbvQF4Xm7qqXJd83J9ZY2IcjPlLJTDAm59hcKcidFcXov0SI1SA2sdJyQvN3-FBHLcc6AOGJQuveBkeTVp2-deuu3Ntnjx81ZzrM2rO56BYZb0_0JMMxOo0T1dQmOSzvTyeYRljnArFYMAOnBwZPb7gsBCwG0r13Z9YZh9Whu6zwJWSvKiJLX8Eg%3D%3D">Try Stack Overflow for Teams</a>.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/11/05/the-overflow-98-front-end-javascript-back-end-also-javascript/">The Overflow #98: Front end: JavaScript. Back end: Also JavaScript.</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 https://stackoverflow.blog/2021/11/05/the-overflow-98-front-end-javascript-back-end-also-javascript/feed/ 1 19022 Podcast 390: Web3 won’t save us https://stackoverflow.blog/2021/11/05/podcast-390-web3-wont-save-us/ https://stackoverflow.blog/2021/11/05/podcast-390-web3-wont-save-us/#comments Ben Popper Fri, 05 Nov 2021 04:40:00 +0000 The Stack Overflow Podcast crypto se-stackoverflow se-tech the stack overflow podcast web3 https://stackoverflow.blog/?p=19040 <p>If we tear up the rules and build a new internet, how can we avoid making the same mistakes?</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/11/05/podcast-390-web3-wont-save-us/">Podcast 390: Web3 won&#8217;t save us</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 
<iframe loading="lazy" height="200px" width="100%" frameborder="no" scrolling="no" seamless="" src="https://player.simplecast.com/bca91ff9-e110-4cdf-b696-35736b0cf2f5?dark=false"></iframe>



<p>Not to get too meta, but there is a lot of buzz in the tech world and among software developers about the advent of Web3 and the opportunity blockchains provide to write new rules for a future internet. In today&#8217;s episode, we discuss what these emerging tools and platforms might bring. Cassidy and Ceora throw a much needed glass of cold realism on Ben&#8217;s sunny techno-optimism, and old man Ryan shouts at a cloud.</p>



<h3 id="h-what-is-web3-the-decentralized-internet-of-the-future"><a href="https://www.freecodecamp.org/news/what-is-web3/">What is Web3? The Decentralized Internet of the Future</a></h3>



<p><a href="https://cassidoo.co/">Cassidy</a></p>



<p><a href="https://www.ceoraford.com/">Ceora</a></p>



<p><a href="https://stackoverflow.blog/2020/01/27/blog-contributor-guidelines/">Ryan</a></p>



<p><a href="https://twitter.com/benpopper">Ben</a></p>



<p>Thanks to our lifeboat badge winner of the week, Tadeck, for showing us how to design a <a href="https://stackoverflow.com/questions/5136447/function-for-factorial-in-python/9049770#9049770">Function for Factorial in Python</a></p>



<p><a href="https://the-stack-overflow-podcast.simplecast.com/episodes/web3-dao-crypto-blockchain-nft-society/transcript/">TRANSCRIPT</a></p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/11/05/podcast-390-web3-wont-save-us/">Podcast 390: Web3 won&#8217;t save us</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 https://stackoverflow.blog/2021/11/05/podcast-390-web3-wont-save-us/feed/ 9 19040 Intel joins Collectives™ on Stack Overflow https://stackoverflow.blog/2021/11/03/intel-joins-collectives-on-stack-overflow/ https://stackoverflow.blog/2021/11/03/intel-joins-collectives-on-stack-overflow/#respond Jascha Drel Wed, 03 Nov 2021 15:40:23 +0000 Announcements artificial intelligence collectives se-stackoverflow se-tech https://stackoverflow.blog/?p=19017 <p>Intel is now on Collectives™ on Stack Overflow. </p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/11/03/intel-joins-collectives-on-stack-overflow/">Intel joins Collectives™ on Stack Overflow</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 
<p>Q&amp;A around Intel technologies has been part of the Stack Overflow knowledge base for years, resulting in tens of thousands of questions and answers on the platform to date. We&#8217;re working with Intel to help you find the trusted answers you need, faster, by centralizing that content and connecting you with Intel product experts and trusted users.</p>



<p><a href="https://stackoverflow.com/collectives/intel">Intel is now on Collectives<img src="https://s.w.org/images/core/emoji/13.1.0/72x72/2122.png" alt="™" class="wp-smiley" style="height: 1em; max-height: 1em;" /> on Stack Overflow</a><strong>. </strong>ICYMI, <a href="https://stackoverflow.com/collectives">Collectives</a> are dedicated spaces on Stack Overflow where you can find resources (including questions, recommended answers, and technical articles) related to your favorite technologies grouped together.</p>



<p><a href="https://stackoverflow.com/collectives/intel">This Collective</a> will help developers use Intel technologies to support projects across a variety of use cases, from smart cities to gaming and virtual reality, retail, and health and life sciences. It&#8217;s a space for you to share your own technical knowledge, collaborate with the Intel team, and access the coding resources you need to do what you do best: build.</p>



<p>“Our goal at Stack Overflow is to empower technologists with the knowledge they need, when they need it,” said Teresa Dietrich, Chief Product &amp; Technology Officer at Stack Overflow. “Collectives<img src="https://s.w.org/images/core/emoji/13.1.0/72x72/2122.png" alt="™" class="wp-smiley" style="height: 1em; max-height: 1em;" /> enables technology providers, like Intel, and users to forge connections that ultimately make building and operating technology easier for all. We truly believe that through collaboration, we can enable developers and technologists to find the information they need faster and more confidently.”</p>



<p>“Developers are crucial to driving innovation and unlocking the full potential of Intel technologies,” said Bill Pearson, VP, Internet of Things Group General Manager of Developer Enabling at Intel. “Collectives on Stack Overflow provides easy access to relevant information as well as Intel product experts who can answer questions and help accelerate the development journey. Together with Stack Overflow, we’re here to help the growing base of Intel developers to deliver cutting-edge solutions for real-world problems.”</p>



<p>This Intel community space is the centralized home for resources covering everything from CPUs to purpose-built AI accelerators and software tools like Intel® Distribution of OpenVINO<img src="https://s.w.org/images/core/emoji/13.1.0/72x72/2122.png" alt="™" class="wp-smiley" style="height: 1em; max-height: 1em;" /> toolkit, Intel® DevCloud, and other Intel-built and supported products and services. You’re able to find trusted answers from Intel product experts, participate in the Collective-specific leaderboard and access how-to guides and knowledge articles around Intel technologies.</p>



<div class="wp-block-image"><figure class="aligncenter size-large"><img loading="lazy" width="635" height="630" src="https://149351115.v2.pressablecdn.com/wp-content/uploads/2021/11/Collectives-on-Stack-Overflow-Intel-landing-page-e1635953203343-635x630.png" alt="" class="wp-image-19025" srcset="https://149351115.v2.pressablecdn.com/wp-content/uploads/2021/11/Collectives-on-Stack-Overflow-Intel-landing-page-e1635953203343-635x630.png 635w , https://149351115.v2.pressablecdn.com/wp-content/uploads/2021/11/Collectives-on-Stack-Overflow-Intel-landing-page-e1635953203343-300x298.png 300w , https://149351115.v2.pressablecdn.com/wp-content/uploads/2021/11/Collectives-on-Stack-Overflow-Intel-landing-page-e1635953203343-150x150.png 150w , https://149351115.v2.pressablecdn.com/wp-content/uploads/2021/11/Collectives-on-Stack-Overflow-Intel-landing-page-e1635953203343-768x762.png 768w , https://149351115.v2.pressablecdn.com/wp-content/uploads/2021/11/Collectives-on-Stack-Overflow-Intel-landing-page-e1635953203343-1536x1525.png 1536w , https://149351115.v2.pressablecdn.com/wp-content/uploads/2021/11/Collectives-on-Stack-Overflow-Intel-landing-page-e1635953203343-2048x2033.png 2048w " sizes="(max-width: 635px) 100vw, 635px" /></figure></div>



<p>This is the fourth in a series of Collectives<img src="https://s.w.org/images/core/emoji/13.1.0/72x72/2122.png" alt="™" class="wp-smiley" style="height: 1em; max-height: 1em;" /> launching since we <a href="https://stackoverflow.blog/2021/06/23/collectives-stack-overflow/">rolled out Collectives<img src="https://s.w.org/images/core/emoji/13.1.0/72x72/2122.png" alt="™" class="wp-smiley" style="height: 1em; max-height: 1em;" /> in June</a>. We’ve already seen over 18,000 community members joining in. <br><br>To learn more about Collectives, visit <a href="https://stackoverflow.com/collectives-on-stack-overflow"><a target="_blank" href="https://stackoverflow.com/collectives" rel="noreferrer noopener">https://stackoverflow.com/collectives</a></a>. <br><br>To join Intel’s Collective, visit <a target="_blank" href="https://stackoverflow.com/collectives/intel" rel="noreferrer noopener">https://stackoverflow.com/collectives/intel</a>.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/11/03/intel-joins-collectives-on-stack-overflow/">Intel joins Collectives™ on Stack Overflow</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 https://stackoverflow.blog/2021/11/03/intel-joins-collectives-on-stack-overflow/feed/ 0 19017 Our new and enhanced Microsoft Teams integration https://stackoverflow.blog/2021/11/02/our-new-and-enhanced-microsoft-teams-integration/ https://stackoverflow.blog/2021/11/02/our-new-and-enhanced-microsoft-teams-integration/#comments Vasudha Swaminathan Tue, 02 Nov 2021 14:00:00 +0000 Company microsoft teams se-stackoverflow se-tech stack overflow for teams https://stackoverflow.blog/?p=18996 <p>With new features and tweaks to the Stack Overflow for Teams integration with Microsoft Teams, we’re sure that the new and improved Version 2 will come in handy. This article provides additional context around the evolution of this integration and how it might be useful to your organization!</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/11/02/our-new-and-enhanced-microsoft-teams-integration/">Our new and enhanced Microsoft Teams integration</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 
<p>It’s been nearly two years since Stack Overflow for Teams launched its integration with Microsoft Teams. As one of our inaugural integrations, we worked closely with Microsoft to form a meaningful partnership that paves the way for future Stack Overflow for Teams integrations.&nbsp;</p>



<p>Since that launch, scores of our customers have used it to get faster access to knowledge within their existing workflows. We’ve even seen a 137% increase in the MS Teams usage over the past six months within our Enterprise customers.&nbsp;</p>



<p>To make this integration even more helpful to users, we’ve been working hard to update it. Since the original launch, we’ve collected feedback from our customers about the most valuable functionalities within Microsoft Teams. Thanks to our product and engineering teams, we’re updating this integration to make the native Stack Overflow for Teams experience available to users directly within Microsoft Teams.</p>



<p>With new features and tweaks to the integration, we’re sure that the new and improved Version 2 will come in handy. Below you’ll find additional context around the evolution of this integration and how it might be useful to your organization!</p>



<h2 id="h-an-integration-is-born">An integration is born</h2>



<p>According to<strong> </strong><a href="https://hbr.org/2021/09/collaboration-overload-is-sinking-productivity">Harvard Business Review, </a>&nbsp;a “collaborative overload trap” is when people schedule and participate in more meetings to be more productive, but these meetings displace focus time and can make employees less productive. That same study noted that “it can take us as many as <a href="http://blog.idonethis.com/distractions-at-work/">23 minutes</a> to get fully back on task after [an] interruption.”</p>



<p>Part of the problem could be <a href="https://www.shrm.org/resourcesandtools/hr-topics/technology/pages/are-employees-overwhelmed-by-too-many-apps.aspx">too many apps</a>, which can contribute to burnout, wasted time, and a general energy drain that permeates the whole company. When fragments of knowledge are stuck in random chat channels in Slack or MS Teams, or hidden away on Google Drive, employees waste time and energy hunting for the disparate information they need.&nbsp;</p>



<p>These interruptions and delays can have real impacts on an organization’s bottom line. <a href="https://www.financialdirector.co.uk/2021/09/24/how-is-knowledge-management-crucial-to-an-effective-growth-strategy/">IDC</a> estimates that Fortune 500 companies lose around $31 billion a year by failing to share knowledge within their organization.</p>



<p>Large organizations use multiple business applications to help teams collaborate and coordinate their work: chat applications,homegrown tools, project management, and code repositories, just to name a few. Once they cross that threshold into too many tools, these platforms that are meant to boost productivity actually become a burden.&nbsp;</p>



<p>We created the Microsoft Teams integration to minimize the knowledge-hunting problem that can lead to context-switching and ultimately burnout.</p>



<p>“Stack Overflow for Teams integration with Microsoft Teams is nice because this is mostly where I do my day-to-day work. I don&#8217;t have to leave Microsoft Teams to go to another site.” &#8211; Brandon Camerer, Senior User Experience Designer, CloudFit Software</p>



<h2 id="h-solving-for-collaborative-overload">Solving for collaborative overload</h2>



<p>Microsoft Teams is an integral part of many business operations. Our integration with Microsoft Teams removes interruptions and accelerates development time.&nbsp;</p>



<p>Specifically, the Stack Overflow for Teams integration provides quick access to answers and solutions, knowledge retention for future reuse, and awareness of new or updated information. You never have to leave Microsoft Teams to find the information you need.&nbsp;</p>



<p><a href="https://stackoverflowsolutions.com/topic/client-stories/microsoft-case-study">Microsoft uses both Microsoft Teams and Stack Overflow for Teams</a> to improve communication and reduce repetitive and distracting pings.&nbsp;</p>



<p>&#8220;With the integration between Microsoft Teams and Stack Overflow, I’m just super excited to have one place where I can see my questions in an area where I already do a lot of my work today.&#8221;</p>



<ul><li>Laura MacLeod, Program Manager, Developer Services Division at Microsoft</li></ul>



<h3 id="h-how-it-works">How it works</h3>



<p>The v2 of this integration provides the features you already love, with new enhancements that make your workday better. Let’s look at what’s new:</p>



<p><em>Minimize context switching&nbsp;</em></p>



<p>At Stack Overflow, we’ve always emphasized the importance of avoiding context switching. With this integration, you never have to leave Microsoft Teams to access your Stack Overflow for Teams knowledge. Our first version of the integration enabled the channel bot action to search all of Stack Overflow for Teams. Search results were then displayed within the channel for quick access to everyone in the channel.</p>



<p>With v2, there’s even less context switching:</p>



<ul><li>With the message extension feature, a user can search the Stack Overflow for Teams knowledge base, <em>from within </em>a chat channel in Microsoft Teams. The integration provides the best fitting match, and the user is then free to share it with the entire channel.&nbsp;</li><li>With the Personal App feature, users&nbsp; can have the native experience of Stack Overflow for Teams without leaving Microsoft Teams. They’ll have the ability to quickly view bookmarked, followed, and personal Questions along with personal Articles.&nbsp;</li><li>Users can now reuse existing knowledge before tapping into teammates by viewing a list of Questions or Articles within a channel’s tab. This knowledge can be filtered by tags that are applicable to the channel.&nbsp;</li></ul>



<figure class="wp-block-image"><img src="https://lh4.googleusercontent.com/u0Rp1jrPufx8RqtrFxMrq1bZ4Nczc00ro-Yyj_9LBaLK3UT-9RMG47oAR-Xrm8ZwXMWCDKCxHhuf2as8iJvhrvQtygRfcA4ODJeaZMXuUrPQw2pI7dcOeN30O2ycm0if1IiNJYS_" alt=""/><figcaption><em>Search the knowledge base via the message extension</em></figcaption></figure>



<figure class="wp-block-image"><img src="https://lh3.googleusercontent.com/TMiu-LmY58MUuv7rbtY9ISrN-u1uvtI3T5pyJTRn43w728WY5HgwXEYDIxoMTmBixcfcfa4GXWNKKc3CET6yvPE-5JGvkEA6MAs0Sm5z6SJFl01p0HHxdyQrHKvocR7u7sJUmxmn" alt=""/><figcaption><em>Quick access to knowledge from Stack Overflow for Teams within a channel’s tab.&nbsp;</em></figcaption></figure>



<p><em>Knowledge capture&nbsp;</em></p>



<p>A key facet of the Stack Overflow for Teams integration with Microsoft Teams is the ability to capture knowledge directly from Microsoft Teams. This helps users from having to search through long chat threads for critical knowledge. Users can ask questions in the channel bot and receive the best matching result directly within their Microsoft Teams chat. We also prompt users to ask a question on Stack Overflow for Teams if there are no existing matches to a question they’ve searched.&nbsp;</p>



<p>Now, we’ve made the knowledge capture functionality stronger through:&nbsp;</p>



<ul><li>Converting posts within Microsoft Teams to a question within Stack Overflow for Teams to reuse the knowledge in the future.&nbsp;</li><li>An ask modal displays within Microsoft Teams to capture additional detail and help to minimize the need to switch between applications.&nbsp;</li><li>If a user needs help filling out all of the details within the question, teammates can chime in and finish asking the question.</li></ul>



<figure class="wp-block-image"><img src="https://lh5.googleusercontent.com/cKiFnxAZDietY639CIvGEIWDE2rmLpnvwsPYyK2cWGsjA3pXFQFM1VWWpTXcV87gVxyHJAzz97SglIFD6wJISoZ6KNEyuJpnBVlwrvWKykyAVrep3x4cWWEcmBYWX5BOpQaHfRi9" alt=""/><figcaption><em>New ask modal</em></figcaption></figure>



<p><em>Personal application</em></p>



<p>This integration now provides a personal oasis of knowledge tailored to a user within a personal app. The personal app links directly to important knowledge including bookmarks, followed Questions, and a user’s own Questions and Articles. This quick access to solutions helps users resolve technical issues even faster now.&nbsp;</p>



<figure class="wp-block-image"><img src="https://lh5.googleusercontent.com/0oe0GJ8Bx-ZllNBiUYcg1zH5OVUTI6jH4BWhyizh5ApwdpVMRE3Kvcm6x1JdSPwVnnDrxbhuHGfXQievECnXaeO0apfGpjipP8q3YoeoZmrsaQHzZ3kAaBd3kC0sNGvij0mekRlH" alt=""/><figcaption><em>A native Stack Overflow for Teams experience with a user’s personal app</em></figcaption></figure>



<p><em>Automated notifications of new or updated knowledge</em></p>



<p>Our Microsoft Teams integration keeps users up-to-date with automated notifications any time something is updated within the Stack Overflow for Teams instance. Users can set up tag-based push notifications to share new questions, answers, comments, and Articles directly within Microsoft Teams. They can also preview new knowledge related to a Tag without leaving Microsoft Teams. Lastly, users can create new notifications or edit existing notifications quickly by interacting with the channel bot within Microsoft Teams.&nbsp;</p>



<p><strong>Want to try version 2 of the Microsoft Teams integration?&nbsp;</strong></p>



<p><a href="https://stackoverflow.com/teams/integrations/microsoft-teams">Download it</a> today or, if you’re not already a customer, <a href="https://stackoverflowsolutions.com/explore-teams?_ga=2.149967926.1295509537.1635771232-1929746118.1581454566?utm_source=so-owned&amp;utm_medium=website&amp;utm_campaign=ms-teams-v2&amp;utm_content=contact-us">contact us</a> to learn more about it.&nbsp;</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/11/02/our-new-and-enhanced-microsoft-teams-integration/">Our new and enhanced Microsoft Teams integration</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 https://stackoverflow.blog/2021/11/02/our-new-and-enhanced-microsoft-teams-integration/feed/ 3 18996 Podcast 389: The big problem with only being able to solve big problems https://stackoverflow.blog/2021/11/02/podcast-389-the-big-problem-with-only-being-able-to-solve-big-problems/ https://stackoverflow.blog/2021/11/02/podcast-389-the-big-problem-with-only-being-able-to-solve-big-problems/#comments Ryan Donovan Tue, 02 Nov 2021 04:40:00 +0000 The Stack Overflow Podcast se-stackoverflow se-tech the stack overflow podcast https://stackoverflow.blog/?p=19007 <p>Don't forget the little springs that keep the big machine running.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/11/02/podcast-389-the-big-problem-with-only-being-able-to-solve-big-problems/">Podcast 389: The big problem with only being able to solve big problems</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 
<p>In this episode, Ben and Ryan go toe to toe on big companies vs. small companies, closing questions vs. ignoring them, and privacy vs.  law enforcement when it comes to smartphone data. </p>



<iframe loading="lazy" height="200px" width="100%" frameborder="no" scrolling="no" seamless="" src="https://player.simplecast.com/f28dd810-59a8-4f39-87bb-01cd80d3c52f?dark=false"></iframe>



<h2 id="h-show-notes">Show notes</h2>



<p>We start out the show talking about this article:<a href="https://www.lesswrong.com/posts/koGbEwgbfst2wCbzG/i-don-t-know-how-to-count-that-low"> I Don&#8217;t Know How To Count That Low</a>.</p>



<p><a href="https://www.wired.co.uk/article/apple-surveillance-technology">What does it mean for Apple to normalize surveillance?</a></p>



<p><a href="https://www.haaretz.com/u-s-investigating-how-isis-got-all-those-toyota-pickups-1.5406016">Toyota trucks and Land Cruisers</a> with some violent people.  Should they not be sold in violent areas?</p>



<p>Thanks to our new community manager, Bella Asay, who shared this question:<a href="https://worldbuilding.stackexchange.com/questions/215769/how-do-i-stop-annoyed-wizards-from-killing-people-all-the-time"> How do I stop annoyed wizards from killing people all the time?</a> A common problem for us muggles.&nbsp;</p>



<p><a href="https://the-stack-overflow-podcast.simplecast.com/episodes/the-big-problem-with-only-being-able-to-solve-big-problems/transcript">TRANSCRIPT</a></p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/11/02/podcast-389-the-big-problem-with-only-being-able-to-solve-big-problems/">Podcast 389: The big problem with only being able to solve big problems</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 https://stackoverflow.blog/2021/11/02/podcast-389-the-big-problem-with-only-being-able-to-solve-big-problems/feed/ 3 19007 Why SOLID principles are still the foundation for modern software architecture https://stackoverflow.blog/2021/11/01/why-solid-principles-are-still-the-foundation-for-modern-software-architecture/ https://stackoverflow.blog/2021/11/01/why-solid-principles-are-still-the-foundation-for-modern-software-architecture/#comments Daniel Orner Mon, 01 Nov 2021 14:00:00 +0000 Code for a Living se-stackoverflow se-tech software architecture software engineering https://stackoverflow.blog/?p=18998 <p>While computing has changed a lot in the 20 years since the SOLID principles were conceived, they are still the best practices for designing software. </p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/11/01/why-solid-principles-are-still-the-foundation-for-modern-software-architecture/">Why SOLID principles are still the foundation for modern software architecture</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 
<p>The SOLID principles are a time-tested rubric for creating quality software. But in a world of multi-paradigm programming and cloud computing, do they still stack up? I&#8217;m going to explore what SOLID stands for (literally and figuratively), explain why it still makes sense, and share some examples of how it can be adapted for modern computing.</p>



<h2 id="h-what-is-solid">What is SOLID?</h2>



<p><a href="https://en.wikipedia.org/wiki/SOLID">SOLID</a> is a set of principles distilled from the writings of Robert C. Martin in the early 2000s. It was proposed as a way to think specifically about the quality of object-oriented (OO) programming. As a whole, the SOLID principles make arguments for how code should be split up, which parts should be internal or exposed, and how code should use other code. I&#8217;ll dive into each letter below and explain its original meaning, as well as an expanded meaning that can apply outside of OO programming.</p>



<h2 id="h-what-has-changed">What has changed?</h2>



<p>In the early 2000&#8217;s, Java and C++ were king. Certainly in my university classes, Java was our language of choice and most of our exercises and lessons used it. The popularity of Java spawned a cottage industry of books, conferences, courses, and other material to get people from writing code to writing <em>good</em> code.</p>



<p>Since then, the changes in the software industry have been profound. A few notable ones:</p>



<ul><li><strong>Dynamically-typed languages</strong> such as Python, Ruby, and especially JavaScript have become just as popular as Java—overtaking it in some industries and types of companies.<br></li><li><strong>Non-object-oriented paradigms</strong>, most notably functional programming (FP), are also more common in these new languages. Even Java itself introduced lambdas! Techniques such as metaprogramming (adding and changing methods and features of objects) have gained popularity as well. There are also &#8220;softer&#8221; OO flavors such as Go, which has static typing but not inheritance. All this means that classes and inheritance are less important in modern software than in the past.<br></li><li><strong>Open-source software</strong> has proliferated. Whereas earlier, the most common practice would be to write closed-source compiled software to be used by customers, nowadays it&#8217;s much more common for your dependencies to be open-source. Because of this, the kind of logic and data hiding that used to be imperative when writing a library is no longer as important.<br></li><li><strong>Microservices</strong> and <strong>software as a service </strong>exploded onto the scene. Rather than deploying an application as a big executable that links all its dependencies together, it&#8217;s much more common to deploy a small service that talks to other services, either your own or powered by a third party.</li></ul>



<p>Taken as a whole, many of the things that SOLID really cared about—such as classes and interfaces, data hiding, and polymorphism—are no longer things that programmers deal with every day.</p>



<h2 id="h-what-hasn-t-changed">What hasn&#8217;t changed?</h2>



<p>The industry is different in many ways now, but there are some things that haven&#8217;t changed and likely won&#8217;t. These include:</p>



<ul><li><strong>Code is written and modified by people.</strong> Code is written once and read many, many times. There will always be a need for well-documented code, particularly well-documented APIs, whether internal or external.<br></li><li><strong>Code is organized into modules</strong>. In some languages, these are classes. In others, they may be individual source files. In JavaScript, they may be exported objects. Regardless, there exists some way of separating and organizing code into distinct, bounded units. Therefore, there will always be a need to decide how best to group code together.<br></li><li><strong>Code can be internal or external.</strong> Some code is written to be used by yourself or your team. Other code is written to be used by other teams or even by external customers (through an API). This means there needs to be some way to decide what code is &#8220;visible&#8221; and what is &#8220;hidden.&#8221;</li></ul>



<h2 id="h-modern-solid">&#8220;Modern&#8221; SOLID</h2>



<p>In the following sections, I will restate each of the five SOLID principles to a more general statement that can apply to OO, FP, or multi-paradigm programming and provide examples. In many cases, these principles can even apply to whole services or systems!</p>



<p>Note that I will use the word <em>module</em> in the following paragraphs to refer to a grouping of code. This could be a class, a module, a file, etc.</p>



<h2 id="h-single-responsibility-principle">Single responsibility principle</h2>



<p><strong>Original definition: </strong><em>&#8220;There should never be more than one reason for a class to change.&#8221;</em></p>



<p>If you write a class with many concerns, or &#8220;reasons to change&#8221;, then you need to change the same code whenever <em>any</em> of those concerns has to change. This increases the likelihood that a change to one feature will accidentally break a different feature.</p>



<p>As an example, here&#8217;s a franken-class that should never make it to production:</p>



<pre class="s-code-block wp-block-code"><code>class Frankenclass {
   public void saveUserDetails(User user) {
       //...
   }
 
   public void performOrder(Order order) {
       //...
   }
 
   public void shipItem(Item item, String address) {
       // ...
   }
}</code></pre>



<p><strong>New definition: </strong><em>&#8220;Each module should do one thing and do it well.&#8221;</em></p>



<p>This principle is closely related to the topic of <em>high cohesion</em>. Essentially, your code should not mix multiple roles or purposes together.</p>



<p>Here&#8217;s an FP version of this same example using JavaScript:</p>



<pre class="s-code-block wp-block-code"><code>const saveUserDetails = (user) => { ... }
const performOrder = (order) => { ...}
const shipItem = (item, address) => { ... }
 
export { saveUserDetails, performOrder, shipItem };
 
// calling code
import { saveUserDetails, performOrder, shipItem } from "allActions";</code></pre>



<p>This could also apply in microservice design; if you have a single service that handles all three of these functions, it&#8217;s trying to do too much.</p>



<h2 id="h-open-closed-principle">Open-closed principle</h2>



<p><strong>Original definition: </strong><em>&#8220;Software entities should be open for extension, but closed for modification.&#8221;</em></p>



<p>This is part of the design of languages like Java—you can create classes and extend them (by creating a subclass), but you can&#8217;t modify the original class.&nbsp;</p>



<p>One reason for making things &#8220;open for extension&#8221; is to limit the dependency on the author of the class—if you need a change to the class, you&#8217;d constantly need to ask the original author to change it for you, or you&#8217;d need to dive into it to change it yourself. What&#8217;s more, the class would start to incorporate many different concerns, which breaks the single responsibility principle.</p>



<p>The reason for closing classes for modification is that we may not trust any and all downstream consumers to understand all the &#8220;private&#8221; code we use to get our feature working, and we want to protect it from unskilled hands.</p>



<pre class="s-code-block wp-block-code"><code>class Notifier {
   public void notify(String message) {
       // send an e-mail
   }
}
 
class LoggingNotifier extends Notifier {
   public void notify(String message) {
       super.notify(message); // keep parent behavior
       // also log the message
   }
}</code></pre>



<p><strong>New definition: </strong><em>&#8220;You should be able to use and add to a module without rewriting it.&#8221;</em></p>



<p>This comes for free in OO-land. In an FP world, your code has to define explicit &#8220;hook points&#8221; to allow modification. Here&#8217;s an example where not only before and after hooks are allowed, but even the base behavior can be overridden by passing a function to your function:</p>



<pre class="s-code-block wp-block-code"><code>// library code
 
const saveRecord = (record, save, beforeSave, afterSave) => {
  const defaultSave = (record) => {
   // default save functionality
  }
 
  if (beforeSave) beforeSave(record);
  if (save) {
    save(record);
  }
  else {
    defaultSave(record);
  }
  if (afterSave) afterSave(record);
}
 
// calling code
 
const customSave = (record) => { ... }
saveRecord(myRecord, customSave);</code></pre>



<h2 id="h-liskov-substitution-principle">Liskov substitution principle</h2>



<p><strong>Original definition: </strong><em>&#8220;If S is a</em><a href="https://en.wikipedia.org/wiki/Subtyping"><em> </em></a><em>subtype of T, then objects of type T may be replaced with objects of type S without altering any of the desirable properties of the program.&#8221;</em></p>



<p>This is a basic attribute of OO languages. It means that you should be able to use any subclass in place of their parent class. This allows for confidence in your <em>contract</em>—you can safely depend on any object that &#8220;is a&#8221; type <code>T</code> to continue to behave like a <code>T</code>. Here it is in practice:</p>



<pre class="s-code-block wp-block-code"><code>class Vehicle {
   public int getNumberOfWheels() {
       return 4;
   }
}
 
class Bicycle extends Vehicle {
   public int getNumberOfWheels() {
       return 2;
   }
}
 
// calling code
public static int COST_PER_TIRE = 50;
public int tireCost(Vehicle vehicle) {
    return COST_PER_TIRE * vehicle.getNumberOfWheels();
}   
  
Bicycle bicycle = new Bicycle();
System.out.println(tireCost(bicycle)); // 100</code></pre>



<p><strong>New definition:</strong> <em>You should be able to substitute one thing for another if those things are declared to behave the same way.</em></p>



<p>In dynamic languages, the important thing to take from this is that if your program &#8220;promises&#8221; to do something (such as implement an interface or a function), you need to keep to your promise and not surprise your clients.</p>



<p>Many dynamic languages use <a href="https://en.wikipedia.org/wiki/Duck_typing">duck typing</a> to accomplish this. Essentially, your function either formally or informally declares that it expects its input to behave a particular way and proceeds on that assumption.</p>



<p>Here&#8217;s an example using Ruby:</p>



<pre class="s-code-block wp-block-code"><code># @param input &#91;#to_s]
def split_lines(input)
 input.to_s.split("\n")
end</code></pre>



<p>In this case, the function doesn&#8217;t care what type <code>input</code> is—only that it has a <code>to_s</code> function that behaves the way all <code>to_s</code> functions are supposed to behave, i.e. it turns the input into a string. Many dynamic languages don&#8217;t have a way to <em>force</em> this behavior, so this becomes more of a discipline issue than a formalized technique.</p>



<p>Here&#8217;s an FP example using TypeScript. In this case, a higher-order function takes in a filter function which expects a single numeric input and returns a boolean value:</p>



<pre class="s-code-block wp-block-code"><code>const isEven = (x: number) : boolean => x % 2 == 0;
const isOdd = (x: number) : boolean => x % 2 == 1;
 
const printFiltered = (arr: number&#91;], filterFunc: (int) => boolean) => {
 arr.forEach((item) => {
   if (filterFunc(item)) {
     console.log(item);
   }
 })
}
 
const array = &#91;1, 2, 3, 4, 5, 6];
printFiltered(array, isEven);
printFiltered(array, isOdd);</code></pre>



<h2 id="h-interface-segregation-principle">Interface segregation principle</h2>



<p><strong>Original Definition: </strong><em>&#8220;Many client-specific interfaces are better than one general-purpose interface.&#8221;</em></p>



<p>In OO, you can think of this as providing a &#8220;view&#8221; into your class. Rather than giving your full implementation to all your clients, you create interfaces on top of them with just the methods relevant to that client, and ask your clients to use those interfaces.&nbsp;</p>



<p>As with the single responsibility principle, this decreases coupling between systems, and ensures that a client doesn&#8217;t need to know about, or depend on, features that it has no intention of using.</p>



<p>Here&#8217;s an example that passes the SRP test:</p>



<pre class="s-code-block wp-block-code"><code>class PrintRequest {
   public void createRequest() {}
   public void deleteRequest() {}
   public void workOnRequest() {}
}</code></pre>



<p>This code will generally have only one &#8220;reason to change&#8221;—it&#8217;s all related to print requests, which are all part of the same domain, and all three methods will likely change the same state. However, it&#8217;s not likely that the same client that&#8217;s <em>creating</em> requests is the one that&#8217;s <em>working</em> on requests. It makes more sense to separate these interfaces out:</p>



<pre class="s-code-block wp-block-code"><code>interface PrintRequestModifier {
   public void createRequest();
   public void deleteRequest();
}
 
interface PrintRequestWorker {
   public void workOnRequest()
}
 
class PrintRequest implements PrintRequestModifier, PrintRequestWorker {
   public void createRequest() {}
   public void deleteRequest() {}
   public void workOnRequest() {}
}</code></pre>



<p><strong>New Definition:</strong> <em>&#8220;Don&#8217;t show your clients more than they need to see&#8221;.</em></p>



<p>Only document what your client needs to know. This might mean using documentation generators to only output &#8220;public&#8221; functions or routes and leave &#8220;private&#8221; ones un-emitted.</p>



<p>In the microservice world, you can either use documentation or true separation to enforce clarity. For example, your external customers may only be able to log in as a user, but your internal services might need to get lists of users or additional attributes. You could either create a separate &#8220;external only&#8221; user service that calls your main service, or you could output specific documentation just for external users that hides the internal routes.&nbsp;</p>



<h2 id="h-dependency-inversion-principle">Dependency inversion principle</h2>



<p><strong>Original definition: </strong><em>&#8220;Depend upon abstractions, not concretions.&#8221;</em></p>



<p>In OO, this means that clients should depend on interfaces rather than concrete classes as much as possible. This ensures that code is relying on the smallest possible surface area—in fact, it doesn&#8217;t depend on code at all, just a <em>contract</em> defining how that code should behave. As with other principles, this reduces the risk of a breakage in one place causing breakages elsewhere accidentally. Here&#8217;s a simplified example:</p>



<pre class="s-code-block wp-block-code"><code>interface Logger {
   public void write(String message);
}
 
class FileLogger implements Logger {
   public void write(String message) {
       // write to file
   }
}
 
class StandardOutLogger implements Logger {
   public void write(String message) {
       // write to standard out
   }
}
 
public void doStuff(Logger logger) {
   // do stuff
   logger.write("some message")
}</code></pre>



<p>If you&#8217;re writing code that needs a logger, you don&#8217;t want to limit yourself to writing to files, because you don&#8217;t care. You just call the <code>write</code> method and let the concrete class sort it out.</p>



<p><strong>New definition:</strong> <em>&#8220;Depend upon abstractions, not concretions.&#8221;</em></p>



<p>Yep, in this case I&#8217;d leave the definition as is! The idea of keeping things abstract where possible is still an important one, even if the <em>mechanism</em> of abstracting in modern code is not as strong as it is in a strict OO world.</p>



<p>Practically, this is almost identical to the Liskov substitution principle discussed above. The main difference is that here, there is no default implementation. Because of this, the discussion involving duck typing and hook functions in that section equally applies to dependency inversion.</p>



<p>You can also apply abstraction to the microservice world. For example, you can replace direct communication between services with a message bus or queue platform such as Kafka or RabbitMQ. Doing this allows the services to send messages to a single generic place, without caring which specific service will pick those messages up and perform its task.</p>



<h2 id="h-conclusion">Conclusion</h2>



<p>To restate &#8220;modern SOLID&#8221; one more time:</p>



<ul><li>Don&#8217;t surprise the people who read your code.</li><li>Don&#8217;t surprise the people who use your code.</li><li>Don&#8217;t overwhelm the people who read your code.</li><li>Use sane boundaries for your code.</li><li>Use the right level of coupling—keep things together that belong together, and keep them apart if they belong apart.</li></ul>



<p>Good code is good code—that&#8217;s not going to change, and SOLID is a, well, solid basis to practice that!</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/11/01/why-solid-principles-are-still-the-foundation-for-modern-software-architecture/">Why SOLID principles are still the foundation for modern software architecture</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 https://stackoverflow.blog/2021/11/01/why-solid-principles-are-still-the-foundation-for-modern-software-architecture/feed/ 25 18998 The Overflow #97: Code quality is everyone’s concern https://stackoverflow.blog/2021/10/29/the-overflow-97-code-quality-is-everyones-concern/ https://stackoverflow.blog/2021/10/29/the-overflow-97-code-quality-is-everyones-concern/#respond Ryan Donovan and Cassidy Williams Fri, 29 Oct 2021 13:00:00 +0000 The Overflow newsletter the overflow https://stackoverflow.blog/?p=18976 <p>Welcome to ISSUE #97 of The Overflow! This newsletter is by developers, for developers, written and curated by the Stack Overflow team and&#160;Cassidy Williams&#160;at&#160;Netlify. This week: why hooks changed the React game, how to preview a short link without clicking through, and politicians who&#160;think viewing source is being a hacker. From the blog Code quality:…</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/10/29/the-overflow-97-code-quality-is-everyones-concern/">The Overflow #97: Code quality is everyone&#8217;s concern</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 
<p>Welcome to ISSUE #97 of The Overflow! This newsletter is by developers, for developers, written and curated by the Stack Overflow team and&nbsp;<a href="https://itr-links.stackoverflow.email/u/click?_t=3603a3d8f3104ca5bd7015a5845f7fb7&amp;_m=EoL62DB0PIGuXz8jH5uBuQ84lXlHlps2&amp;_e=_QiVw4xkxL6Kq_I-OU4afBnKfI77FjoIfX88HTVRZxPuTd2bnAMrrH9rcbsb0dWeVEF1qnpHf4xYVNc9DjG8B3SxoCwGD7YNwE1j5XUlAoVN5IWubZGRkJQZDmmaOZBv48jI4i91xWdFCil-LQ1NSRFjmqF5DoNWqj0-C-Jd-e6BG04-YOMtUtGjjvW4FlO4SiDdPs_9w2phRLlieyDSowbBJXd8neaip9JCBAeEhORiLVYGsioAE1W0vQlkjGKF">Cassidy Williams</a>&nbsp;at&nbsp;<a href="https://itr-links.stackoverflow.email/u/click?_t=3603a3d8f3104ca5bd7015a5845f7fb7&amp;_m=EoL62DB0PIGuXz8jH5uBuQ84lXlHlps2&amp;_e=_QiVw4xkxL6Kq_I-OU4afOZOM0oCqsuuy0jKIrvb1QwkHWIZOMWNPCK6iuSTMOLeVDuTWeKOcbbyBczybLGtoNQkE84uGWTIEgGhFcxEULL45YJLR4857Ii-0ehWwRpRtjVPtwUxxOtY9-B2oCRv3dmx-KEES0t57P4_TNE4xFT-W5TGiXBreKWRyHfSL-Ozr796X8rmwbKE4P01pm8iSRIwfptm3apXxzvS_usQlDNLQGeGDgkjk55n1OBtvYt6oHij-wFSi5PdDR16hvrYr7E3MKhupgD-zGOVEWxRdxJ-RcBKrj9bAExDUmk948bZeThbs8xuJpwrwNDQkq5QPw%3D%3D">Netlify</a>. This week: why hooks changed the React game, how to preview a short link without clicking through, and politicians who&nbsp;think viewing source is being a hacker.</p>



<h2 id="h-from-the-blog">From the blog</h2>



<p><a href="https://stackoverflow.blog/2021/10/18/code-quality-a-concern-for-businesses-bottom-lines-and-empathetic-programmers/?utm_source=Iterable&amp;utm_medium=email&amp;utm_campaign=the_overflow_newsletter"><strong>Code quality: a concern for businesses, bottom lines, and empathetic programmers</strong></a>&nbsp;<em>stackoverflow.blog</em><br>Code quality affects the mental state of a programmer, communication within their team, and the incentives attached to their work. Improving your code can boost organizational health and business&nbsp;goals at the same time.</p>



<p><a href="https://stackoverflow.blog/2021/10/20/why-hooks-are-the-best-thing-to-happen-to-react/?utm_source=Iterable&amp;utm_medium=email&amp;utm_campaign=the_overflow_newsletter"><strong>Why hooks are the best thing to happen to React</strong></a>&nbsp;<em>stackoverflow.blog</em><br>Early React mainly used class components, forcing developers to switch between classes, higher-order components, and render props. With the introduction of React hooks, you can use functional components to accomplish&nbsp;the same work without the switching.&nbsp;</p>



<p><a href="https://stackoverflow.blog/2021/10/19/podcast-385-getting-your-first-job-off-the-css-mailing-list/?utm_source=Iterable&amp;utm_medium=email&amp;utm_campaign=the_overflow_newsletter"><strong>Podcast 385: Getting your first job off the CSS mailing list</strong></a>&nbsp;<em>stackoverflow.blog</em><br>Paul Ford and Sara Chipps are back! We talk Dot-Com jobs and working at massive scale. Like, you’re crafting the color of the button on the component of the feature for the platform, m’kay.</p>



<p><a href="https://www.mongodb.com/collateral/considerations-when-evaluating-nosql-databases?utm_campaign=stack_ww_dg_flighted_top7consid_wp_dev&amp;utm_source=stackoverflow&amp;utm_medium=sponsored_newsletter"><strong>7 Considerations When Evaluating NoSQL</strong></a>&nbsp;<em>promotion</em><br>There are multiple types of NoSQL databases to consider, but which one is right for your environment? In this free MongoDB guide, explore the differences between the most common non-relational databases: graph, key-value, wide-column, and documents.</p>



<h2 id="h-interesting-questions">Interesting questions</h2>



<p><a href="https://rpg.stackexchange.com/questions/192255/petrification-at-low-levels?utm_source=Iterable&amp;utm_medium=email&amp;utm_campaign=the_overflow_newsletter"><strong>Petrification at low levels</strong></a>&nbsp;<em>rpg.stackexchange.com</em><br>Perseus need three gifts from the gods to beat Medusa and you want to throw newbies at it?</p>



<p><a href="https://unix.stackexchange.com/questions/673641/is-there-any-reason-why-proc-cmdline-is-world-readable?utm_source=Iterable&amp;utm_medium=email&amp;utm_campaign=the_overflow_newsletter"><strong>Is there any reason why /proc/*/cmdline is world-readable?</strong></a>&nbsp;<em>unix.stackexchange.com</em><br>Maybe they wanted the world to know how many times you’ve checked out the cURL man page.</p>



<p><a href="https://codegolf.stackexchange.com/questions/236406/is-this-scrabble-board-valid?utm_source=Iterable&amp;utm_medium=email&amp;utm_campaign=the_overflow_newsletter"><strong>Is this Scrabble board valid?&nbsp;</strong></a>&nbsp;<em>codegolf.stackexchange.com</em><br>The quickest way to&nbsp;prove&nbsp;that kwijibo is a valid word.</p>



<p><a href="https://security.stackexchange.com/questions/255448/can-i-safely-preview-a-short-link?utm_source=Iterable&amp;utm_medium=email&amp;utm_campaign=the_overflow_newsletter"><strong>Can I safely preview a short link?</strong></a>&nbsp;<em>security.stackexchange.com</em><br>Smaller does not equal safer.</p>



<h2 id="h-links-from-around-the-web">Links from around the web</h2>



<p><a href="https://www.smashingmagazine.com/2021/10/modern-css-solutions-for-common-problems/"><strong>Smart CSS solutions for common UI challenges</strong></a>&nbsp;<em>www.smashingmagazine.com</em><br>Common user interface issues crop up over and over. Here’s a nice collection of modern solutions for frequent problems.&nbsp;</p>



<p><a href="https://missouriindependent.com/2021/10/14/missouri-governor-vows-criminal-prosecution-of-reporter-who-found-flaw-in-state-website/"><strong>Missouri governor vows criminal prosecution of reporter who found flaw in state website</strong></a>&nbsp;<em>missouriindependent.com</em><br>Who among us has not committed the crime of inspecting the elements?&nbsp;</p>



<p><a href="https://javascript.plainenglish.io/hide-popups-when-the-user-scrolls-away-with-react-69c043a412fb"><strong>Hide popups when the user scrolls away with React</strong></a>&nbsp;<em>javascript.plainenglish.io</em><br>Popups can ruin user experiences, so it’s good to learn how to hide them when necessary.</p>



<p><a href="http://bytepointer.com/articles/the_microsoft_rich_header.htm"><strong>The undocumented Microsoft “rich” header</strong></a>&nbsp;<em>bytepointer.com</em><br>Check out this strange, undocumented header that exists only in Microsoft-produced executables. It’s been there for years and years. What could it mean?</p>



<p>Onboard, organize, and bring your team up to speed in a jiffy.&nbsp;<a target="_blank" rel="noreferrer noopener" href="https://itr-links.stackoverflow.email/u/click?_t=3603a3d8f3104ca5bd7015a5845f7fb7&amp;_m=J2j24lxDQTEuwPd5Cqu5ugxEP4Nup0Hd&amp;_e=tvjhMrv7atYcgrppTk1g939n0TOMqK8VK0FIJna3k3KJASzVGae_sX5sf3KPi1hf2i5bxdA9xhH1f-iiMOO7ZFhn7xzAMFIbYnBhpTVT4YaVxNFzFGdAHiiEmx7YErIIVxBKkYUg6iknFjIhWONGTkIJn8IqBwnVV0l3yY7ScIAISOmXKMdnUAqYDRZbTBMJIkKY_QpH6yZNU_eh54wXqDW8Wpo2teMbvQF4Xm7qqXJd83J9ZY2IcjPlLJTDAm59hcKcidFcXov0SI1SA2sdJyQvN3-FBHLcc6AOGJQuveBkeTVp2-deuu3Ntnjx81ZzrM2rO56BYZb0_0JMMxOo0T1dQmOSzvTyeYRljnArFYMAOnBwZPb7gsBCwG0r13Z9YZh9Whu6zwJWSvKiJLX8Eg%3D%3D">Try Stack Overflow for Teams</a>.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/10/29/the-overflow-97-code-quality-is-everyones-concern/">The Overflow #97: Code quality is everyone&#8217;s concern</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 https://stackoverflow.blog/2021/10/29/the-overflow-97-code-quality-is-everyones-concern/feed/ 0 18976 Podcast 388: Software for your second brain https://stackoverflow.blog/2021/10/29/podcast-388-software-for-your-second-brain/ https://stackoverflow.blog/2021/10/29/podcast-388-software-for-your-second-brain/#respond Ryan Donovan Fri, 29 Oct 2021 04:40:00 +0000 The Stack Overflow Podcast email se-stackoverflow se-tech the stack overflow podcast https://stackoverflow.blog/?p=18994 <p>While computers may let you down, music never does. </p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/10/29/podcast-388-software-for-your-second-brain/">Podcast 388: Software for your second brain</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 
<p>We chat with Alex Obenauer, entrepreneur and writer of technology insights, about the connection between music and programming, changing email and productivity software to serve the user, and building empathy from the operating system on up.</p>



<iframe loading="lazy" height="200px" width="100%" frameborder="no" scrolling="no" seamless src="https://player.simplecast.com/4ff18086-6141-41f9-b90c-9824a70aaf2f?dark=false"></iframe>



<h2 id="h-show-notes">Show notes</h2>



<p>Alex comes up with better ways to interact with technology and writes about it on his <a href="https://alexanderobenauer.com/">website</a>.&nbsp;</p>



<p>Is there a link between playing music and writing code? A <a href="https://stackoverflow.blog/2020/01/29/the-live-coding-language-that-lets-you-be-an-actual-rock-star/">previous article of ours</a> covered the merger of the two in the music programming language, Sonic PI.&nbsp;</p>



<p>If you&#8217;re curious about the weird extremes of operating system development, check out <a href="https://templeos.org/">TempleOS</a>.&nbsp;</p>



<p>Cassidy and Alex both take copious notes through <a href="https://obsidian.md/">Obsidian</a>. Alex has <a href="https://alexanderobenauer.com/labnotes/exp001/">a plugin</a> that may help you organize notes automatically. </p>



<p><a href="https://the-stack-overflow-podcast.simplecast.com/episodes/creating-software-that-works-for-people/transcript">TRANSCRIPT</a></p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/10/29/podcast-388-software-for-your-second-brain/">Podcast 388: Software for your second brain</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 https://stackoverflow.blog/2021/10/29/podcast-388-software-for-your-second-brain/feed/ 0 18994 Strong teams are more than just connected, they are communities https://stackoverflow.blog/2021/10/27/strong-teams-are-more-than-just-connected-they-are-communities/ https://stackoverflow.blog/2021/10/27/strong-teams-are-more-than-just-connected-they-are-communities/#comments Prashanth Chandrasekar Wed, 27 Oct 2021 14:00:00 +0000 Community Company ceo quarterly post se-all se-stackoverflow https://stackoverflow.blog/?p=18984 <p>Organizations and leaders have a responsibility to ensure people are heard, to build high levels of trust and enable them to show up authentically— all so they can do their best work.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/10/27/strong-teams-are-more-than-just-connected-they-are-communities/">Strong teams are more than just connected, they are communities</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 
<p>We’ve officially entered the last quarter of 2021. The three months since my <a href="https://stackoverflow.blog/2021/08/02/q3-2021-ceo-blog-post-communities-catalyst/">last update</a> have been some of the most momentous since I <a href="https://stackoverflow.blog/2019/09/24/announcing-stack-overflows-new-ceo-prashanth-chandrasekar/">joined the company as CEO two years ago</a>. We <a href="https://www.prosus.com/news/prosus-closes-acquisition-of-stack-overflow-for-us18-billion/">completed the Prosus acquisition</a>, welcomed our highest volume of new customers for both Stack Overflow for Teams and Advertising, launched <a href="https://stackoverflow.com/collectives">a new Collective</a> on the public platform, and <a href="https://stackoverflow.com/company/press/archive/matthew-gallatin-joins">announced Matt Gallatin as our new Chief Financial Officer.</a></p>



<p>The past two years have been an incredible journey, 80% of which I’ve spent as a fully-remote CEO. When I reflect on the most important moments, I think about our Stackers and Community—I’m truly inspired by their resilience. Given many concurrent issues—the ongoing pandemic, polarized political environments, and challenging social issues—there’s a lot going on in people’s lives. Over the past year in particular, we’ve gotten glimpses into each other’s homes, supported each other through illness and loss, pushed ourselves to have uncomfortable conversations, learned from our failures, and celebrated wins.&nbsp;</p>



<p>One of my biggest learnings is that organizations and leaders have a responsibility to ensure people are heard, to build high levels of trust and enable them to show up authentically— all so they can do their best work. I’m a firm believer in the idea that building connections strengthens teams and empowers people to be successful in their roles. I’ve learned that while work connects us, a true team is a living, breathing entity. We must feed and nurture it to build high-trust connections. No one can bring only part of themselves to work <em>and</em> be their best. Companies play a critical role creating an environment that’s supportive. I’m grateful for the resilience of our Stackers and Community through these dynamic times. It’s a true privilege to be entrusted to lead such a passionate team and the community we’re building together.</p>



<h2 id="h-public-platform-and-community">Public Platform and Community</h2>



<p>As our environments change, so does the community’s approach to technology. We did deep dives into two topics that saw incredible growth of late: cloud computing and cybersecurity. We learned that nearly 90% of <a href="https://stackoverflow.blog/2021/09/02/pandemic-lockdowns-accelerated-cloud-migration-by-three-to-four-years/">surveyed developers</a> say their organization increased usage of the cloud over the last year. On the public platform, we saw about four years worth of average annual growth of cloud questions in the span of just three months at the start of lockdown last year.</p>



<figure class="wp-block-image"><img src="https://lh6.googleusercontent.com/2QtVDFYNFWEkIu9SaCexa4EW-PMKh-tUz5R9vhlzO2wyL0ZYT4ESHXo5SNTgN4jCNPXcTrJDhCo0fsQUQL0SKivGj_JisCC-ToXRgPrNU2Z54ZnKH0pIhkVnpWvU3FdRlLzG2u05" alt=""/></figure>



<p>The pandemic had a similar impact on cybersecurity questions. Our <a href="https://stackoverflow.blog/2021/10/11/shift-to-remote-work-prompted-more-cybersecurity-questions-than-any-breach/">recent research</a> showed that security-related activity across the public platform appeared to be tied to major breaches. That is, until recently. The volume of security-related questions on Stack Overflow at the start of lockdown exceeded that of any year in our history.</p>



<figure class="wp-block-image"><img src="https://lh6.googleusercontent.com/iFBlS2c9BGnAFk4IB2beKx9jKUsoueH3uXNDsOU8a4PzxQq-giRMdphY8-of9muRKH_1hVuP6b740KlJN1rqUBug37WMelCeWBA652cDJzhJp1Tyj8pfdMCLKm9b5JV4Z-MVe19A" alt=""/></figure>



<p>We also saw exceptional growth in three core areas when it comes to the public platform community. Monthly active users are up 7% over last year at this time, and we’re seeing monthly sign ups tracking ahead of our plan with an increase of 44% over this time last year. Lastly, we’re continuing to invest in improving our moderator experience, and we’re starting to see it pay off. While we continue to focus on making the public platform a welcoming place for all, this is a promising indicator that we’re making impactful decisions.</p>



<p>From a product perspective, we updated our <a href="https://meta.stackexchange.com/questions/370216/updates-to-privacy-policy-september-2021?cb=1">Privacy Policy</a>, made changes to <a href="https://meta.stackexchange.com/questions/369013/review-queue-workflows-final-release">Review Queues</a>, and introduced <a href="https://meta.stackoverflow.com/questions/411820/high-contrast-mode-beta">high-contrast mode</a> for people who need a bit more contrast. These are all aligned with our goal of making Stack Overflow a more inclusive community. We also completed our annual Community-A-Thon, where our employees dedicate time to increasing their engagement with the community on the public platform.&nbsp;</p>



<p>Finally, we launched our first-ever physical product. It started as an April Fool&#8217;s joke. We told everyone that tried to copy and paste on Stack Overflow that their copying and pasting was limited unless they purchased The Key. Panic set in for the <a href="https://stackoverflow.blog/2021/04/19/how-often-do-people-actually-copy-and-paste-from-stack-overflow-now-we-know/">1 out of every 4 users who copies something within five minutes of hitting Stack Overflow</a>. Once people caught on to the joke, we were flooded with requests to actually purchase The Key. The joke is officially over. <a href="https://drop.com/buy/stack-overflow-the-key-macropad">The Key is real</a>, and it sold out in six hours! We opened pre-orders and nearly 9,000 units have been sold to-date, with the remaining shipping later this year. All our proceeds are going to <a href="https://www.digitalundivided.com/">digitalundivided</a>, a non-profit that leverages data, programs, and advocacy to catalyze economic growth for Black and Latinx women entrepreneurs in tech. It&#8217;s amazing to see this impact from our community.</p>



<h2 id="h-product-update">Product update</h2>



<p>We’re also seeing a shift within organizations as teams solidify their remote or hybrid work strategies. We’re hearing from technology leaders more and more that agile transformation is becoming a top priority and onboarding continues to be a challenge as they scale their teams. On top of that, <a href="https://www.indeed.com/lead/preventing-employee-burnout-report">a recent survey</a> also revealed that nearly 70% of U.S. workers said their level of burnout has worsened throughout the pandemic. All of these challenges compounded are creating more urgency for Stack Overflow for Teams. We welcomed our highest volume of new customers for both Stack Overflow for Teams and Advertising in the last quarter. We also had our highest ever gross revenue retention (GRR) for Teams in our mid-market segment last quarter.</p>



<figure class="wp-block-pullquote"><blockquote><p>“Technical teams typically face an adoption hurdle,” said Tzach Zohar, a systems architect at Skai. “But because Stack Overflow is already second-nature for developers, the transition to Stack Overflow for Teams was easy.”&nbsp;</p></blockquote></figure>



<figure class="wp-block-image size-full"><img loading="lazy" width="1200" height="265" src="https://149351115.v2.pressablecdn.com/wp-content/uploads/2021/10/q3-2021-ceo-user-logos.png" alt="" class="wp-image-18987" srcset="https://149351115.v2.pressablecdn.com/wp-content/uploads/2021/10/q3-2021-ceo-user-logos.png 1200w , https://149351115.v2.pressablecdn.com/wp-content/uploads/2021/10/q3-2021-ceo-user-logos-300x66.png 300w , https://149351115.v2.pressablecdn.com/wp-content/uploads/2021/10/q3-2021-ceo-user-logos-768x170.png 768w " sizes="(max-width: 1200px) 100vw, 1200px" /></figure>



<p>As customers onboard, they continue to share their experiences with their peers, earning us recognition on G2 across nearly every segment for the 11th consecutive quarter.</p>



<figure class="wp-block-image"><img src="https://lh6.googleusercontent.com/YA7s6J5YaXRLwJq1TRefYFPLUc_kax8gUb6GCiLtkWnxC44LsivJgfQIpGGvjQZMNJ1heNGiqwxdzfLP3GCofttjo3PXxExAMzgTeaavrnYT-yyNHiw6VOc2VL-no-TGNFjY6WpI" alt=""/></figure>



<p>We’re continuing to work with customers to build communities on Stack Overflow through our Reach &amp; Relevance products, which consists of banner ads, tag sponsorships, podcast, the newsletter, and blog sponsorships, and finally <a href="https://stackoverflow.com/collectives">Collectives<img src="https://s.w.org/images/core/emoji/13.1.0/72x72/2122.png" alt="™" class="wp-smiley" style="height: 1em; max-height: 1em;" /> on Stack Overflow</a>. We launched a new Collective—GitLab—and surpassed 20,000 members across all Collectives. Collectives on Stack Overflow are communities where developers can directly engage with technology organizations and find resources they need when they need them in one place.</p>



<figure class="wp-block-image"><img src="https://lh3.googleusercontent.com/Y2MRHmtFK2xYg03YwMgA8Qj__GGHTWl2K-bnjEQtwahoeumhJHr8Ap4KH6HUWCK3rkT26WhPm1rt2Ilocuxh15KVHzLJHrZo2PUPA1ogccJnPwhDVEvHrd8rH-m8cQPD7pYjwnVK" alt=""/></figure>



<p>Our goal is to give developers direct access to the resources they and subject matter experts that can help them find answers when they need them. Our customers can also get deeper insights into who is interacting and engaging with their content and technologies on Stack Overflow. For every technology vendor we work with to launch a Collective, our goal is to do the same with an open source partner.</p>



<h2 id="h-diversity-equity-inclusion">Diversity, Equity, &amp; Inclusion</h2>



<p>We’ve rolled out a few new initiatives internally over the last few months, including our first DEIB-dedicated (Diversity, Equity, Inclusion, and Belonging) quarterly newsletter, a calendar of important days with educational materials, and new tools to help us measure DEI metrics within Stack Overflow, and DEI-related competencies for our performance reviews framework to help hold us accountable. We’re ramping up regular programming to help scale and replicate the success of the Asian and Pacific Islander and LGBTQ+ panels we hosted last quarter. There’s always work to be done, but we’re making steady progress towards a more diverse and inclusive Stack Overflow within our organization and across our platform.</p>



<h2 id="h-looking-ahead">Looking ahead</h2>



<p>With the Prosus acquisition complete, we’re excited to accelerate our plans for international growth and expansion. We’re cautiously moving forward with optional return to office plans in New York City and London and continuing to hire remote employees all over the globe.</p>



<p>This month, <a href="https://www.comparably.com/companies/stack-overflow/awards">Comparably named Stack Overflow</a> as one of the highest-rated companies for overall happiness, compensation, and perks and benefits. We’ve already filled over 180 roles in 2021 thus far and are currently recruiting for <a href="https://stackoverflow.com/company/work-here">over 70 open roles</a> (and more being added daily) across nearly every department and time zone. With more than 80% of Stackers permanently remote, we’re also finding creative ways to stay supportive and connected long-term.</p>



<figure class="wp-block-image"><img src="https://lh4.googleusercontent.com/L9qHp6eUikgBTORjt66i8cz7Pf82De87moTkn5z1GncCpydMXVPQ-qi9tTGpKFkccSvBGgUvLx0p60jSUT0tV97ziFn79WypWluMmt7lIhhZP0tyzT7KPCzSQyqwKbt3l-Zb38SG" alt=""/></figure>



<p>As we sprint towards the end of 2021, we’re focusing on the foundational priorities that got us here: operational scale and repeatability, Stacker growth and development, and community health and growth. The Prosus acquisition is allowing us the flexibility and resources to scale our team faster so that we can reinforce our foundation, serve our community at scale, and prepare for takeoff in the year ahead.&nbsp;</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/10/27/strong-teams-are-more-than-just-connected-they-are-communities/">Strong teams are more than just connected, they are communities</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 https://stackoverflow.blog/2021/10/27/strong-teams-are-more-than-just-connected-they-are-communities/feed/ 3 18984 A murder mystery: who killed our user experience? https://stackoverflow.blog/2021/10/27/observability-thrives-when-vendor-lock-in-dies/ https://stackoverflow.blog/2021/10/27/observability-thrives-when-vendor-lock-in-dies/#comments Ryan Donovan Wed, 27 Oct 2021 04:40:00 +0000 Partner Content The Stack Overflow Podcast observability opentelemetry partner content se-stackoverflow se-tech splunk the stack overflow podcast https://stackoverflow.blog/?p=18978 <p>On this sponsored episode of the Stack Overflow Podcast, we talk with Greg Leffler of Splunk about the keys to instrumenting an observable system and how the OpenTelemetry standard allows you to avoid vendor lock in.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/10/27/observability-thrives-when-vendor-lock-in-dies/">A murder mystery: who killed our user experience?</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 
<p>The infrastructure that networked applications lives on is getting more and more complicated. There was a time when you could serve an application from a single machine on premises. But now, with cloud computing offering painless scaling to meet your demand, your infrastructure becomes abstracted and not really something you have contact with directly. Compound that problem with with architecture spread across dozens, even hundreds of microservices, replicated across multiple data centers in an ever changing cloud, and tracking down the source of system failures becomes something like a murder mystery. Who shot our uptime in the foot?&nbsp;</p>



<p>A good observability system helps with that. On this sponsored episode of the Stack Overflow Podcast, we talk with Greg Leffler of Splunk about the keys to instrumenting an observable system and how the OpenTelemetry standard makes observability easier, even if you aren’t using Splunk’s product.&nbsp;</p>



<iframe loading="lazy" height="200px" width="100%" frameborder="no" scrolling="no" seamless="" src="https://player.simplecast.com/a0c2cb6d-c508-4e6a-8ddc-293ecb09d5d0?dark=false"></iframe>



<p>Observability is really an outgrowth of traditional monitoring. You expect that some service or system could break, so you keep an eye on it. But observability applies that monitoring to an entire system and gives you the ability to answer the unexpected questions that come up. It uses three principal ways of viewing system data: logs, traces, and metrics.</p>



<p>Metrics are a number and a timestamp that tell you particular details. Traces follow a request through a system. And logs are the causes and effects recorded from a system in motion. Splunk wants to add a fourth one—events—that would track specific user events and browser failures.&nbsp;</p>



<p>Observing all that data first means you have to be able to track and extract that data by instrumenting your system to produce it. Greg and his colleagues at Splunk are huge fans of OpenTelemetry. It’s an open standard that can extract data for any observability platform. You instrument your application once and never have to worry about it again, even if you need to change your observability platform.&nbsp;</p>



<p>Why use an approach that makes it easy for a client to switch vendors? Leffler and Splunk argue that it’s not only better for customers, but for Splunk and the observability industry as a whole. If you’ve instrumented your system with a vendor locked solution, then you may not switch, you may just let your observability program fall by the wayside. That helps exactly no one.&nbsp;</p>



<p>As we’ve seen, <a href="https://stackoverflow.blog/2021/09/02/pandemic-lockdowns-accelerated-cloud-migration-by-three-to-four-years/">people are moving to the cloud</a> at an ever faster pace. That’s no surprise; it offers automatic scaling for arbitrary traffic volumes, high availability, and worry-free infrastructure failure recovery. But moving to the cloud can be expensive, and you have to do some work with your application to be able to see everything that’s going on inside it. Plenty of people just throw everything into the cloud and let the provider handle it, which is fine until they see the bill.</p>



<p>Observability based on an open standard makes it easier for everyone to build a more efficient and robust service in the cloud. Give the episode a listen and let us know what you think in the comments.</p>



<p><a href="https://the-stack-overflow-podcast.simplecast.com/episodes/observability-thrives-when-vendor-lock-in-dies/transcript/">TRANSCRIPT</a></p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/10/27/observability-thrives-when-vendor-lock-in-dies/">A murder mystery: who killed our user experience?</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 https://stackoverflow.blog/2021/10/27/observability-thrives-when-vendor-lock-in-dies/feed/ 1 18978 Podcast 387: The first ten years of our programming lives https://stackoverflow.blog/2021/10/26/podcast-387-the-first-ten-years-of-our-programming-lives/ https://stackoverflow.blog/2021/10/26/podcast-387-the-first-ten-years-of-our-programming-lives/#comments Ryan Donovan Tue, 26 Oct 2021 04:40:00 +0000 The Stack Overflow Podcast se-stackoverflow se-tech the stack overflow podcast https://stackoverflow.blog/?p=18969 <p>Everybody starts somewhere with coding, even if that's just to make your favorite game better.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/10/26/podcast-387-the-first-ten-years-of-our-programming-lives/">Podcast 387: The first ten years of our programming lives</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 
<p>The home team shares their programming origin stories, from year one, when everyone was bitten by a radioactive microchip, all the way to the present, where we are all talking about code on a podcast.</p>



<iframe loading="lazy" height="200px" width="100%" frameborder="no" scrolling="no" seamless="" src="https://player.simplecast.com/2ed2944a-d8a3-4441-8203-71fb7f54ef15?dark=false"></iframe>



<h2 id="h-show-notes">Show notes</h2>



<p>This episode was inspired by <a href="https://www.youtube.com/watch?v=1fPWr0d5zBE&amp;ab_channel=JomaTech">Joma Tech&#8217;s review</a> of his first ten years in coding.&nbsp;</p>



<p>Ben Popper shared &nbsp;a fair amount of his coding journey through the series <a href="https://stackoverflow.blog/tag/worst-coder-in-the-world/">Ben Popper is the Worst Coder in the World</a>.&nbsp;</p>



<p>Should you actually write out code on paper as some of us had to do? <a href="https://hackernoon.com/reasons-to-write-code-on-paper-57q3tpj">Maybe</a>.</p>



<p>Modding games gets people into programming. For Ryan, <a href="https://store.steampowered.com/app/8880/Freedom_Force/">Freedom Force</a> got him into Python. Today, it&#8217;s <a href="https://www.minecraft.net/en-us/">Minecraft </a>and <a href="https://www.roblox.com/">Roblox</a>.&nbsp;</p>



<p>Want to jump start your career? Find a community on Discord or Twitter and make some contacts. The software industry is made of people.&nbsp;</p>



<p>Hackathons helped Cassidy find her deeper love for coding, oh, and her husband too.</p>



<p><a href="https://the-stack-overflow-podcast.simplecast.com/episodes/the-first-ten-years-of-our-programming-lives/transcript/">TRANSCRIPT</a></p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/10/26/podcast-387-the-first-ten-years-of-our-programming-lives/">Podcast 387: The first ten years of our programming lives</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 https://stackoverflow.blog/2021/10/26/podcast-387-the-first-ten-years-of-our-programming-lives/feed/ 5 18969 Node.js makes fullstack programming easy with server-side JavaScript https://stackoverflow.blog/2021/10/25/node-js-makes-fullstack-programming-easy-with-server-side-javascript/ https://stackoverflow.blog/2021/10/25/node-js-makes-fullstack-programming-easy-with-server-side-javascript/#comments Theodoros ‘Theo’ Karasavvas Mon, 25 Oct 2021 14:14:42 +0000 Code for a Living javascript node.js se-stackoverflow se-tech https://stackoverflow.blog/?p=18964 <p>Here's why JavaScript has been the language of choice for front-end and back-end web dev. </p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/10/25/node-js-makes-fullstack-programming-easy-with-server-side-javascript/">Node.js makes fullstack programming easy with server-side JavaScript</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 
<p>Web application developers are inundated with options when it comes to choosing the languages, frameworks, libraries, and environments they will use to build their applications. Depending on which statistics you believe, <a href="https://stackoverflow.blog/2015/07/29/why-are-there-so-many-programming-languages/">the total number of available languages</a> is somewhere between 700 and 9000. The most popular—for the past nine years according to the <a href="https://insights.stackoverflow.com/survey/2021#section-most-popular-technologies-programming-scripting-and-markup-languages">2021 Stack Overflow Developer Survey</a>—is JavaScript. Most people think of JavaScript as a front-end language.</p>



<p>Originally launched in 2009, <a href="https://nodejs.org">Node.js</a> has quickly become one of the most widely used options among application developers. More than half of developers are now using Node.js—it is the most popular non-language, non-database development tool. It allows you to run JavaScript on the server side, which lets software engineers develop on the full web stack.&nbsp;</p>



<p>Node.js&#8217;s popularity has snowballed for good reason. Node.js is a fast, low-cost, effective alternative to other back-end solutions. And with its two-way client-server communication channel, it is hard to beat for cross-platform development.</p>



<p>Here we step through just a few of the features that help set Node.js apart from the crowd.</p>



<h2 id="h-what-is-node-js">What is Node.js?</h2>



<p>Node.js is a free, open-source, event-driven JavaScript runtime environment rather than a framework, library, or language. Based on Google Chrome&#8217;s V8 JavaScript engine, Node.js improves efficiency with its asynchronous, single-threaded, non-blocking I/O architecture.&nbsp;</p>



<p>By breaking software down into small pieces that run simultaneously, Node.js creates lightweight, fast, scalable applications. Node.js also allows developers to use JavaScript to create command-line tools for server-side scripting.&nbsp;</p>



<p>Because of its speed and multi-tasking abilities, Node.js has become a tool of choice for many major corporations and organizations. Among the primary industries using Node.js are education, healthcare, government, and finance.&nbsp;</p>



<h2 id="h-why-should-you-use-node-js">Why should you use Node.js?</h2>



<p>Developers that are already well-versed in other programming languages, frameworks, libraries, or environments might wonder why they spend the time to learn Node.js. The short answer is that Node.js speeds development and improves overall application performance.&nbsp;</p>



<h3 id="h-node-js-is-easy-to-learn">Node.js is easy to learn</h3>



<p>If you aren&#8217;t already using Node.js, then you have to invest the time to learn it. Application developers typically don&#8217;t have much free time, so if they intend to learn a new tool, it needs to be simple to pick up. The vast majority of developers are already familiar with JavaScript.&nbsp;</p>



<p>And because Node.js facilitates the use of JavaScript on the server-side, it makes it easier for front-end developers to quickly and simply build server-side applications, even if they have limited knowledge or experience with back-end programming principles.&nbsp;&nbsp;</p>



<p>Node.js also has <a href="https://nodejs.org/en/docs/">extensive documentation libraries</a> to help you learn more about using Node.js for your development projects.</p>



<h3 id="h-node-js-is-fast">Node.js is fast</h3>



<p>When discussing speed, it is important to distinguish between the speed of application development and actual application performance. Node.js offers advantages for both.</p>



<p>Several factors contribute to Node.js&#8217;s speed advantage. First is the Google V8 engine, which powers lightning-fast conversion of JavaScript to machine code. Google&#8217;s dedication to the V8 engine assures developers that there will be frequent updates and ongoing performance improvements.&nbsp;&nbsp;</p>



<p>Node.js applications run much faster than other applications. Because Node uses an asynchronous, non-blocking programming model, processes can run in parallel rather than waiting for other processes to complete. The result is improved speed and performance.</p>



<p>Node promotes reusability of modules, which decreases development time. Moreover, with a large number of modules available from the community, developers can frequently find much-needed functionality without building it from scratch.</p>



<h3 id="h-node-js-has-single-module-caching">Node.js has single module caching&nbsp;</h3>



<p>Another contributor to Node’s performance advantages is its <a href="https://scotch.io/tutorials/how-to-optimize-node-requests-with-simple-caching-strategies">use of single-module caching</a>. The first time a module is requested, it is cached in in-app memory. Subsequent calls to the module access the cached version, rather than recompiling the module. As a result, Node.js applications load faster and are more responsive.</p>



<h3 id="h-node-js-facilitates-development-of-real-time-applications">Node.js facilitates development of real-time applications</h3>



<p>Node&#8217;s architecture makes it an ideal candidate for developing real-time applications. Node facilitates rapid data transfer between server and client with asynchronous operations, ensuring no lag between a user request and the server response.&nbsp;</p>



<p>Node allows multiple processes to run concurrently. Therefore, I/O operations are fast and responsive. This is particularly useful <a href="https://www.atlantic.net/dedicated-server-hosting/how-to-configure-reverse-proxy-for-node-js-application-using-apache-on-ubuntu-20-04/">when configuring web proxies</a> or building applications with a large number of simultaneous users, such as chat and messaging apps.</p>



<p>And don&#8217;t forget the V8 engine, which increases Node.js&#8217;s overall speed and performance, which are extra important for real-time applications.</p>



<h3 id="h-node-js-scales-easily">Node.js scales easily&nbsp;</h3>



<p>Scaling Node.js is simple. Node.js can support tens or hundred of thousands of concurrent connections. And Node.js applications can easily be extended by the addition of new modules.</p>



<p>Node.js relies on the cluster module, which is a load balancer that distributes processes across all available CPU cores. This allows Node.js applications to handle large numbers of processes quickly and efficiently.</p>



<p>Node&#8217;s modular architecture promotes scaling of development efforts. Development of individual microservices can proceed in parallel, reducing development time and facilitating modular addition of functionality to applications.</p>



<h3 id="h-node-js-has-workable-streaming">Node.js has workable streaming&nbsp;</h3>



<p>Node.js data handling features rely on creating streams of data when it receives requests (such as HTTP requests) from a client web server. Using streams, Node.js breaks up modules into smaller pieces, which it processes individually, without keeping the entirety of the data in memory at once. Node.js can therefore process larger files faster and more efficiently, which is why it’s a good choice for developing video or live conferences.</p>



<p>Using streams has two primary advantages. First, it reduces the amount of memory needed to deal with large files. Second, it allows data processing to begin immediately on receipt of the first piece of data, rather than waiting until the entire package is transmitted.</p>



<h3 id="h-node-js-is-cost-effective">Node.js is cost-effective&nbsp;</h3>



<p>Node&#8217;s individual advantages when combined lead to cost savings:</p>



<ul><li>Because Node.js makes it easy for front-end developers with JavaScript experience <a href="https://www.geeksforgeeks.org/javascript-backend-basics/">to work on back-end development</a>, you no longer need to have completely separate teams for the front end and back end.</li><li>Develop applications faster with pre-built microservices from the community.&nbsp;</li><li>Node&#8217;s more efficient usage of resources means that you can minimize an application&#8217;s server footprint</li><li>Node&#8217;s scalability means that adding functionality is simpler and faster, reducing ongoing development costs&nbsp;&nbsp;</li></ul>



<h3 id="h-node-js-has-a-strong-and-active-community">Node.js has a strong and active community</h3>



<p>Because of Node.js&#8217;s growing popularity, a large and active community provides support and resources. Node.js fans are constantly available to respond to questions and assist you with issues that arise during development. And many Node.js developers are happy to share their efforts with the community at large.&nbsp;</p>



<p>One of the most useful community-based resources is the Node package manager (npm). npm is a huge online collection of published Node.js projects that you can install with ease. With npm, it is easy to find pre-built content and integrate it into your application.</p>



<h3 id="h-node-js-can-help-you-land-a-job">Node.js can help you land a job</h3>



<p>Demand for Node.js developers has grown almost as rapidly as interest in the tool. But there is still <a href="https://stackoverflow.com/jobs?q=node.js">more demand than available developers</a>. So adding Node.js to your arsenal makes you that much more desirable for prospective employers.</p>



<h2 id="h-when-wouldn-t-you-use-node-js">When wouldn&#8217;t you use Node.js?</h2>



<p>No tool is perfect, and not surprisingly, Node.js does have some downsides. Despite its many advantages, there are applications where Node.js may not be your best solution.</p>



<h3 id="h-if-your-application-relies-on-cpu-bound-processes">If your application relies on CPU-bound processes</h3>



<p>Computationally-heavy applications take a toll on Node.js&#8217;s efficiency and performance. This is because Node.js prioritizes high computation processes above other processes, which results in processing delays.</p>



<p>Node.js is attempting to overcome this concern through the worker threads multi-threading tool it released in 2018. The effectiveness of worker threads is still up in the air, and Node is working to improve the tool’s capabilities.</p>



<h3 id="h-if-you-are-concerned-about-data-security">If you are concerned about data security</h3>



<p>Some developers believe that the lack of default error handling in Node.js <a href="https://char.gd/recharged/daily/npm-as-an-attack-vector">makes it vulnerable to exploits</a>. Admittedly, Node.js, like any other programming language or development tool, is prone to attack. However, this concern is probably overblown.</p>



<p>Using programming and application development best practices and incorporating security into the development process can minimize security concerns. And, naturally, it is helpful to include application features that encourage users <a href="https://privacycanada.net/online-privacy-guide/">to build effective security practices</a>, for example, multi-factor authentication.</p>



<h3 id="h-if-you-are-afraid-of-callback-hell">If you are afraid of callback hell</h3>



<p>Because Node.js is asynchronous, it can generate a large number of callbacks. When callbacks get deeply nested, you can enter what developers not-so-fondly term <a href="http://callbackhell.com/">callback hell</a>. Frequently, callback hell can result from poor programming hygiene rather than actually being an issue with Node.js, but you should be aware that it is a potential issue when using Node.js.</p>



<h3 id="h-if-you-want-a-stable-api">If you want a stable API</h3>



<p>Node.js&#8217;s API is known for its lack of stability. It changes frequently and, at times, the changes have not been backward compatible (such as Node.js 8), causing extra effort for developers.</p>



<h2 id="h-take-node-js-for-a-spin">Take Node.js for a spin</h2>



<p>Given its rise in popularity and well-documented speed and performance advantages for many popular applications, Node.js is a no-brainer <a href="https://stackoverflow.blog/2021/02/08/moving-from-designer-to-developer-stack-overflow/">for application development</a>. Even the most skeptical developers should give Node.js a test run to see if it is worth adding to their development resources.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/10/25/node-js-makes-fullstack-programming-easy-with-server-side-javascript/">Node.js makes fullstack programming easy with server-side JavaScript</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 https://stackoverflow.blog/2021/10/25/node-js-makes-fullstack-programming-easy-with-server-side-javascript/feed/ 38 18964 The Overflow #96: A database built for a firehose https://stackoverflow.blog/2021/10/22/the-overflow-96-a-database-built-for-a-firehose/ https://stackoverflow.blog/2021/10/22/the-overflow-96-a-database-built-for-a-firehose/#comments Ryan Donovan and Cassidy Williams Fri, 22 Oct 2021 13:00:00 +0000 The Overflow newsletter the overflow https://stackoverflow.blog/?p=18949 <p>Welcome to ISSUE #96 of The Overflow! This newsletter is by developers, for developers, written and curated by the Stack Overflow team and&#160;Cassidy Williams&#160;at&#160;Netlify. This week: what drives growth in cybersecurity questions on Stack Overflow, teaching an AI to bid on properties in Monopoly, and every talk from Jamstack Conf 2021 in one handy playlist.…</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/10/22/the-overflow-96-a-database-built-for-a-firehose/">The Overflow #96: A database built for a firehose</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 
<p>Welcome to ISSUE #96 of The Overflow! This newsletter is by developers, for developers, written and curated by the Stack Overflow team and&nbsp;<a href="https://itr-links.stackoverflow.email/u/click?_t=3603a3d8f3104ca5bd7015a5845f7fb7&amp;_m=EoL62DB0PIGuXz8jH5uBuQ84lXlHlps2&amp;_e=_QiVw4xkxL6Kq_I-OU4afBnKfI77FjoIfX88HTVRZxPuTd2bnAMrrH9rcbsb0dWeVEF1qnpHf4xYVNc9DjG8B3SxoCwGD7YNwE1j5XUlAoVN5IWubZGRkJQZDmmaOZBv48jI4i91xWdFCil-LQ1NSRFjmqF5DoNWqj0-C-Jd-e6BG04-YOMtUtGjjvW4FlO4SiDdPs_9w2phRLlieyDSowbBJXd8neaip9JCBAeEhORiLVYGsioAE1W0vQlkjGKF">Cassidy Williams</a>&nbsp;at&nbsp;<a href="https://itr-links.stackoverflow.email/u/click?_t=3603a3d8f3104ca5bd7015a5845f7fb7&amp;_m=EoL62DB0PIGuXz8jH5uBuQ84lXlHlps2&amp;_e=_QiVw4xkxL6Kq_I-OU4afOZOM0oCqsuuy0jKIrvb1QwkHWIZOMWNPCK6iuSTMOLeVDuTWeKOcbbyBczybLGtoNQkE84uGWTIEgGhFcxEULL45YJLR4857Ii-0ehWwRpRtjVPtwUxxOtY9-B2oCRv3dmx-KEES0t57P4_TNE4xFT-W5TGiXBreKWRyHfSL-Ozr796X8rmwbKE4P01pm8iSRIwfptm3apXxzvS_usQlDNLQGeGDgkjk55n1OBtvYt6oHij-wFSi5PdDR16hvrYr7E3MKhupgD-zGOVEWxRdxJ-RcBKrj9bAExDUmk948bZeThbs8xuJpwrwNDQkq5QPw%3D%3D">Netlify</a>. This week: what drives growth in cybersecurity questions on Stack Overflow, teaching an AI to bid on properties in Monopoly, and every talk from Jamstack Conf 2021 in one handy playlist.</p>



<h2 id="h-from-the-blog">From the blog</h2>



<p><a href="https://stackoverflow.blog/2021/10/11/shift-to-remote-work-prompted-more-cybersecurity-questions-than-any-breach/"><strong>Shift to remote work prompted more cybersecurity questions than any breach</strong></a>&nbsp;<em>stackoverflow.blog</em><br>For this edition of Stack Overflow Knows, we did a deep dive into cybersecurity topics across Stack Overflow and Stack Exchange. We found a few key drivers of interest in security, and a shift in the way developers are acting, versus reacting, to emerging threats.</p>



<p><a href="https://stackoverflow.blog/2021/10/13/why-solve-a-problem-twice-design-patterns-let-you-apply-existing-solutions-to-your-code/"><strong>Why solve a problem twice? Design patterns let you apply existing solutions to your code</strong></a>&nbsp;<em>stackoverflow.blog</em><br>Software design patterns are like best practices employed by many experienced software developers. You can use design patterns to make your application scalable and flexible.</p>



<p><a href="https://stackoverflow.blog/2021/10/12/podcast-383-a-database-built-for-a-firehose/"><strong>Podcast 383: A database built for a firehose</strong></a>&nbsp;<em>stackoverflow.blog</em><br>In this episode, we chat with Stephen Goldberg and Kyle Bernhardy from HarperDB. Their startup was born from working with the firehose of Twitter data during sporting events, and now they have a database designed to scale well for real-time data.</p>



<p><a href="https://pages.awscloud.com/AWSMP-H2-DEV-cloud-native-continuous-delivery-en.html?trk=el_a134p000007CfRzAAK&amp;trkCampaign=AWSMP_web_dev_mult_Cloud-Native-Continuous-Delivery&amp;sc_channel=el&amp;sc_campaign=el_Stack-Overflow_newsletter_Namer&amp;sc_outcome=Marketplace&amp;sc_geo=NAMER&amp;sc_country=US"><strong>Continuous Delivery for Cloud-Native Applications</strong></a>&nbsp;<em>promotion</em><br>Join DevOps Institute and AWS to learn how to free developers to be creative and agile with cloud-native technologies like Kubernetes and serverless to support the speed of business today.</p>



<h2 id="h-interesting-questions">Interesting questions</h2>



<p><a href="https://puzzling.stackexchange.com/questions/112064/a-new-way-to-cut-a-pizza"><strong>A new way to cut a pizza&nbsp;</strong></a>&nbsp;<em>puzzling.stackexchange.com</em><br>Can you get a dozen identical slices out of a single pizza without the traditional triangle?&nbsp;</p>



<p><a href="https://physics.stackexchange.com/questions/669118/why-do-rain-drops-fall-with-a-constant-velocity"><strong>Why do rain drops fall with a constant velocity?</strong></a>&nbsp;<em>physics.stackexchange.com</em><br>Raindrop keep falling on my head… without accelerating.&nbsp;</p>



<p><a href="https://gamedev.stackexchange.com/questions/196988/ai-for-auction-bids-in-the-monopoly-game"><strong>AI for auction bids in the Monopoly game</strong></a>&nbsp;<em>gamedev.stackexchange.com</em><br>Wait, does anybody actually use the action rule in Monopoly?</p>



<p><a href="https://physics.stackexchange.com/questions/667000/why-protons-are-the-nucleus-not-electrons-in-an-atom"><strong>Why are protons in the nucleus of an atom, not electrons?</strong></a>&nbsp;<em>physics.stackexchange.com</em><br>Is the electron always doomed to be an outsider?</p>



<h2 id="h-links-from-around-the-web">Links from around the web</h2>



<p><a href="https://www.youtube.com/playlist?list=PL58Wk5g77lF-XaNacKxWk7yOKgeCMveAS"><strong>Jamstack Conf 2021</strong></a>&nbsp;<em>www.youtube.com</em><br>All of the talks from this month’s Jamstack Conf are now online! It’s an exciting time in web development, and the presentations do not disappoint.</p>



<p><a href="https://developers.googleblog.com/2021/10/what-is-the-dev-library.html"><strong>What is Google’s Dev Library––a new open-source platform for developers</strong></a>&nbsp;<em>developers.googleblog.com</em><br>Google released a new space for developers to share and promote their open source repositories and blog posts, which should be an interesting opportunity!</p>



<p><a href="https://dev.to/clearlythuydoan/big-o-notation-as-a-mid-level-developer-who-has-been-avoiding-it-since-bootcamp-arrays-and-time-complexity-np8"><strong>Big O notation as a mid-level developer who has been avoiding it since bootcamp: arrays and time complexity</strong></a>&nbsp;<em>dev.to</em><br>If you’ve wanted to more deeply understand arrays and time complexity, here’s a great rundown of what you need to know, with a little help from Pokémon.</p>



<p><a href="https://future.a16z.com/the-case-for-developer-experience/"><strong>The case for ‘developer experience’&nbsp;</strong></a>&nbsp;<em>future.a16z.com</em><br>We love the idea of perfectly maintained tech stacks, but unfortunately that just isn’t often the case. Here’s a good take on developer experience in the messy code we deal with.</p>



<p>Onboard, organize, and bring your team up to speed in a jiffy.&nbsp;<a target="_blank" rel="noreferrer noopener" href="https://itr-links.stackoverflow.email/u/click?_t=3603a3d8f3104ca5bd7015a5845f7fb7&amp;_m=J2j24lxDQTEuwPd5Cqu5ugxEP4Nup0Hd&amp;_e=tvjhMrv7atYcgrppTk1g939n0TOMqK8VK0FIJna3k3KJASzVGae_sX5sf3KPi1hf2i5bxdA9xhH1f-iiMOO7ZFhn7xzAMFIbYnBhpTVT4YaVxNFzFGdAHiiEmx7YErIIVxBKkYUg6iknFjIhWONGTkIJn8IqBwnVV0l3yY7ScIAISOmXKMdnUAqYDRZbTBMJIkKY_QpH6yZNU_eh54wXqDW8Wpo2teMbvQF4Xm7qqXJd83J9ZY2IcjPlLJTDAm59hcKcidFcXov0SI1SA2sdJyQvN3-FBHLcc6AOGJQuveBkeTVp2-deuu3Ntnjx81ZzrM2rO56BYZb0_0JMMxOo0T1dQmOSzvTyeYRljnArFYMAOnBwZPb7gsBCwG0r13Z9YZh9Whu6zwJWSvKiJLX8Eg%3D%3D">Try Stack Overflow for Teams</a>.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/10/22/the-overflow-96-a-database-built-for-a-firehose/">The Overflow #96: A database built for a firehose</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 https://stackoverflow.blog/2021/10/22/the-overflow-96-a-database-built-for-a-firehose/feed/ 1 18949 Podcast 386: Quality code is the easiest to delete https://stackoverflow.blog/2021/10/22/podcast-386-quality-code-is-the-easiest-to-delete/ https://stackoverflow.blog/2021/10/22/podcast-386-quality-code-is-the-easiest-to-delete/#respond Ryan Donovan Fri, 22 Oct 2021 04:40:00 +0000 The Stack Overflow Podcast se-stackoverflow se-tech the stack overflow podcast https://stackoverflow.blog/?p=18960 <p>Hustle culture and startups playing at being rocket ships end up working against quality code. </p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/10/22/podcast-386-quality-code-is-the-easiest-to-delete/">Podcast 386: Quality code is the easiest to delete</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 
<p>We chat with Isaac Lyman, a developer who wrote a great piece on code quality. Far from premature optimization, focusing on code quality early has huge benefits for the company&#8217;s bottom line and its developers&#8217; mental health.</p>



<iframe loading="lazy" height="200px" width="100%" frameborder="no" scrolling="no" seamless="" src="https://player.simplecast.com/2c599df9-97c0-46df-b5f5-eaceddb194c3?dark=false"></iframe>



<h2 id="h-show-notes">Show notes</h2>



<p>Isaac&#8217;s piece, <a href="https://stackoverflow.blog/2021/10/18/code-quality-a-concern-for-businesses-bottom-lines-and-empathetic-programmers/"><strong>Code quality: a concern for businesses, bottom lines, and empathetic programmers</strong></a>, ran recently on the Stack Overflow blog.&nbsp;</p>



<p>A simple metric for code quality code be how easy is it to delete any given piece of code.&nbsp;</p>



<p>There&#8217;s no algorithmic way to judge quality code, but experienced engineers know it when they see it.&nbsp;</p>



<p>Jeff Atwood&#8217;s <a href="https://blog.codinghorror.com/performance-is-a-feature/">Performance is a Feature</a> blog post gets a lot of mileage with our writers. But code quality isn&#8217;t on the same axis; it&#8217;s not a feature you can prioritize. It&#8217;s part of the development process. </p>



<p><a href="https://the-stack-overflow-podcast.simplecast.com/episodes/quality-code-is-the-easiest-to-delete">TRANSCRIPT</a></p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/10/22/podcast-386-quality-code-is-the-easiest-to-delete/">Podcast 386: Quality code is the easiest to delete</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 https://stackoverflow.blog/2021/10/22/podcast-386-quality-code-is-the-easiest-to-delete/feed/ 0 18960 Why hooks are the best thing to happen to React https://stackoverflow.blog/2021/10/20/why-hooks-are-the-best-thing-to-happen-to-react/ https://stackoverflow.blog/2021/10/20/why-hooks-are-the-best-thing-to-happen-to-react/#comments Doro Onome Wed, 20 Oct 2021 14:10:43 +0000 Code for a Living functional programming react react hooks se-stackoverflow se-tech https://stackoverflow.blog/?p=18951 <p>Originally, React mainly used class components, which can be strenuous at times as you always had to switch between classes, higher-order components, and render props. With React hooks, you can now do all these without switching, using functional components.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/10/20/why-hooks-are-the-best-thing-to-happen-to-react/">Why hooks are the best thing to happen to React</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 
<p>React is <a href="https://insights.stackoverflow.com/survey/2021#section-most-popular-technologies-web-frameworks">the most popular front-end framework</a> in the <a href="https://stackoverflow.blog/2018/01/11/brutal-lifecycle-javascript-frameworks/">JavaScript ecosystem</a>. It is famous for its ease of use and its readability, allowing companies and startups to adopt it. But classes can be unwieldy and hard to understand. Hooks allow you to use state, lifecycle methods, and other functionalities of React without using classes. </p>



<p>This article will explain what hooks are, what makes them unique, and why they are the best thing to happen to React.&nbsp;</p>



<h2 id="h-the-origin-of-react-hooks">The origin of React hooks</h2>



<p>Originally, React mainly used class components, which can be strenuous at times as you always had to switch between classes, higher-order components, and render props. With React hooks, you can now do all these without switching, using functional components. Hooks make React so much better because you have simpler code that implements similar functionalities faster and more effectively. You can also implement React state and lifecycle methods without writing classes.</p>



<p>Below are code examples to illustrate React class and functional components.</p>



<pre class="s-code-block wp-block-code"><code>import React, { Component } from 'react'
 
export default class Hello extends Component {
    render() {
        return(
            &lt;div&gt;
            Hello World!
            &lt;/div&gt;
        )
    }
}
</code></pre>



<p>The code above is a class component that prints “Hello World” in the DOM.</p>



<pre class="s-code-block wp-block-code"><code>import React from 'react'
 
export default function Hello() {
    return (
        &lt;div&gt;
            Hello World!
        &lt;/div&gt;
    )
}
</code></pre>



<p>The code above is a functional component that prints “Hello World” on the DOM.</p>



<p>Comparing both sets of code above, the functional component has significantly simpler code that performs the same function; there’s no need to allocate space to a class instance, then call a <code>render()</code> function, you just call the function. React hooks have so many benefits and functions they perform, but one of the big ones is to make the React lifecycle methods easier.</p>



<p>NOTE: You cannot use React hooks on class components.</p>



<h2 id="h-how-have-hooks-made-the-react-lifecycle-easier">How have hooks made the React lifecycle easier?</h2>



<p>The various lifecycle methods in React include mounting, updating, and unmounting.</p>



<ul><li>Mounting inserts elements into the DOM.&nbsp;</li><li>Updating as the name implies, updates elements in the DOM.</li><li>Unmounting removes elements from the DOM.</li></ul>



<p>Below is an illustration of the various React lifecycle methods:</p>



<figure class="wp-block-image"><img src="https://lh4.googleusercontent.com/JoTzwb0XqJdldu-C6uvm-eYaurTFrQ7YsMQz-ZXhLVwLh_OPseD8CkBfxEIXL3Ij5B525ZXj7t9uKQPvRb8FO9Ha0nzw8_Uc-_EaU7XlSRQCnEWL2IeQBg4EOlSRIATB9TZpwjsH=s1600" alt="A graph that shows how mounting, updating, and unmounting work in the render, pre-commit, and commit phases. "/><figcaption>Image from Understanding the <a href="https://stackoverflow.com/questions/29873730/react-lifecycle-methods-understanding">React Lifecycle Methods</a></figcaption></figure>



<p>Initially, you could only use these lifecycle methods with class components, which usually comprise a lot of carefully engineered code that is more difficult to write or understand than when you use hooks to implement them as functional components.</p>



<p>Take, for instance, if you try to fetch user data using a <code>componentDidMount()</code> in a class component like in the code below:</p>



<pre class="s-code-block wp-block-code"><code>import React, { Component } from 'react'
import Axios from 'axios'
 
export default class Hello extends Component {
 
    constructor(props) {
        super(props);
        this.state = { name: ""};
    }
 
    componentDidMount() {
        Axios.get('/api/user/name')
        .then(response =&gt; {
            this.setState({ name: response.data.name })
        })
    }
 
    render() {
        return (
            &lt;div&gt;
                My name is {this.state.name}
            &lt;/div&gt;
        )
    }
}
</code></pre>



<p>Now let’s compare it to doing the same thing with a functional component by using the <code>useState</code> and <code>useEffect</code> hooks in the code below:</p>



<pre class="s-code-block wp-block-code"><code>import React, { useEffect, useState } from 'react'
import Axios from 'axios'
 
export default function Hello() {
 
    const &#91;Name, setName] = useState("")
 
    useEffect(() =&gt; {
        Axios.get('/api/user/name')
        .then(response =&gt; {
            setName(response.data,name)
        })
    }, &#91;])
 
    return (
        &lt;div&gt;
            My name is {Name}
        &lt;/div&gt;
    )
}
</code></pre>



<p>The code above collects user data by using the Axios API and prints it on the DOM. The <code>useEffect</code> and <code>useState</code> hooks make for more straightforward and concise code that is easy to understand and work on than the class components. When using lifecycle in class components, the <code>componentDidMount()</code>, <code>componentDidUpdate()</code>, <code>componentWillUnmount()</code> methods are handled individually, but when using React hooks, you can just do everything through the <code>useEffect</code> hook.&nbsp;</p>



<h2 id="h-hooks-have-made-react-easier-to-learn-for-beginners">Hooks have made React easier to learn for beginners&nbsp;</h2>



<p>Class components have always been a little cumbersome and confusing, especially as it makes state management and code reuse look so much more complicated than it actually is. That made many beginner developers shy away from React and opt for an “easier” framework. With hooks, it’s now simpler to learn React; because of this, its use in the tech world today has grown:&nbsp;</p>



<figure class="wp-block-image"><img src="https://lh4.googleusercontent.com/ktziH1T91IngHVTSaF8bI6S3TKJpHZgdi6iWo4oFdo-R0spD-d7gwnRBIzy66mDMsNlceuARgajRQkqSE6qL-9lclTWUVF1QNoPfbIeVBHlVyTkO3oAd4rdcSDu3o9cJ5m65HhQa=s1600" alt="A chart showing the relative volumes of questions for JavaScript Frameworks: jquery, ReactJS, AngularJS, and Angular. "/><figcaption>via https://insights.stackoverflow.com/trends?tags=jquery%2Cangularjs%2Cangular%2Creactjs<a href="https://www.tecla.io/blog/2019-stats-on-top-js-frameworks-react-angular-and-vue/">&nbsp;</a></figcaption></figure>



<p>The graph above shows the increase in the percentage of Stack Overflow questions about React over the years vs. other popular JavaScript frameworks, proving that its general usage has increased since the introduction of hooks.&nbsp;</p>



<h2 id="h-some-hooks-and-their-functions">Some hooks and their functions&nbsp;</h2>



<p>Before hooks were introduced, organizing components by lifecycle methods forced us to sprinkle similar logic in several components i.e. writing the same code in several places.&nbsp; To solve this and other superficial problems, React embraced functions for more straightforward and more flexible code. The next issue they had to solve was how to change the state of our components. This now brings us to our first hook: <code>useState</code>.</p>



<h3 id="h-the-usestate-hook">The <code>useState</code> Hook&nbsp;</h3>



<p>Arguably the most common React hook, <code>useState</code> helps you pass in state variables in a functional component. Take a look at the code below:</p>



<pre class="s-code-block wp-block-code"><code>const loadingTuple = React.useState(true)
const loading = loadingTuple&#91;0]
const setLoading = loadingTuple&#91;1]
 
 
 
loading // true
setLoading(false)
loading // false

</code></pre>



<p>In the code above, <code>useState</code> takes a single argument: the state’s initial value. It returns an array with a <code>state</code> variable and a function to update that state. You now have everything you need to update the&nbsp; <code>state</code> of your functional component.&nbsp;</p>



<p>The next hook we will look into solves the problem of implementing lifecycles in a functional component. It’s called <code>useEffect</code>.</p>



<h3 id="h-the-useeffect-hook">The <code>useEffect</code> Hook&nbsp;</h3>



<p>The <code>useEffect</code> helps to perform side effects in functional components; that is, any function that you need to run after updating the DOM. It replaces some events by running a function whenever one or more variables change. It takes two arguments: a function and an optional array. The function defines which “side effect” to run, and the optional array indicates variables, objects, etc., to watch for changes.</p>



<h3 id="h-other-react-hooks-include">Other React hooks include:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</h3>



<ul><li><code>useContext()</code>: This hook helps to build a context API, which itself is a mechanism used to share data without passing props.&nbsp;</li></ul>



<ul><li><code>useRef()</code>: This hook allows you to reference the DOM in the functional component directly.<br></li></ul>



<p>Note: <code>useRef()</code> doesn’t trigger a re-render like <code>setState()</code> does.</p>



<ul><li><code>useReducer()</code>: This stores the current state value. You can liken it to Redux.</li></ul>



<ul><li><code>useMemo()</code>: This is a hook used to return a memoized value, i.e. when you need your function to return a cached value.&nbsp;</li></ul>



<ul><li><code>useCallback</code>: This hook is used when you have a component’s child continuously re-rendering. It will then return a memoized version of the callback that only changes when one of the dependencies changes.</li></ul>



<p>These are just some of the most commonly used React hooks. If you want to learn more about React hooks, you can check it out <a href="https://reactjs.org/docs/hooks-overview.html">here</a>.</p>



<h2 id="h-conclusion"><strong>Conclusion</strong>&nbsp;</h2>



<p id="h-we-used-classes-for-react-components-because-it-was-the-best-way-at-the-time-as-we-couldn-t-create-a-state-or-implement-the-lifecycle-methods-in-functional-components-react-hooks-have-made-performing-these-functionalities-much-easier-by-providing-an-avenue-for-simpler-more-composable-flexible-and-extendable-code-than-using-class-components-without-hooks-many-companies-have-adopted-react-as-their-primary-front-end-framework-which-makes-more-developers-add-it-to-their-skill-set-if-you-have-any-questions-leave-a-comment-below">We used classes for React components because it was the best way at the time as we couldn’t create a state or implement the lifecycle methods in functional components. React hooks have made performing these functionalities much easier by providing an avenue for simpler, more composable, flexible, and extendable code than using class components without hooks. Many companies have adopted React as their primary front-end framework, which makes more developers add it to their skill-set. If you have any questions, leave a comment below!</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/10/20/why-hooks-are-the-best-thing-to-happen-to-react/">Why hooks are the best thing to happen to React</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 https://stackoverflow.blog/2021/10/20/why-hooks-are-the-best-thing-to-happen-to-react/feed/ 14 18951 Podcast 385:  Getting your first job off the CSS mailing list https://stackoverflow.blog/2021/10/19/podcast-385-getting-your-first-job-off-the-css-mailing-list/ https://stackoverflow.blog/2021/10/19/podcast-385-getting-your-first-job-off-the-css-mailing-list/#respond Ben Popper Tue, 19 Oct 2021 04:40:00 +0000 The Stack Overflow Podcast se-stackoverflow se-tech the stack overflow podcast https://stackoverflow.blog/?p=18945 <p>You're crafting the color of the button on the component of the feature for the platform, m'kay.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/10/19/podcast-385-getting-your-first-job-off-the-css-mailing-list/">Podcast 385:  Getting your first job off the CSS mailing list</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 
<iframe loading="lazy" height="200px" width="100%" frameborder="no" scrolling="no" seamless src="https://player.simplecast.com/a476cd90-f48c-43f3-ab59-3ada577308d5?dark=false"></iframe>



<p>It&#8217;s a reunion episode featuring a Stack Overflow classic crew: <br><br>Ben Popper, director of content at Stack Overflow, Paul Ford, co-founder of Postlight, and Sara Chipps, engineering manager for Flagship architecture at LinkedIn. <br><br>We talk about Paul getting his first job in software from a footer note on the CSS mailing list. Later we chat about Sara&#8217;s experience going from a company with hundreds of engineers, to one with thousands.</p>



<h2 id="h-episode-notes">Episode Notes</h2>



<p>At LinkedIn scale, it pays to save your developers a few minutes or even seconds, on repeat tasks. Sara walks us through her experience managing senior engineers, and trying to improve developer experience and tooling, on a massive, global platform with over a billion user interactions a month.</p>



<p>Paul &nbsp;shares some of his firm&#8217;s latest work, helping to visualize the impact of climate change at&nbsp;<a href="https://probablefutures.org/">Probable Futures</a>. Interested in doing work in software focused on climate change? Paul recommends you learn a bit about&nbsp;<a href="https://nsidc.org/data/netcdf#:~:text=Network%20Common%20Data%20Form%20(NetCDF,of%20name%2Fvalue%20attributes).">NetCDF</a>&nbsp;files.</p>



<p>Follow Sara on Twitter&nbsp;<a href="https://twitter.com/SaraJChipps">here</a>.</p>



<p>Follow Paul on Twitter&nbsp;<a href="https://twitter.com/ftrain">here</a>.</p>



<p>Enjoy our brain teaser of the week: <a href="https://puzzling.stackexchange.com/questions/112064/a-new-way-to-cut-a-pizza">a new way to cut pizza</a>.</p>



<p><a href="https://the-stack-overflow-podcast.simplecast.com/episodes/engineering-managing-linkedin-css-components-features-platforms/transcript/">TRANSCRIPT</a></p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/10/19/podcast-385-getting-your-first-job-off-the-css-mailing-list/">Podcast 385:  Getting your first job off the CSS mailing list</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 https://stackoverflow.blog/2021/10/19/podcast-385-getting-your-first-job-off-the-css-mailing-list/feed/ 0 18945 Code quality: a concern for businesses, bottom lines, and empathetic programmers https://stackoverflow.blog/2021/10/18/code-quality-a-concern-for-businesses-bottom-lines-and-empathetic-programmers/ https://stackoverflow.blog/2021/10/18/code-quality-a-concern-for-businesses-bottom-lines-and-empathetic-programmers/#comments Isaac Lyman Mon, 18 Oct 2021 14:00:00 +0000 Code for a Living code quality se-stackoverflow se-tech software engineering tech debt https://stackoverflow.blog/?p=18941 <p>Code quality affects the mental state of a programmer, communication within their team, and the incentives attached to their work. Improve your code and you can improve your organizational health and competence as a whole. </p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/10/18/code-quality-a-concern-for-businesses-bottom-lines-and-empathetic-programmers/">Code quality: a concern for businesses, bottom lines, and empathetic programmers</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 
<p>The value of high-quality code can be difficult to communicate. Some managers see it as a boondoggle, an expensive hobby for overly fastidious programmers, since investing in code quality can slow development over the short term and doesn’t appear to alter the user experience. But nothing could be further from the truth.&nbsp;</p>



<p>It’s true that tech companies with a poor organizational understanding of code quality can launch quickly and see success in the short term. But in doing so they incur an invisible debt that grows every time the code is altered. This debt does not stay intangible for long. Once the product exceeds a very low threshold of complexity, the debt comes due, gradually consuming <a href="https://ieeexplore.ieee.org/abstract/document/8094405">the productivity of their development team</a> and <a href="https://dl.acm.org/doi/abs/10.1145/1985362.1985366">the usability of their software</a>. When we speak of “<a href="https://dl.acm.org/doi/abs/10.1145/1985362.1985364">technical debt</a>,” these are the dangers we’re talking about.</p>



<p>Organizations that produce software sit at the intersection of a thousand different variables. Anything that affects <a href="https://ieeexplore.ieee.org/abstract/document/7965359">the mental state of a programmer</a>, <a href="https://papers.ssrn.com/sol3/papers.cfm?abstract_id=2425392">communication within their team</a>, or <a href="https://www.researchgate.net/profile/Bogdan-Lent/publication/263272870_Assessment_and_Management_of_the_Human_Factor_Impact_on_Human_Factor_Intense_Projects_-_Challenging_the_Challenge/links/5f6b010592851c14bc8e4686/Assessment-and-Management-of-the-Human-Factor-Impact-on-Human-Factor-Intense-Projects-Challenging-the-Challenge.pdf">the incentives attached to their work</a> is likely to be reflected in their code. Promoting code quality, then, is partially a matter of <a href="https://www.tandfonline.com/doi/abs/10.1080/07421222.1999.11518259">improving organizational health and competence</a> as a whole. In this article I’ll briefly define code quality and explain how it impacts the whole company, then zero in on a few organizational habits that are effective in increasing it.</p>



<h2 id="h-what-is-code-quality">What is code quality?</h2>



<p>In a way, learning to code is learning to empathize with a machine: its intense attention to detail, its need for matched parentheses and consistent capitalization, and the helplessness of its error states. These needs can be so foreign and opaque that the most experienced of us still spend hours, even days, chasing down bugs that amount to just a few characters of source code. This is taxing. Sometimes empathizing with our machines is as much as we can handle. In those situations we fall back on a simple metric: does it do the job? Since the foremost purpose of code is to do a job, there are times when we don’t look beyond that.</p>



<p>This approach isn’t sustainable for any but the smallest of projects, though. Code is not sudoku, with a single correct solution for each problem. There are infinite ways to write any computation task, and some are simpler and more predictable than others. Small differences here add up over time. Code is written once and read a thousand times. Programmers read code when they’re fixing bugs or adding functionality. They read code to remember how their applications work. They read code to discover patterns they can reuse elsewhere. The only thing that’s done to code more often than reading it is executing it. This is the fundamental reason why we concern ourselves with code quality. <a href="https://www.researchgate.net/publication/237386711_PROGRAMMING_IS_WRITING_WHY_PROGRAMS_NEED_TO_BE_CAREFULLY_READ">The usefulness of a piece of code has a great deal to do with its impact on the people who will read it</a>. When we write good code, we’re saving them time and effort. We’re making their jobs easier. We’re making an investment that will pay dividends day after day, year after year, until the application reaches the end of its life.</p>



<p>So, ironically, once we’ve trained our minds to empathize with computers so we can write working code, it’s then our responsibility to remember how to empathize with humans so our code doesn’t frustrate them.</p>



<p>What does code quality look like in mechanical terms? <a href="https://en.wikipedia.org/wiki/Code_Complete">Multiple</a> <a href="https://martinfowler.com/books/refactoring.html">books</a> <a href="https://www.oreilly.com/library/view/working-effectively-with/0131177052/">have</a> <a href="https://pragprog.com/titles/dblegacy/beyond-legacy-code/">been</a> <a href="https://www.oreilly.com/library/view/refactoring-for-software/9780128013977/">written</a> on the subject, so I won’t attempt to explain in-depth. But to give an overview, high-quality code is code that can be understood quickly. If a programmer can pick a method or class from a codebase at random and understand it deeply in a few minutes—not just its functionality and business logic, but everything it depends on and every way it might be used—without consulting too many other files, then the codebase is probably high-quality. Once this is achieved, the question of whether the code works correctly is far less concerning; it can be changed, fixed, or deleted without much risk or effort.&nbsp;</p>



<p>Granted, I’m describing a philosophical ideal here. In a real-world application there will always be pieces that are unavoidably complex or confusing. But even these pieces can vary widely in quality. There is no situation where code quality is completely out of the programmer’s hands.</p>



<p>A few of the most important factors in code quality are:</p>



<ol><li><strong>Encapsulation</strong>. High-quality code is most often made up of self-contained components: one cannot change the behavior of a self-contained component by modifying something outside of it, nor does the component modify things that are external to it (within reason—it makes sense for a component to read and update a database if that’s understood to be its job). This saves development time because when a component needs to be fixed, updated, or deleted, programmers spend less time searching for external causes and effects.</li><li><strong>Idiomatic code</strong>. Modern programming languages have built-in syntax and methods for the most common tasks, like converting a string to a number or determining if a collection contains a particular element. These are more reliable, performant, and widely understood than anything a programmer might write from scratch, and require far less code than a custom method. Code written idiomatically—that is, using the conventions and built-in features of a language as much as possible—is more readable and requires less maintenance.</li><li><strong>Meaningful names</strong>. Variables and methods throughout a codebase are named by the programmers who write them. Meaningless names, like `x` or `fn`, require the programmer to understand and remember extra layers of context while reading code that uses them. If there are more than a few of these in one place it becomes impossible to keep everything in working memory. High-quality code uses specific and descriptive variable names, like `departmentName` or `getAnnualExpenses`. Although it is possible to be too verbose here, a programmer reading code for the first time is better served by a name that says too much than one that says too little.</li><li><strong>Low cyclomatic complexity</strong>. Any time a computer makes a decision, as with an if statement or a for loop, another layer of meaning is added to the code that follows: under one condition, the code will be executed or repeated; under another condition, it will be skipped. “Cyclomatic complexity” is a metric referring to the number of decisions that exist in a process. As with the previous point, a programmer’s working memory can become a bottleneck as layers of meaning accumulate. While decisions are essential to the usefulness of an application, high-quality code minimizes decision points and the code they contain, and avoids nesting them within each other as much as possible.</li></ol>



<p>It&#8217;s important to note that while code quality includes a few factors that can be measured, every concrete measure of code quality is imperfect and easy to game. There is no product or tool that can automatically and definitively rate the quality of a codebase. However, there are heuristics you can use to get a feel for code quality and see where issues may lie.</p>



<p>Unit tests, for example, are pieces of code that test application behavior. They do so in a fast and repeatable way, ensuring that the application continues to work correctly as it grows and changes. Unit tests are more likely to accompany high-quality code than low-quality code. They reward and encourage quality, since the things that make for good code—encapsulation, loose coupling, conciseness, simplicity, and so on—also make for easier testing. This changes the path of least resistance for programmers: if they&#8217;re writing unit tests for previously-untested code, sometimes it will be easier to simplify and rearrange that code than to test it in its current form. And if programmers know they will be writing unit tests as a standard part of the development process, they&#8217;re incentivized to write better code in the first place.</p>



<h2 id="h-the-impacts-of-code-quality">The impacts of code quality</h2>



<p>The nature of software applications is to grow, not just in size but in complexity. Complexity comes in many forms. Some of them are the result of low-quality code, but others are a fundamental part of the application&#8217;s functionality and value. Software complexity has business value for a few reasons:</p>



<ul><li>The complexity of a problem space can be absorbed by software processes. This complexity is transformed, not destroyed. Software is never less complex than the problem it actually solves (although well-built software hides this fact).</li><li>A product can adapt to an ever-increasing variety of use cases by adding complexity (often during the deployment phase). This creates a larger market for the product by hiding or customizing features based on their relevance to specific industry segments, companies, or users.</li><li>Good software is built to high standards of accessibility, observability, resilience, and visual appeal. All of these things require additional code and therefore increased complexity.</li></ul>



<p>Complexity that adds value or increases competitive advantage is “good complexity.” Good complexity is the reason we build software. Complexity that makes code difficult to understand, maintain, and build on is “bad complexity.” Bad complexity is <a href="https://www.proquest.com/openview/89e6254dbe742d6e5773c78e7516824f/1?pq-origsite=gscholar&amp;cbl=18750">a major reason</a> why software products fail. Good complexity is part of the software’s purpose and design. Bad complexity is incidental, appearing when programmers or their managers make mistakes during implementation (I’ll discuss what causes this later on).</p>



<p>A useful way to define code quality is the ratio of bad complexity to good complexity. There are major advantages to keeping this ratio low—what I’ve been referring to as “high-quality code.”</p>



<p>First, it keeps development and maintenance costs low over the long term. Consider the following graph:</p>



<figure class="wp-block-image"><img src="https://lh4.googleusercontent.com/qv8taI3Cc4UQjxVc_ZNfHt_jRpX0vLd9vQIyil-0IUWTzeY0pWPe04hjZoxyIWWMFp7FsegufDSoeKks8STDaTJFyIVps32dYvcnoKTBEE8RpnVQ3GedbUvHjvY3PyxcL1T_UGHX=s0" alt="A graph tracking two curves. The x-axis is time and the y-axis is cumulative functionality. There is a vertical dashed line center-left on the x axis representing an inflection point, labeled &quot;this point occurs in weeks (not months).&quot; The first curve, in brown, represents software with low internal quality; it rises quickly until the inflection point, then nearly levels out. The second curve, in blue, represents software with high internal quality; it is lower than the other until the inflection point, where it rapidly outpaces it. "/></figure>



<p><em>Source: </em><a href="https://martinfowler.com/articles/is-quality-worth-cost.html"><em>“Is High Quality Software Worth the Cost?”</em></a><em> by Martin Fowler</em></p>



<p>For any project that lasts more than a few weeks, development speed is partially dependent on code quality. This is a significant factor in total cost of ownership—in other words, the company’s bottom line is directly at risk. <a href="https://sites.pitt.edu/~ckemerer/CK%20research%20papers/SwComplexityAndMaintenanceCost_BankerDatar93.pdf">One study</a> found that complexity accounts for 25% of the cost of software maintenance and over 17% of total software lifecycle costs. <a href="https://www.cnbc.com/2018/09/06/companies-worry-more-about-access-to-software-developers-than-capital.html">And a 2018 poll by Stripe</a> found the worldwide cost of dealing with “bad code” to be as high as $85 billion per year. These numbers only address costs in terms of development time and payroll; the costs of shipping defective software or being beaten to market by a competitor are also worth considering. Since the effects of bad code persist until it is removed, the only sensible approach is to deal with it early and often.</p>



<p>Second, code quality is a factor in <a href="https://www.computer.org/csdl/magazine/so/2019/05/08802319/1cw1Hxe8rMQ">job satisfaction</a> among programmers. Companies that want to attract world-class talent, increase employee engagement, and limit turnover can’t afford to ignore this relationship. Turnover in particular is a <a href="https://dl.acm.org/doi/abs/10.1145/1355238.1355245">studied factor</a> in the success or failure of software projects. This is likely because programmers <a href="https://dl.acm.org/doi/abs/10.1145/2786805.2786870">make more mistakes</a> on projects they are less familiar with.</p>



<p>Third, code quality drives product quality. High-quality code is <a href="https://link.springer.com/article/10.1007/s10664-011-9171-y">less likely to have bugs</a>, which are a major driver of user complaints. Code quality has also been correlated to <a href="https://dl.acm.org/doi/abs/10.1145/3197231.3198447">commercial success</a> and <a href="https://ieeexplore.ieee.org/document/8819456">reduced security vulnerabilities</a>. Code quality certainly isn’t the only factor in a product’s performance on the market, and it likely isn’t the most important factor either. But even the most competent organizations will struggle to market a product that’s bug-ridden or vulnerable to hacks.</p>



<h2 id="h-how-organizations-can-increase-code-quality">How organizations can increase code quality</h2>



<p>Code quality requires investment. It can’t be increased without the commitment of resources—money, development time, and deadline negotiation being the most prominent of these. It also can’t be increased by the use of threats, punishment, or overtime; code can’t be improved under the conditions that lead to bad code in the first place! The good news is that refactoring—the practice of actively increasing the quality of a codebase—does not require all other development activities to cease. It can become a regular and minimally-disruptive part of the development process, something the team attends to while continuing to build and improve features.</p>



<p>Following are some organizational habits and competencies that promote higher-quality code.</p>



<h3 id="h-sustainable-pace">Sustainable pace</h3>



<p>Programming is difficult under the best of circumstances. As mentioned earlier, a programmer’s ability to code is profoundly dependent on their mental state. Happiness, <a href="https://repository.lib.ncsu.edu/bitstream/handle/1840.16/10358/etd.pdf?sequence=1">sufficient rest</a>, and low stress levels are all important ingredients.&nbsp;</p>



<p>The first way to ensure programmers have enough mental resources to do their best work is to <a href="https://www.researchgate.net/profile/James-Cusick/publication/259781769_Impact_of_Overtime_and_Stress_on_Software_Quality/links/0f31752dd77ad07cc0000000/Impact-of-Overtime-and-Stress-on-Software-Quality.pdf">avoid overtime</a>. The quality of a programmer’s code drops by the end of a standard eight-hour workday, let alone in the hours beyond. Many programmers have had the experience of coding while excessively tired, stressed, or sick, then discovering the next day that all their work has to be undone or rewritten. This is “net negative work,” code so low-quality that it actually increases the amount of work remaining on the project. Nothing can compensate for a lack of rest over the long term—neither caffeine, nor micro-napping, nor ping-pong tables, nor free beer can replicate the benefits of a restful evening and a good night’s sleep.</p>



<p>Companies that foster burnout by insisting on constant overtime are not just abusive, they’re self-defeating. Any initial gains in productivity will be rapidly drowned out by poor quality. On the other hand, companies that pace their development teams on a short, sustainable and flexible workday, allowing plenty of time off and sick leave, can expect consistent and high-quality output over the long term.</p>



<p>A common cause of overtime in otherwise competent organizations is deadline pressure. Deadlines are often based on financial motivations or scheduling concerns rather than the realities of software development. Programmers can’t speed up a project by thinking harder or typing faster. When a deadline approaches they generally take the only shortcut available to them, which is reduction of quality. This can be avoided by careful planning and strategizing around deadlines.</p>



<p>The first part of this is estimation. Software estimation is a <a href="https://stevemcconnell.com/17-theses-software-estimation/">complex skill that requires specific training</a>. Most programmers and managers have not had this training. In the absence of estimation skills, teams are at risk of falling back on oversimplified formulas like “guess how long it will take, then double that guess, then double it again.” The best case scenario here is that the project is done early and project managers are left improvising ways to fill leftover development time. But the worst case scenario is that the project is delivered late or barely functional. So if an organization lacks the time or the will to build software estimation skills, it’s far better to negotiate for extremely generous deadlines than to end up disappointing customers.</p>



<p>The second part of deadline management is prioritization. Prioritization is not just about which things are built first; it’s about which things are built at all. Every development roadmap is liable to include features that are overvalued (difficult to build and not especially valuable to users) or undervalued (easy to build and very valuable to users). An effective manager will focus their team’s efforts on the latter end of the spectrum, especially as deadlines loom close.</p>



<p>If deadlines are managed well, they can be an effective motivator toward the team’s software delivery goals while also leaving enough time for things to be built right. Software quality, as much as anything else, requires dedicated time.</p>



<h3 id="h-refactoring-as-part-of-the-development-cycle">Refactoring as part of the development cycle</h3>



<p>Technical debt, like a weed, springs up regardless of what we may do to prevent it. While some development practices can reduce it substantially, there is no way to eliminate it without the benefit of hindsight. Keeping it to a minimum means regularly taking time to find, discuss, and fix it.</p>



<p>Many organizations use <a href="https://theuxcto.com/digital-blitz/the-80-20-rule-to-deal-with-technical-debt-refactoring/">the “20% rule”</a> as a guide: 80% of development time is spent on feature development or bugfixes and 20% is spent on refactoring. This principle works best when applied loosely, since teams can’t predict exactly how long a given task will take. And there may be occasional cycles when technical debt has become such a hindrance that it requires a team’s full attention, or cycles when there are pressing feature releases to attend to and technical debt has to take a back seat. The organization should take care not to fall into the trap of doing either of these for longer than necessary.</p>



<p>For the best results, technical debt tasks should be first-class citizens of the planning process. That is, they should exist alongside features, bugs, and testing tasks in the team’s planning software (or on their whiteboard, as the case may be). The 20% rule can be adopted as simply as “one out of every five tasks is set aside for refactoring.” This doesn’t necessarily require technical debt tasks to be planned and scoped to the same level of detail as feature tasks. Rather, the goal is to ensure that the team’s refactoring work is visible and the time they spend on it is protected.</p>



<h3 id="h-technical-leadership-and-review">Technical leadership and review</h3>



<p>Code quality is second nature to many programmers. They recognize low-quality code, understand its effects, and know how to fix it. To other programmers, the concept is entirely foreign. If a project is staffed entirely by the latter, it doesn’t take long for it to end up mired in slow development and technical issues.</p>



<p>What’s the difference between these two groups of programmers? The answer is simple: study and intentional practice. Unfortunately, neither <a href="https://dl.acm.org/doi/abs/10.1145/3174781.3174785">colleges</a> nor bootcamps nor <a href="https://link.springer.com/article/10.1007/s10664-016-9471-3">years of industry experience</a> can be relied on to instill the relevant skills—nothing on a programmer’s resume will necessarily set them apart. But this shouldn’t keep hiring managers up at night. Code quality and refactoring skills can be learned at any stage of a programmer’s career and are far less complex than many of the other concepts they deal with. The quality of a programmer’s work can increase dramatically over the course of a few months if they have access to the right resources and are willing to improve.</p>



<p>What’s more, a software organization can thrive even when their programmers are unevenly skilled. If practiced programmers are chosen to lead the architecture, design, and planning of software projects, their understanding of code quality will be part of the DNA of the development cycle. This kind of technical leadership is essential to high-quality software.</p>



<p>Skill gaps can also be bridged with various forms of review:</p>



<ul><li><strong>Design reviews</strong> happen after a task is specified but before any code is written. The programmer assigned to the task writes a document outlining their approach: the files, classes, and methods they plan to update; the patterns and techniques they will use; and any uncertainties they may have about design or business logic. Then another programmer gives feedback on that document, which may include correcting misconceptions and suggesting helpful patterns or methods that already exist in the codebase. The time taken by this process is sometimes substantial, but it’s a worthwhile investment. Catching a defect this early in the development process is <a href="https://www.researchgate.net/figure/IBM-System-Science-Institute-Relative-Cost-of-Fixing-Defects_fig1_255965523">extremely cheap</a> relative to the cost of discovering and fixing it later.</li><li><strong>Pair programming</strong> is the practice of assigning two programmers to complete a task together in real time. One programmer controls the keyboard and mouse while the other programmer gives directions. This allows for instantaneous review, feedback, and knowledge transfer during development. Studies have found <a href="https://link.springer.com/chapter/10.1007/3-540-44870-5_27">mixed</a> <a href="https://dl.acm.org/doi/abs/10.1145/1062455.1062545">results</a> as to the raw productivity of two programmers working together versus solo (although it seems to offer a <a href="https://www.sciencedirect.com/science/article/abs/pii/S1071581906000644">more consistent productivity boost</a> to inexperienced programmers). However, when code quality is taken into consideration, pair programming is almost <a href="https://dl.acm.org/doi/abs/10.1145/1414004.1414026">universally</a> <a href="https://ieeexplore.ieee.org/abstract/document/854064">recognized</a> as <a href="http://www.dsc.ufcg.edu.br/~jacques/cursos/map/recursos/XPSardinia.pdf">advantageous</a>.</li><li><a href="https://stackoverflow.blog/2019/09/30/how-to-make-good-code-reviews-better/"><strong>Code reviews</strong></a> happen after code is written but before it’s shipped as part of the product. A programmer makes their code changes available to the rest of the team. Then another programmer reads them and gives feedback, often suggesting changes that should be made before the code is shipped. Many code quality issues can only be recognized by a human. This is the last opportunity to catch those before they become part of the product.</li></ul>



<p>If team members are frequently required to check each other’s work and there are no major hostilities or communication failures between them, the quality of their collective work will rise toward the level of the most practiced programmer’s.</p>



<h2 id="h-code-quality-is-a-competitive-advantage">Code quality is a competitive advantage</h2>



<p>Research on code quality is not scarce (if the 25+ studies linked above aren’t enough, there are <a href="https://scholar.google.com/scholar?hl=en&amp;as_sdt=0%2C45&amp;q=code+quality&amp;btnG=">plenty more</a>). Time and time again it’s been demonstrated to be a factor in project success or failure, time-to-market, and product longevity. Organizations that prioritize healthy codebases are prioritizing their customers, their programmers, and their own financial viability.</p>



<p>Code quality is also one of the great gifts we programmers can give to ourselves and our colleagues. If we spend a few extra moments naming a variable, rewriting deeply-nested logic, or making a function more predictable, those moments will be paid back in full many times over as we interact with that code over the life of the project. Thinking about how our code affects computers is the bare minimum; thinking about how our code affects humans is a powerful form of empathy in practice, one that no organization can afford to ignore.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/10/18/code-quality-a-concern-for-businesses-bottom-lines-and-empathetic-programmers/">Code quality: a concern for businesses, bottom lines, and empathetic programmers</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 https://stackoverflow.blog/2021/10/18/code-quality-a-concern-for-businesses-bottom-lines-and-empathetic-programmers/feed/ 24 18941 The Overflow #95: Image search, but for any object IRL https://stackoverflow.blog/2021/10/15/the-overflow-95-image-search-but-for-any-object-irl/ https://stackoverflow.blog/2021/10/15/the-overflow-95-image-search-but-for-any-object-irl/#respond Ryan Donovan and Cassidy Williams Fri, 15 Oct 2021 13:00:00 +0000 The Overflow newsletter the overflow https://stackoverflow.blog/?p=18934 <p>Welcome to ISSUE #95 of The Overflow! This newsletter is by developers, for developers, written and curated by the Stack Overflow team and&#160;Cassidy Williams&#160;at&#160;Netlify. This week: the best practices for REST API auth, a physics lesson with air conditioners, and the wonders of the CSS Paint API. From the blog Extracting text from any file…</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/10/15/the-overflow-95-image-search-but-for-any-object-irl/">The Overflow #95: Image search, but for any object IRL</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 
<p>Welcome to ISSUE #95 of The Overflow! This newsletter is by developers, for developers, written and curated by the Stack Overflow team and&nbsp;<a href="https://itr-links.stackoverflow.email/u/click?_t=3603a3d8f3104ca5bd7015a5845f7fb7&amp;_m=EoL62DB0PIGuXz8jH5uBuQ84lXlHlps2&amp;_e=_QiVw4xkxL6Kq_I-OU4afBnKfI77FjoIfX88HTVRZxPuTd2bnAMrrH9rcbsb0dWeVEF1qnpHf4xYVNc9DjG8B3SxoCwGD7YNwE1j5XUlAoVN5IWubZGRkJQZDmmaOZBv48jI4i91xWdFCil-LQ1NSRFjmqF5DoNWqj0-C-Jd-e6BG04-YOMtUtGjjvW4FlO4SiDdPs_9w2phRLlieyDSowbBJXd8neaip9JCBAeEhORiLVYGsioAE1W0vQlkjGKF">Cassidy Williams</a>&nbsp;at&nbsp;<a href="https://itr-links.stackoverflow.email/u/click?_t=3603a3d8f3104ca5bd7015a5845f7fb7&amp;_m=EoL62DB0PIGuXz8jH5uBuQ84lXlHlps2&amp;_e=_QiVw4xkxL6Kq_I-OU4afOZOM0oCqsuuy0jKIrvb1QwkHWIZOMWNPCK6iuSTMOLeVDuTWeKOcbbyBczybLGtoNQkE84uGWTIEgGhFcxEULL45YJLR4857Ii-0ehWwRpRtjVPtwUxxOtY9-B2oCRv3dmx-KEES0t57P4_TNE4xFT-W5TGiXBreKWRyHfSL-Ozr796X8rmwbKE4P01pm8iSRIwfptm3apXxzvS_usQlDNLQGeGDgkjk55n1OBtvYt6oHij-wFSi5PdDR16hvrYr7E3MKhupgD-zGOVEWxRdxJ-RcBKrj9bAExDUmk948bZeThbs8xuJpwrwNDQkq5QPw%3D%3D">Netlify</a>. This week: the best practices for REST API auth, a physics lesson with air conditioners, and the wonders of the CSS Paint API.</p>



<h2 id="h-from-the-blog">From the blog</h2>



<p><a href="https://stackoverflow.blog/2021/10/04/extracting-text-from-any-file-is-harder-than-it-looks-extracting-formatting-is-even-harder/?utm_source=Iterable&amp;utm_medium=email&amp;utm_campaign=the_overflow_newsletter"><strong>Extracting text from any file is harder than it looks. Extracting formatting is even harder.</strong></a>&nbsp;<em>stackoverflow.blog</em><br>Hyland discusses how deep their document filtering rabbit hole really goes.</p>



<p><a href="https://stackoverflow.blog/2021/10/06/best-practices-for-authentication-and-authorization-for-rest-apis/?utm_source=Iterable&amp;utm_medium=email&amp;utm_campaign=the_overflow_newsletter"><strong>Best practices for authentication and authorization for REST APIs</strong></a>&nbsp;<em>stackoverflow.blog</em><br>If you have a REST API accessible on the internet, you’re going to need to secure it. Here’s our guide to best practices.</p>



<p><a href="https://stackoverflow.blog/2021/10/05/podcast-381-building-image-search-but-for-any-object-irl/?utm_source=Iterable&amp;utm_medium=email&amp;utm_campaign=the_overflow_newsletter"><strong>Podcast 381: Building image search, but for any object IRL</strong></a>&nbsp;<em>stackoverflow.blog</em><br>What if you could break a vase and use any part to put it back together?</p>



<p><a href="https://aws.amazon.com/free/compute/lightsail/?trk=el_a134p000007CeA0AAK&amp;trkCampaign=psc-2021-ec2_lightsail-free_tier&amp;sc_channel=el&amp;sc_campaign=ec2-lightsail-promo-so_newsletter-ls_pricing&amp;sc_outcome=Enterprise_Digital_Marketing&amp;sc_geo=NAMER"><strong>Try Lightsail for free for up to three months</strong></a>&nbsp;<em>promotion</em><br>Ideal for simple workloads, quick deployments, and getting started on AWS, Lightsail is designed to help you start small and then scale as you grow. For a limited time, new Amazon Lightsail customers can try Lightsail for free on select bundles.</p>



<h2 id="h-interesting-questions">Interesting questions</h2>



<p><a href="https://codegolf.stackexchange.com/questions/236010/increment-the-time?utm_source=Iterable&amp;utm_medium=email&amp;utm_campaign=the_overflow_newsletter"><strong>Increment the time</strong></a>&nbsp;<em>codegolf.stackexchange.com</em><br>A minute is short. This code is shorter.</p>



<p><a href="https://engineering.stackexchange.com/questions/47398/is-there-a-way-to-make-an-air-conditioner-without-venting-heat-outdoors?utm_source=Iterable&amp;utm_medium=email&amp;utm_campaign=the_overflow_newsletter"><strong>Is there a way to make an air conditioner without venting heat outdoors?</strong></a>&nbsp;<em>engineering.stackexchange.com</em><br>In this house, we obey the laws of thermodynamics!</p>



<p><a href="https://law.stackexchange.com/questions/73144/can-satellite-images-be-copyrighted?utm_source=Iterable&amp;utm_medium=email&amp;utm_campaign=the_overflow_newsletter"><strong>Can satellite images be copyrighted?</strong></a>&nbsp;<em>law.stackexchange.com</em><br>“Doctrine of the sweat of the brow” sounds like something parents say to get you to mow the lawn.</p>



<p><a href="https://codereview.stackexchange.com/questions/268401/adding-odd-numbers-in-c?utm_source=Iterable&amp;utm_medium=email&amp;utm_campaign=the_overflow_newsletter"><strong>Adding odd numbers in C++</strong></a>&nbsp;<em>codereview.stackexchange.com</em><br>For when your code can’t even.</p>



<h2 id="h-links-from-around-the-web">Links from around the web</h2>



<p><a href="https://whistlr.info/2021/box-model-animation/"><strong>How I learnt to stop worrying and love animating the box model</strong></a>&nbsp;<em>whistlr.info</em><br>Some CSS properties are GPU-accelerated, and usually you just want to animate those. But what if you animated others?</p>



<p><a href="https://devblogs.microsoft.com/typescript/announcing-typescript-4-5-beta/"><strong>Announcing TypeScript 4.5 Beta</strong></a>&nbsp;<em>devblogs.microsoft.com</em><br>TypeScript recently hit its ninth birthday, and it’s easy to think of it as a simple way to add types to JavaScript&amp;#8230; but it’s so much more than that.</p>



<p><a href="https://css-tricks.com/exploring-the-css-paint-api-polygon-border/"><strong>Exploring the CSS Paint API: Polygon Border</strong></a>&nbsp;<em>css-tricks.com</em><br>Have you tried the Paint API? Here’s a great deep dive into how you can set up paths to make cool borders on your sites!</p>



<p><a href="https://gitexplorer.com/"><strong>Git Explorer</strong></a>&nbsp;<em>gitexplorer.com</em><br>If you’re tired of searching for the same git commands over and over, here’s a tool that’ll make your searches more efficient!</p>



<p>Onboard, organize, and bring your team up to speed in a jiffy.&nbsp;<a target="_blank" rel="noreferrer noopener" href="https://itr-links.stackoverflow.email/u/click?_t=3603a3d8f3104ca5bd7015a5845f7fb7&amp;_m=J2j24lxDQTEuwPd5Cqu5ugxEP4Nup0Hd&amp;_e=tvjhMrv7atYcgrppTk1g939n0TOMqK8VK0FIJna3k3KJASzVGae_sX5sf3KPi1hf2i5bxdA9xhH1f-iiMOO7ZFhn7xzAMFIbYnBhpTVT4YaVxNFzFGdAHiiEmx7YErIIVxBKkYUg6iknFjIhWONGTkIJn8IqBwnVV0l3yY7ScIAISOmXKMdnUAqYDRZbTBMJIkKY_QpH6yZNU_eh54wXqDW8Wpo2teMbvQF4Xm7qqXJd83J9ZY2IcjPlLJTDAm59hcKcidFcXov0SI1SA2sdJyQvN3-FBHLcc6AOGJQuveBkeTVp2-deuu3Ntnjx81ZzrM2rO56BYZb0_0JMMxOo0T1dQmOSzvTyeYRljnArFYMAOnBwZPb7gsBCwG0r13Z9YZh9Whu6zwJWSvKiJLX8Eg%3D%3D">Try Stack Overflow for Teams</a>.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/10/15/the-overflow-95-image-search-but-for-any-object-irl/">The Overflow #95: Image search, but for any object IRL</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 https://stackoverflow.blog/2021/10/15/the-overflow-95-image-search-but-for-any-object-irl/feed/ 0 18934 Podcast 384: Can AI solve car accidents and find you a parking space? https://stackoverflow.blog/2021/10/15/podcast-384-can-ai-solve-car-accidents-and-find-you-a-parking-space/ https://stackoverflow.blog/2021/10/15/podcast-384-can-ai-solve-car-accidents-and-find-you-a-parking-space/#comments Ryan Donovan Fri, 15 Oct 2021 04:40:00 +0000 The Stack Overflow Podcast se-stackoverflow se-tech the stack overflow podcast https://stackoverflow.blog/?p=18929 <p>Maybe cars won't drive you home, but with AI and crowdsourcing, maybe they can avoid driving us crazy. </p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/10/15/podcast-384-can-ai-solve-car-accidents-and-find-you-a-parking-space/">Podcast 384: Can AI solve car accidents and find you a parking space?</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 
<p>In this episode, we chat with Eran Shir, CEO of Nexar, a company that provides smart dashcams. Using machine learning and the power of crowdsourcing, Nexar aims to help everyone drive smarter without sacrificing privacy.</p>



<iframe loading="lazy" height="200px" width="100%" frameborder="no" scrolling="no" seamless="" src="https://player.simplecast.com/59705111-dd0a-4697-b7e6-21da414a6274?dark=false"></iframe>



<h2 id="h-show-notes">Show notes</h2>



<p>Graybeard conference alert! Eran and Ryan both started their technology journeys on the venerable <a href="https://www.commodore.ca/commodore-products/commodore-64-the-best-selling-computer-in-history/">Commodore 64</a>.&nbsp;</p>



<p>During his academic days, Eran helped to map all the BGP (background gateway protocol) gateways in the world. This got a&nbsp;<a href="https://www.theverge.com/2021/10/4/22709260/what-is-bgp-border-gateway-protocol-explainer-internet-facebook-outage" target="_blank" rel="noreferrer noopener">fair bit of press recently</a>&nbsp;during the six hour Facebook outage.</p>



<p><a href="https://www.getnexar.com/">Nexar</a> provides smart dashcams and an app that help cars understand the roads around them.&nbsp;</p>



<p>While networked cameras on every car could be a privacy nightmare, Nexar says that they have&nbsp;<a href="https://stackoverflow.blog/2021/07/19/privacy-is-an-afterthought-in-the-software-lifecycle-that-needs-to-change/" target="_blank" rel="noreferrer noopener">privacy as a foundational&nbsp;part of the SDLC</a>.</p>



<p><a href="https://the-stack-overflow-podcast.simplecast.com/episodes/can-ai-solve-car-accidents-and-find-you-a-parking-space/transcript/">TRANSCRIPT</a></p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/10/15/podcast-384-can-ai-solve-car-accidents-and-find-you-a-parking-space/">Podcast 384: Can AI solve car accidents and find you a parking space?</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 https://stackoverflow.blog/2021/10/15/podcast-384-can-ai-solve-car-accidents-and-find-you-a-parking-space/feed/ 3 18929 Why solve a problem twice? Design patterns let you apply existing solutions to your code https://stackoverflow.blog/2021/10/13/why-solve-a-problem-twice-design-patterns-let-you-apply-existing-solutions-to-your-code/ https://stackoverflow.blog/2021/10/13/why-solve-a-problem-twice-design-patterns-let-you-apply-existing-solutions-to-your-code/#comments Giridhar Talla Wed, 13 Oct 2021 13:59:46 +0000 Code for a Living design patterns se-stackoverflow se-tech software development https://stackoverflow.blog/?p=18919 <p>Software design patterns are like best practices employed by many experienced software developers. You can use design patterns to make your application scalable and flexible.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/10/13/why-solve-a-problem-twice-design-patterns-let-you-apply-existing-solutions-to-your-code/">Why solve a problem twice? Design patterns let you apply existing solutions to your code</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 
<p>The most satisfying problems in software engineering are those that no one has solved before. Cracking a unique problem is something that you can use in job interviews and talk about in conferences. But the reality is that the majority of challenges you face will have already been solved. You can use those solutions to better your own software.&nbsp;</p>



<p>Software design patterns are typical solutions for the reoccurring design problems in software engineering. They&#8217;re like the best practices employed by many experienced software developers. You can use design patterns to make your application <strong>scalable</strong> and <strong>flexible</strong>.&nbsp;</p>



<p>In this article, you&#8217;ll discover what design patterns are and how you can apply them to develop better software applications, either from the start or through refactoring your existing code.</p>



<p><strong>Note:</strong> Before learning design patterns, you should have a basic understanding of object-oriented programming.</p>



<h2 id="h-what-are-design-patterns">What are design patterns?</h2>



<p><a href="https://en.wikipedia.org/wiki/Software_design_pattern">Design patterns</a> are solutions to commonly occurring design problems in developing flexible software using <a href="https://en.wikipedia.org/wiki/Object-oriented_programming">object-oriented programming</a>. Design patterns typically use classes and objects, but you can also implement some of them using <a href="https://en.wikipedia.org/wiki/Functional_programming">functional programming</a>. They define how classes should be structured and how they should communicate with one another in order to solve specific problems.&nbsp;</p>



<p>Some beginners may mix up design patterns and <a href="https://en.wikipedia.org/wiki/Algorithm">algorithms</a>. While an algorithm is a well-defined set of instructions, a design pattern is a higher-level description of a solution. You can implement a design pattern in various ways, whereas you must follow the specific instructions in an algorithm. They don’t solve the problem; they solve the <em>design</em> of the solution.&nbsp;</p>



<p>Design patterns are <strong>not</strong> blocks of code you can copy and paste to implement. They are like frameworks of solutions with which one can solve a specific problem.</p>



<h2 id="h-classification-of-design-patterns">Classification of design patterns</h2>



<p>The book, <a href="https://en.wikipedia.org/wiki/Design_Patterns"><em>Design Patterns- Elements of Reusable Object-Oriented Software</em></a> written by the <a href="http://wiki.c2.com/?GangOfFour">Gang of Four</a> (Erich Gamma, John Vlissides, Ralph Johnson, and Richard Helm) introduced the idea of design patterns in software development. The book contains 23 design patterns to solve a variety of object-oriented design problems. These patterns are a toolbox of tried and tested solutions for various common problems that you may encounter while developing software applications.</p>



<p>Design patterns vary according to their complexity, level of detail, and scope of applicability for the whole system. They can be classified into three groups based on their purpose:</p>



<ul><li><strong>Creational patterns</strong> describe various methods for creating objects to increase code flexibility and reuse.</li><li><strong>Structural patterns</strong> describe relations between objects and classes in making them into complex structures while keeping them flexible and efficient.</li><li><strong>Behavioral patterns</strong> define how objects should communicate and interact with one another.</li></ul>



<h2 id="h-why-should-you-use-design-patterns">Why should you use design patterns?</h2>



<p>You can be a professional software developer even if you don&#8217;t know a single design pattern. You may be using some design patterns without even knowing them. But knowing design patterns and how to use them will give you an idea of solving a particular problem using the best design principles of object-oriented programming. You can refactor complex objects into simpler code segments that are easy to implement, modify, test, and reuse. You don’t need to confine yourself to one specific programming language; you can implement design patterns in any programming language. They represent the idea, not the implementation.</p>



<p>Design patterns are all about the code. They make you follow the best design principles of software development, such as the <a href="https://en.wikipedia.org/wiki/Open%E2%80%93closed_principle">open/closed principle</a> (<em>objects should be open for extension but closed for modification</em>) and the <a href="https://en.wikipedia.org/wiki/Single_responsibility_principle">single responsibility principle</a> (<em>A class should have only one reason to change</em>). This <a href="https://medium.com/@peterlee2068/software-design-principles-every-programmer-should-know-c164a83c6f87">article</a> discusses design principles in greater detail.</p>



<p>You can make your application more flexible by using design patterns that break it into reusable code segments. You can add new features to your application without breaking the existing code at any time. Design patterns also enhance the readability of code; if someone wants to extend your application, they will understand the code with little difficulty.</p>



<h2 id="h-what-are-useful-design-patterns">What are useful design patterns?</h2>



<p>Every design pattern solves a specific problem. You can use it in that particular situation. When you use design patterns in the wrong context, your code appears complex, with many classes and objects. The following are some examples of the most commonly used design patterns.</p>



<h3 id="h-singleton-design-pattern">Singleton&nbsp;design pattern</h3>



<p>Object oriented code has a bad reputation for being cluttered. How can you avoid creating large numbers of unnecessary objects? How can you limit the number of instances of a class? And how can a class control its instantiation?</p>



<p>Using a singleton pattern solves these problems. It’s a creational design pattern that describes how to define classes with only a single instance that will be accessed globally. To implement the singleton pattern, you should make the constructor of the main class private so that it is only accessible to members of the class and create a static method (<code>getInstance</code>) for object creation that acts as a constructor.</p>



<figure class="wp-block-image size-large"><img loading="lazy" width="910" height="630" src="https://149351115.v2.pressablecdn.com/wp-content/uploads/2021/10/singleton-pattern-910x630.png" alt="" class="wp-image-18938" srcset="https://149351115.v2.pressablecdn.com/wp-content/uploads/2021/10/singleton-pattern-910x630.png 910w , https://149351115.v2.pressablecdn.com/wp-content/uploads/2021/10/singleton-pattern-300x208.png 300w , https://149351115.v2.pressablecdn.com/wp-content/uploads/2021/10/singleton-pattern-768x532.png 768w , https://149351115.v2.pressablecdn.com/wp-content/uploads/2021/10/singleton-pattern.png 1020w " sizes="(max-width: 910px) 100vw, 910px" /></figure>



<p>Here’s the implementation of the singleton pattern in Python. </p>



<pre class="s-code-block wp-block-code"><code># Implementation of the Singleton Pattern

class Singleton(object):
    _instance = None
    def __init__(self):
        raise RuntimeError('Call getInstance() instead')

    @classmethod
    def getInstance(cls):
        if cls._instance is None:
            print('Creating the object')
            cls._instance = super().__new__(cls)
        return cls._instance</code></pre>



<p>The above code is the traditional way to implement the singleton pattern, but you can make it easier by using <code>__new__</code> or creating a <code>metaclass</code>).</p>



<p>You should use this design pattern only when you are <strong>100%</strong> certain that your application requires only a single instance of the main class. Singleton pattern has several drawbacks compared to other design patterns:&nbsp;</p>



<ul><li>You should not define something in the <em>global</em> scope but singleton pattern provides globally accessible instance.&nbsp;</li><li>It violates the Single-responsibility principle.&nbsp;</li></ul>



<p>Check out some more <a href="https://stackoverflow.com/questions/137975/what-are-drawbacks-or-disadvantages-of-singleton-pattern">drawbacks of using a singleton pattern</a>.</p>



<h3 id="h-decorator-design-pattern">Decorator design pattern &nbsp;</h3>



<p>If you’re following SOLID principles (and in general, you should), you’ll want to create objects or entities that are open for extension but closed for modification. How can you extend the functionality of an object at run-time? How can you extend an object’s behavior without affecting the other existing objects?<br>You might consider using <a href="https://en.wikipedia.org/wiki/Inheritance_(object-oriented_programming)">inheritance</a> to extend the behavior of an existing object. However, inheritance is static. You can’t modify an object at runtime. Alternatively, you can use the decorator pattern to add additional functionality to objects (subclasses) at runtime without changing the parent class. The <a href="https://en.wikipedia.org/wiki/Decorator_pattern">decorator pattern</a> (<em>also known as a wrapper</em>) is a structural design pattern that lets you cover an existing class with multiple wrappers.</p>



<figure class="wp-block-image"><img src="https://lh5.googleusercontent.com/KkWqw_uFRQFxMGPlkcHzPXuXo0RPJXUuZb2xv3O4OpqRWbySRUlTc5O_2d0gpXf4PmBJCzthnFTXb-9O_jW0mlXU_ohgS5AfBcymvV4xws_BtqB-qtOvaNQHLuInTHyroGgTg62t=s0" alt=""/></figure>



<p>For wrappers, it employs abstract classes or interfaces through <a href="https://en.wikipedia.org/wiki/Object_composition">composition</a> (instead of inheritance). In composition, one object contains an instance of other classes that implement the desired functionality rather than inheriting from the parent class. Many design patterns, including the decorator, are based on the principle of composition. Check out <a href="https://en.wikipedia.org/wiki/Composition_over_inheritance">why you should use composition over inheritance</a>.</p>



<pre class="s-code-block wp-block-code"><code># Implementing decorator pattern

class Component():

  def operation(self):
    pass

class ConcreteComponent(Component):

  def operation(self):
      return 'ConcreteComponent'

class Decorator(Component):

  _component: Component = None

  def __init__(self, component: Component):
      self._component = component

  @property
  def component(self):
    return self._component


  def operation(self):
      return self._component.operation()

class ConcreteDecoratorA(Decorator):

  def operation(self):
      return f"ConcreteDecoratorA({self.component.operation()})"


class ConcreteDecoratorB(Decorator):

  def operation(self):
      return f"ConcreteDecoratorB({self.component.operation()})"


simpleComponent = ConcreteComponent()
print(simpleComponent.operation())

# decorators can wrap simple components as well as the other decorators also.
decorator1 = ConcreteDecoratorA(simple)
print(decorator1.operation())

decorator2 = ConcreteDecoratorB(decorator1)
print(decorator2.operation())</code></pre>



<p>The above code is the classic way of implementing the decorator pattern. You can also implement it using functions.&nbsp;</p>



<p>The decorator pattern implements the single-responsibility principle. You can split large classes into several small classes, each implementing a specific behavior and extend them afterward. Wrapping the decorators with other decorators increases the complexity of code with multiple layers. Also, it is difficult to remove a specific wrapper from the wrappers&#8217; stack.</p>



<h3 id="h-strategy-design-pattern">Strategy design pattern </h3>



<p>How can you change the algorithm at the run-time? You might tend to use conditional statements. But if you have many variants of algorithms, using conditionals makes our main class verbose. How can you refactor these algorithms to be less verbose?</p>



<p>The <a href="https://en.wikipedia.org/wiki/Strategy_pattern">strategy pattern</a> allows you to change algorithms at runtime. You can avoid using conditional statements inside the main class and refactor the code into separate strategy classes. In the strategy pattern, you should define a family of algorithms, <a href="https://en.wikipedia.org/wiki/Encapsulation_(computer_programming)#:~:text=encapsulation%20refers%20to%20the%20bundling%20of%20data">encapsulate</a> each one and make them interchangeable at runtime.&nbsp;</p>



<figure class="wp-block-image"><img src="https://lh4.googleusercontent.com/5XX09xjl_yW_XFOXARbUn0z21lzlSiHZHhmLh5fjU2w69MEVMxDo_C6kKv8aMI-w32FBZocoo9M9LWXPDSftsUr5oHzzGr2ox8-x8QN1aPS8sD8B53sRHqsbhuAKABocgFz2lxHE=s0" alt=""/></figure>



<p>You can easily implement the strategy pattern by creating separate classes for algorithms. You can also implement different strategies as functions instead of using classes.&nbsp;</p>



<p>Here’s a typical implementation of the strategy pattern:</p>



<pre class="s-code-block wp-block-code"><code># Implementing strategy pattern
from abc import ABC, abstractmethod

class Strategy(ABC):
    @abstractmethod
    def execute(self):
        pass


class ConcreteStrategyA(Strategy):
    def execute(self):
        return "ConcreteStrategy A"


class ConcreteStrategyB(Strategy):
    def execute(self):
        return "ConcreteStrategy B"


class Default(Strategy):
    def execute(self):
        return "Default"


class Context:
    strategy: Strategy

    def setStrategy(self, strategy: Strategy = None):
        if strategy is not None:
            self.strategy = strategy
        else:
            self.strategy = Default()

    def executeStrategy(self):
        print(self.strategy.execute())


## Example application
appA = Context()
appB = Context()
appC = Context()

appA.setStrategy(ConcreteStrategyA())
appB.setStrategy(ConcreteStrategyB())
appC.setStrategy()

appA.executeStrategy()
appB.executeStrategy()
appC.executeStrategy()</code></pre>



<p>In the above code snippet, the client code is simple and straightforward. But in real-world application, the context changes depend on user actions, like when they click a button or change the level of the game. For example, in a chess application, the computer uses different strategy when you select the level of difficulty.</p>



<p>It follows the single-responsibility principle as the massive content main (<code>context</code>) class is divided into different strategy classes. You can add as many additional strategies as you want while keeping the main class unchanged (open/closed principle). It increases the flexibility of our application. It would be best to use this pattern when your main class has <strong>many</strong> conditional statements that switch between different variants of the same algorithm. However, if your code contains only a few algorithms, there is no need to use a strategy pattern. It just makes your code look complicated with all of the classes and objects.</p>



<h3 id="h-state-design-pattern">State&nbsp;design pattern </h3>



<p>Object oriented programming in particular has to deal with the state that the application is currently in. How can you change an object’s behavior based on its internal state? What is the best way to define state-specific behavior?</p>



<p><a href="https://en.wikipedia.org/wiki/State_pattern">The state pattern</a> is a behavioral design pattern. It provides an alternative approach to using massive conditional blocks for implementing state-dependent behavior in your main class. Your application behaves differently depending on its internal state, which a user can change at runtime. You can design <a href="https://en.wikipedia.org/wiki/Finite-state_machine">finite state machines</a> using the state pattern. In the state pattern, you should define separate classes for each state and add transitions between them.</p>



<figure class="wp-block-image"><img src="https://lh6.googleusercontent.com/3RqsH7oecQ7Q3oKwNLN9o4xAILykX7jcwyzcvbJTPTJTQKpFKfyIps-wvchXheGIO5hv8ytfePGxOWXmC7gNSe7k_kiYM8ndxIY0BlRj_SRX4awb8feYjIb2jzXsfnX0zmDBx21x=s0" alt=""/></figure>



<pre class="s-code-block wp-block-code"><code># implementing state pattern

from __future__ import annotations
from abc import ABC, abstractmethod


class Context:

    _state = None

    def __init__(self, state: State):
        self.setState(state)

    def setState(self, state: State):

        print(f"Context: Transitioning to {type(state).__name__}")
        self._state = state
        self._state.context = self

    def doSomething(self):
        self._state.doSomething()


class State(ABC):
    @property
    def context(self):
        return self._context

    @context.setter
    def context(self, context: Context):
        self._context = context

    @abstractmethod
    def doSomething(self):
        pass


class ConcreteStateA(State):
    def doSomething(self):
        print("The context is in the state of ConcreteStateA.")
        print("ConcreteStateA now changes the state of the context.")
        self.context.setState(ConcreteStateB())


class ConcreteStateB(State):
    def doSomething(self):
        print("The context is in the state of ConcreteStateB.")
        print("ConcreteStateB wants to change the state of the context.")
        self.context.setState(ConcreteStateA())


# example application

context = Context(ConcreteStateA())
context.doSomething()
context.doSomething()</code></pre>



<p>State pattern follows both the single-responsibility principle as well as the open/closed principle. You can add as many states and transitions as you want without changing the main class. The state pattern is very similar to the strategy pattern, but a strategy is unaware of other strategies, whereas a state is aware of other states and can switch between them. If your class (or state machine) has a few states or rarely changes, you should avoid using the state pattern.</p>



<h3 id="h-command-design-pattern">Command design pattern </h3>



<p><a href="https://en.wikipedia.org/wiki/Command_pattern">The command pattern</a> is a behavioral design pattern that encapsulates all the information about a request into a separate <code>command</code> object. Using the command pattern, you can store multiple commands in a class to use them over and over. It lets you parameterize methods with different requests, delay or queue a request’s execution, and support undoable operations. It increases the flexibility of your application.</p>



<figure class="wp-block-image"><img src="https://lh5.googleusercontent.com/ydN9HOwOpD5qIiUqFmo5LdHieth5llEfK5WzWi7vUsGMHyI28Z53Au6yQQH5SOXKHNEmoUhzWpAQgvVHpZwjGIRUqIa_DNdjf4qvxRFIfmfSY-qlRNlFMdDOekOnofKfXVzOr6y-=s0" alt=""/></figure>



<p>A command pattern implements the single-responsibility principle, as you have divided the request into separate classes such as <code>invokers</code>, <code>commands</code>, and <code>receivers</code>. It also follows the open/closed principle. You can add new command objects without changing the previous commands.</p>



<p>Suppose you want to implement reversible operations (like undo/redo) using a command pattern. In that case, you should maintain a command history: a stack containing all executed command objects and the application’s state. It consumes a lot of RAM, and sometimes it is impossible to implement an efficient solution. You should use the command pattern if you have many commands to execute; otherwise, the code may become more complicated since you’re adding a separate layer of commands between senders and receivers.</p>



<h2 id="h-conclusion">Conclusion</h2>



<p>According to most software design principles including the well-established SOLID principles, you should write reusable code and extendable applications. Design patterns allow you to develop flexible, scalable, and maintainable object-oriented software using best practices and design principles. All the design patterns are tried and tested solutions for various recurring problems. Even if you don&#8217;t use them right away, knowing about them will give you a better understanding of how to solve different types of problems in object-oriented design. You can implement the design patterns in any programming language as they are just the description of the solution, not the implementation.&nbsp;</p>



<p>If you’re going to build large-scale applications, you should consider using design patterns because they provide a better way of developing software. If you’re interested in getting to know these patterns better, consider implementing each design pattern in your favorite programming language.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/10/13/why-solve-a-problem-twice-design-patterns-let-you-apply-existing-solutions-to-your-code/">Why solve a problem twice? Design patterns let you apply existing solutions to your code</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 https://stackoverflow.blog/2021/10/13/why-solve-a-problem-twice-design-patterns-let-you-apply-existing-solutions-to-your-code/feed/ 21 18919 Podcast 383: A database built for a firehose https://stackoverflow.blog/2021/10/12/podcast-383-a-database-built-for-a-firehose/ https://stackoverflow.blog/2021/10/12/podcast-383-a-database-built-for-a-firehose/#comments Ryan Donovan Tue, 12 Oct 2021 04:40:00 +0000 The Stack Overflow Podcast big data databases se-stackoverflow se-tech the stack overflow podcast https://stackoverflow.blog/?p=18915 <p>In this episode, we chat with Stephen Goldberg and Kyle Bernhardy from HarperDB. Their startup was born of the firehose of Twitter data during sporting events, and now they have a database designed to scale well for real-time data. Show notes HarperDB is a startup that focuses on highly scalable databases that handle real-time data.&#160;…</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/10/12/podcast-383-a-database-built-for-a-firehose/">Podcast 383: A database built for a firehose</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 
<p>In this episode, we chat with Stephen Goldberg and Kyle Bernhardy from HarperDB. Their startup was born of the firehose of Twitter data during sporting events, and now they have a database designed to scale well for real-time data.</p>



<iframe loading="lazy" height="200px" width="100%" frameborder="no" scrolling="no" seamless="" src="https://player.simplecast.com/335cf193-ebcc-46fc-941d-2c181d8fa6ba?dark=false"></iframe>



<h2 id="h-show-notes">Show notes</h2>



<p>HarperDB is a startup that focuses on highly scalable databases that handle real-time data.&nbsp;</p>



<p>Harper is built on Node.js and Express with a little help from <a href="https://www.fastify.io/">Fastify</a>.&nbsp;</p>



<p>They know where they excel and where they don&#8217;t. High data throughput like &nbsp;gaming and vision, great! High data resolution and transactional software like financial applications, not so great. It&#8217;s speed over accuracy.&nbsp;</p>



<p>Instead of a Lifeboat badge today, we shared a relevant question: <a href="https://stackoverflow.com/questions/68128646/how-to-create-harperdb-table-with-lambda?r=SearchResults&amp;s=1|75.7602">Q: How to create HarperDB table with lambda.</a></p>



<p><a href="https://the-stack-overflow-podcast.simplecast.com/episodes/a-database-built-for-a-firehose/transcript">TRANSCRIPT</a></p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/10/12/podcast-383-a-database-built-for-a-firehose/">Podcast 383: A database built for a firehose</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 https://stackoverflow.blog/2021/10/12/podcast-383-a-database-built-for-a-firehose/feed/ 1 18915 Shift to remote work prompted more cybersecurity questions than any breach https://stackoverflow.blog/2021/10/11/shift-to-remote-work-prompted-more-cybersecurity-questions-than-any-breach/ https://stackoverflow.blog/2021/10/11/shift-to-remote-work-prompted-more-cybersecurity-questions-than-any-breach/#respond David Gibson Mon, 11 Oct 2021 14:59:35 +0000 #StackOverflowKnows Code for a Living cybersecurity se-security se-stackoverflow se-tech security https://stackoverflow.blog/?p=18900 <p>For this edition of Stack Overflow Knows, we did a deep dive into cybersecurity topics across Stack Overflow and Stack Exchange sites to spotlight trends and reflect on how conversations are evolving within the developer and technical community.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/10/11/shift-to-remote-work-prompted-more-cybersecurity-questions-than-any-breach/">Shift to remote work prompted more cybersecurity questions than any breach</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 
<p>Happy Cybersecurity Awareness Month! For this edition of Stack Overflow Knows, we did a deep dive into cybersecurity topics across Stack Overflow and Stack Exchange sites to spotlight trends and reflect on how conversations are evolving within the developer and technical community. We uncovered some findings—some surprising, some not so surprising. Check it out.</p>



<h2 id="h-activity-spikes-around-major-breaches">Activity spikes around major breaches</h2>



<p>Up until recently (see the next section), security-related activity across the public platform appeared to be tied to major breaches. Some of the most publicized breaches in internet history prompted spikes in cybersecurity-related questions.</p>



<figure class="wp-block-image size-full"><img loading="lazy" width="1200" height="628" src="https://149351115.v2.pressablecdn.com/wp-content/uploads/2021/10/cybersecurity-awareness-blog.png" alt="Time series chart company questions asked on Stack Overflow related to security and questions asked on comparing Security Stack Exchange site. Stack Overflow peak in early 2020 during the pandemic, and Information Security Stack Exchange questions peak in late 2016 after significant data breaches." class="wp-image-18902" srcset="https://149351115.v2.pressablecdn.com/wp-content/uploads/2021/10/cybersecurity-awareness-blog.png 1200w , https://149351115.v2.pressablecdn.com/wp-content/uploads/2021/10/cybersecurity-awareness-blog-300x157.png 300w , https://149351115.v2.pressablecdn.com/wp-content/uploads/2021/10/cybersecurity-awareness-blog-768x402.png 768w " sizes="(max-width: 1200px) 100vw, 1200px" /></figure>



<p>The initial spike and climb in questions on Stack Overflow and new users in the <a href="https://security.stackexchange.com/">Information Security Stack Exchange</a> came in 2011, following the Sony and Target breach disclosures. Another increase in questions and new users in the Information Security Stack Exchange followed the eBay and Home Depot breaches that made headlines in 2014. The biggest peak in questions and new users in the Information Security Stack Exchange came right after Yahoo! disclosed its 2013 breach in 2016 and later announced another larger breach at the end of the same year.</p>



<figure class="wp-block-image"><img src="https://lh3.googleusercontent.com/xAAemUaTp87zYgc7chGKCQFDlK8kZtnE7IfuJGU0c5V530BKLDz7J-ELas6T5GjRKGnJkznrXk8BCMP5B3aU5fsrnmPugnobehRm36gqC-oi7ukDU-aDLKfN3QfDEkecGfFVm_6Z=s0" alt="Time series chart company new users to Stack Overflow that asked a security question and new users on Information Security Stack Exchange site. Stack Overflow peaked in early 2020 during the pandemic reaching, and Information Security Stack Exchange questions peaked in late 2016 after significant data breaches reaching 3,000 users."/></figure>



<h2 id="h-the-pandemic-trumps-any-breach">The pandemic trumps any breach</h2>



<p>While one-off security incidents led to spikes of interest in security, none rivaled the global impact of a massive shift to remote work. The trend of increased questions and new user spikes following security incidents got disrupted in 2020. Stack Overflow saw an undeniable pandemic-related spike at the beginning of 2020 when the shift to remote work prompted a nearly 60% increase in questions related to authentication. The volume of security-related questions at the start of lockdown exceeded that of any year in Stack Overflow history.</p>



<figure class="wp-block-image"><img src="https://lh6.googleusercontent.com/yNmslpX1plGzheAsE0YwAZcaiaHJjmBakLqMWZSLwu8fkoyfCb0KbAhg_lbZq9qsz1Fhh7pWuSGYtxEeES9zBlPmc6RWQZ9M4Lv1LHDlraKQeQqSFDrZ67KO8AUIPoDKwZXB5_nh=s0" alt="Bar chart comparing questions asked on Stack Overflow related to security and questions asked on Information Security Stack Exchange site by year. Stack Overflow hit an all-time high in 2020 while Information Security Stack Exchange questions peaked in late 2016 and began to decline."/></figure>



<h2 id="h-exploited-vulnerabilities-trigger-the-most-developer-questions">Exploited vulnerabilities trigger the most developer questions</h2>



<p>What’s perhaps more interesting is the correlations we’re seeing when it comes to types of security incidents and volume of questions. We’re seeing the number of security-related questions increasing in tandem with the volume of exploited vulnerability-related breaches. In short, when there’s a breach due to a software vulnerability, cybersecurity-related questions within the developer community rise too. In the wake of a breach, it’s only natural to make sure you’re not at risk of suffering the same fate ASAP, but aren&#8217;t quite sure where to start. Quick, to Stack Overflow!</p>



<figure class="wp-block-image"><img src="https://lh6.googleusercontent.com/QXTAGjBPz0n_NHlq_Hl7_ER7NEWNcrdfl6SqDUl2Vi8pPmyKuh7Lkb5CIiFs_ySaHZo6_8nk7FeprGBbd_8P8RIbteEN8lesXOt2e4tlUgiwZXfoYx77A3EXXbJ7dwqO2No67ujD=s0" alt="Stacked bar chart comparing count of known data breaches by type and year; Exploited vulnerability, other and records stolen."/></figure>



<p>Source: <a href="https://www.informationisbeautiful.net/visualizations/worlds-biggest-data-breaches-hacks/">Information is Beautiful</a></p>



<figure class="wp-block-image size-full"><img loading="lazy" width="1200" height="628" src="https://149351115.v2.pressablecdn.com/wp-content/uploads/2021/10/cybersecurity-awareness-blog-5.png" alt="Stacked bar chart comparing the count of known data breaches against security-related questions asked." class="wp-image-18907" srcset="https://149351115.v2.pressablecdn.com/wp-content/uploads/2021/10/cybersecurity-awareness-blog-5.png 1200w , https://149351115.v2.pressablecdn.com/wp-content/uploads/2021/10/cybersecurity-awareness-blog-5-300x157.png 300w , https://149351115.v2.pressablecdn.com/wp-content/uploads/2021/10/cybersecurity-awareness-blog-5-768x402.png 768w " sizes="(max-width: 1200px) 100vw, 1200px" /></figure>



<h2 id="h-light-at-the-end-of-the-tunnel">Light at the end of the tunnel?</h2>



<p>There’s clear connections between highly-publicized breaches occurring and corresponding rises in security-related questions and new users for the Information Security Stack Exchange. Exploited software vulnerabilities trigger the most developer questions on the public platform. Yet, the onset of the pandemic and the shift to remote work prompted a higher volume of questions on Stack Overflow than any breach in platform history.</p>



<p>The battle to protect against threat actors will never subside, but there is an optimistic takeaway to be found here. We’re seeing a culture of learning in action. While vulnerabilities are inevitable, developers shifted from just reacting to breaches to proactively trying to secure everyone during the move to remote work. When a security incident happens, the Stack Overflow community asks questions and looks for answers. And as we all know, learning starts with asking a question.</p>



<p>We’d love to know what you think. If you have a suggestion for what we should explore next, <a href="mailto:soknows@stackoverflow.com">email us</a> or share on social with the hashtag #StackOverflowKnows.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/10/11/shift-to-remote-work-prompted-more-cybersecurity-questions-than-any-breach/">Shift to remote work prompted more cybersecurity questions than any breach</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 https://stackoverflow.blog/2021/10/11/shift-to-remote-work-prompted-more-cybersecurity-questions-than-any-breach/feed/ 0 18900 The Overflow #94: Automate away boring standups https://stackoverflow.blog/2021/10/08/the-overflow-94-automate-away-boring-standups/ https://stackoverflow.blog/2021/10/08/the-overflow-94-automate-away-boring-standups/#respond Ryan Donovan and Cassidy Williams Fri, 08 Oct 2021 13:00:00 +0000 The Overflow newsletter the overflow https://stackoverflow.blog/?p=18896 <p>Welcome to ISSUE #94 of The Overflow! This newsletter is by developers, for developers, written and curated by the Stack Overflow team and&#160;Cassidy Williams&#160;at&#160;Netlify. This week: how our joke keyboard became real, how we see the light from distant stars, and why any productivity software will eventually be used to play games. From the blog…</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/10/08/the-overflow-94-automate-away-boring-standups/">The Overflow #94: Automate away boring standups</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 
<p>Welcome to ISSUE #94 of The Overflow! This newsletter is by developers, for developers, written and curated by the Stack Overflow team and&nbsp;<a href="https://itr-links.stackoverflow.email/u/click?_t=3603a3d8f3104ca5bd7015a5845f7fb7&amp;_m=EoL62DB0PIGuXz8jH5uBuQ84lXlHlps2&amp;_e=_QiVw4xkxL6Kq_I-OU4afBnKfI77FjoIfX88HTVRZxPuTd2bnAMrrH9rcbsb0dWeVEF1qnpHf4xYVNc9DjG8B3SxoCwGD7YNwE1j5XUlAoVN5IWubZGRkJQZDmmaOZBv48jI4i91xWdFCil-LQ1NSRFjmqF5DoNWqj0-C-Jd-e6BG04-YOMtUtGjjvW4FlO4SiDdPs_9w2phRLlieyDSowbBJXd8neaip9JCBAeEhORiLVYGsioAE1W0vQlkjGKF">Cassidy Williams</a>&nbsp;at&nbsp;<a href="https://itr-links.stackoverflow.email/u/click?_t=3603a3d8f3104ca5bd7015a5845f7fb7&amp;_m=EoL62DB0PIGuXz8jH5uBuQ84lXlHlps2&amp;_e=_QiVw4xkxL6Kq_I-OU4afOZOM0oCqsuuy0jKIrvb1QwkHWIZOMWNPCK6iuSTMOLeVDuTWeKOcbbyBczybLGtoNQkE84uGWTIEgGhFcxEULL45YJLR4857Ii-0ehWwRpRtjVPtwUxxOtY9-B2oCRv3dmx-KEES0t57P4_TNE4xFT-W5TGiXBreKWRyHfSL-Ozr796X8rmwbKE4P01pm8iSRIwfptm3apXxzvS_usQlDNLQGeGDgkjk55n1OBtvYt6oHij-wFSi5PdDR16hvrYr7E3MKhupgD-zGOVEWxRdxJ-RcBKrj9bAExDUmk948bZeThbs8xuJpwrwNDQkq5QPw%3D%3D">Netlify</a>. This week: how our joke keyboard became real, how we see the light from distant stars, and why any productivity software will eventually be used to play games.</p>



<h2 id="h-from-the-blog">From the blog</h2>



<p><a href="https://stackoverflow.blog/2021/09/30/check-out-the-stack-exchange-sites-that-turned-10-years-old-in-q3/?utm_source=Iterable&amp;utm_medium=email&amp;utm_campaign=the_overflow_newsletter"><strong>Check out the Stack Exchange sites that turned 10 years old in Q3</strong></a>&nbsp;<em>stackoverflow.blog</em><br>Ten years on the internet is a long time. Let’s celebrate the Stack Exchange sites that recently hit that milestone.</p>



<p><a href="https://stackoverflow.blog/2021/09/29/automate-away-your-boring-standup-meetings/?utm_source=Iterable&amp;utm_medium=email&amp;utm_campaign=the_overflow_newsletter"><strong>Automate away your boring standup meetings</strong></a>&nbsp;<em>stackoverflow.blog</em><br>HCL Accelerate sweats the small stuff so your team can crush their Epics.</p>



<p><a href="https://stackoverflow.blog/2021/09/28/podcast-379-the-key-copy-paste-keyboard-macropad/?utm_source=Iterable&amp;utm_medium=email&amp;utm_campaign=the_overflow_newsletter"><strong>Podcast 379: Become a better coder…with this one weird click</strong></a>&nbsp;<em>stackoverflow.blog</em><br>Our copy-paste keyboard is no longer just an April Fools joke, it’s now a product you can actually buy!</p>



<p><a href="https://www.couchbase.com/products/developer-sdk/nodejs?utm_source=stack_overflow&amp;utm_medium=newsletter&amp;utm_id=q3_dev_awareness"><strong>Looking for official server SDKs for Node.js?</strong></a>&nbsp;<em>promotion</em><br>The Couchbase Node.js SDK is the default choice for JavaScript developers building applications with Node.js. Develop Node.js apps with agility, backed by a JSON database with Couchbase. Try it today.</p>



<h2 id="h-interesting-questions">Interesting questions</h2>



<p><a href="https://physics.stackexchange.com/questions/667714/how-does-light-from-distant-galaxies-reach-us?utm_source=Iterable&amp;utm_medium=email&amp;utm_campaign=the_overflow_newsletter"><strong>How does light from distant galaxies reach us?</strong></a>&nbsp;<em>physics.stackexchange.com</em><br>There’s nothing standing between us. Literally.</p>



<p><a href="https://security.stackexchange.com/questions/255448/can-i-safely-preview-a-short-link?utm_source=Iterable&amp;utm_medium=email&amp;utm_campaign=the_overflow_newsletter"><strong>Can I safely preview a short link?</strong></a>&nbsp;<em>security.stackexchange.com</em><br>Smaller does not equal safer.</p>



<p><a href="https://superuser.com/questions/1678356/launch-a-windows-executable-from-run-menu-in-a-single-word-or-two?utm_source=Iterable&amp;utm_medium=email&amp;utm_campaign=the_overflow_newsletter"><strong>Launch a windows executable from Run menu in a single word (or two)</strong></a>&nbsp;<em>superuser.com</em><br>Right idea, wrong menu.</p>



<p><a href="https://retrocomputing.stackexchange.com/questions/21878/which-computer-system-defined-the-ipv4-576-byte-datagram-limit?utm_source=Iterable&amp;utm_medium=email&amp;utm_campaign=the_overflow_newsletter"><strong>Which computer system defined the IPv4 576 byte datagram limit</strong></a>&nbsp;<em>retrocomputing.stackexchange.com</em><br>Get off my Arpanet, you durn kids!</p>



<h2 id="h-links-from-around-the-web">Links from around the web</h2>



<p><a href="https://mastery.games/post/board-gaming-in-figma/"><strong>Board gaming in Figma</strong></a>&nbsp;<em>mastery.games</em><br>Life… finds a way… and so do board games! Here’s an interesting post about turning a design tool into a board game.</p>



<p><a href="https://isamatov.com/react-antipatterns"><strong>React antipatterns to avoid</strong></a>&nbsp;<em>isamatov.com</em><br>Antipatterns in any codebase can be a pain. Learn how to prevent them early.</p>



<p><a href="https://www.smashingmagazine.com/2021/09/simplifying-form-styles-accent-color/"><strong>Simplifying form styles with accent-color&nbsp;</strong></a>&nbsp;<em>www.smashingmagazine.com</em><br>There’s a new property in CSS that makes it easier to roll out branding colors and schemes!</p>



<p><a href="https://dev.to/alichherawalla/creating-a-continuous-deployment-workflow-using-github-actions-to-deploy-your-application-to-ecs-4l78"><strong>Creating a continuous deployment workflow using Github Actions to deploy your application to ECS</strong></a>&nbsp;<em>dev.to</em><br>Continuous deployment helps you make sure that every merge has an artifact and uses the correct environment. Here’s a nice little article to get yourself set up with it!</p>



<p>Onboard, organize, and bring your team up to speed in a jiffy.&nbsp;<a target="_blank" rel="noreferrer noopener" href="https://itr-links.stackoverflow.email/u/click?_t=3603a3d8f3104ca5bd7015a5845f7fb7&amp;_m=J2j24lxDQTEuwPd5Cqu5ugxEP4Nup0Hd&amp;_e=tvjhMrv7atYcgrppTk1g939n0TOMqK8VK0FIJna3k3KJASzVGae_sX5sf3KPi1hf2i5bxdA9xhH1f-iiMOO7ZFhn7xzAMFIbYnBhpTVT4YaVxNFzFGdAHiiEmx7YErIIVxBKkYUg6iknFjIhWONGTkIJn8IqBwnVV0l3yY7ScIAISOmXKMdnUAqYDRZbTBMJIkKY_QpH6yZNU_eh54wXqDW8Wpo2teMbvQF4Xm7qqXJd83J9ZY2IcjPlLJTDAm59hcKcidFcXov0SI1SA2sdJyQvN3-FBHLcc6AOGJQuveBkeTVp2-deuu3Ntnjx81ZzrM2rO56BYZb0_0JMMxOo0T1dQmOSzvTyeYRljnArFYMAOnBwZPb7gsBCwG0r13Z9YZh9Whu6zwJWSvKiJLX8Eg%3D%3D">Try Stack Overflow for Teams</a>.</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/10/08/the-overflow-94-automate-away-boring-standups/">The Overflow #94: Automate away boring standups</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 https://stackoverflow.blog/2021/10/08/the-overflow-94-automate-away-boring-standups/feed/ 0 18896 Podcast 382: Wait, we’re all content moderators now? https://stackoverflow.blog/2021/10/08/podcast-382-wait-were-all-content-moderators-now/ https://stackoverflow.blog/2021/10/08/podcast-382-wait-were-all-content-moderators-now/#respond Ben Popper Fri, 08 Oct 2021 04:40:00 +0000 The Stack Overflow Podcast blockchain climate content moderation energy nft se-stackoverflow se-tech the stack overflow podcast https://stackoverflow.blog/?p=18898 <p>How many gigawatts does it take to mint a pixel?</p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/10/08/podcast-382-wait-were-all-content-moderators-now/">Podcast 382: Wait, we&#8217;re all content moderators now?</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 
<iframe loading="lazy" height="200px" width="100%" frameborder="no" scrolling="no" seamless src="https://player.simplecast.com/2e3751a5-b135-4836-a0fb-915fe7a0e3e4?dark=false"></iframe>



<p>This week, the home team discusses the environmental impact of blockchain technology, especially as it related to art and NFTs. We also explore the tensions around content moderation, and how users will find ways to turn nearly any opening for interaction into an opportunity for&#8230;free expression.</p>



<h2 id="h-episode-notes">Episode Notes</h2>



<p>Read more about the climate debate surrounding NFTs&nbsp;<a href="https://www.theverge.com/2021/3/15/22328203/nft-cryptoart-ethereum-blockchain-climate-change">here</a>.</p>



<p>We really enjoyed this piece:&nbsp;<a href="https://mux.com/blog/you-either-die-an-mvp-or-live-long-enough-to-build-content-moderation/">You either die an MVP, or live long enough to build content moderation.</a></p>



<p>You can find Ben on Twitter&nbsp;<a href="https://twitter.com/benpopper">here</a>.</p>



<p>You can send ideas for blog posts to Ryan Donovan at our&nbsp;<a href="https://dashboard.simplecast.com/accounts/bb95ce82-16f5-4532-866c-0aa5719e5fb8/shows/6fa1d34c-502b-4abf-bd82-483804006e0b/episodes/36fd1313-49b4-4e9b-aa0f-927be79361df/pitches@stackoverflow.com">pitch box</a>.</p>



<p>You can find Cassidy on Twitter&nbsp;<a href="https://twitter.com/cassidoo">here</a>&nbsp;and read the newsletter she helps us curate&nbsp;<a href="https://stackoverflow.blog/newsletter/">here</a>.</p>



<p>You can find Ceora on Twitter <a href="https://twitter.com/ceeoreo_">here</a> and check out more about Apollo GraphQL <a href="https://www.apollographql.com/">here</a>.</p>



<p><a href="https://the-stack-overflow-podcast.simplecast.com/episodes/nft-crypto-blockchain-energy-climate-change-content-moderation">TRANSCRIPT</a></p>
<p>The post <a rel="nofollow" href="https://stackoverflow.blog/2021/10/08/podcast-382-wait-were-all-content-moderators-now/">Podcast 382: Wait, we&#8217;re all content moderators now?</a> appeared first on <a rel="nofollow" href="https://stackoverflow.blog">Stack Overflow Blog</a>.</p>
 https://stackoverflow.blog/2021/10/08/podcast-382-wait-were-all-content-moderators-now/feed/ 0 18898